) # Sum catch across species
catch_list_tmp
unlist(catch_list_tmp)
flt_spp
EMs_from_OM_Sim_1 <- readRDS("D:/GitHub/Rceattle/check/EMs_from_OM_Sim_1.rds")
library(Rceattle)
library(dplyr)
################################################
# Data
################################################
# Example
# To run the 2017 single species assessment for the Bering Sea, a data file must first be loaded:
data(BS2017SS) # ?BS2017SS for more information on the data
BS2017SS$projyr <- 2060
data("BS2017MS") # Note: the only difference is the residual mortality (M1_base) is lower
BS2017MS$projyr <- 2060
BS2017SS$fleet_control$proj_F_prop <-rep(1,7)
BS2017MS$fleet_control$proj_F_prop <- rep(1, 7)
#
# BS2017SS$fsh_biom <- BS2017SS$fsh_biom %>%
#   mutate(Catch = ifelse(Year > 2000 & grep( "Cod", BS2017SS$fsh_biom$Fleet_name), Catch * 4,
#                         Catch)
#   )
################################################
# Estimate OMs
################################################
ss_run <- Rceattle::fit_mod(data_list = BS2017SS,
inits = NULL, # Initial parameters = 0
file = NULL, # Don't save
estimateMode = 1, # Estimate hindcast only
random_rec = FALSE, # No random recruitment
msmMode = 0, # Single species mode
phase = "default",
verbose = 1,
initMode = 2)
# - Single-species fixed M
alpha = exp(c(4.121, 2.119, 1.553))
ss_run_ricker <- Rceattle::fit_mod(
data_list = BS2017SS,
inits = NULL, # Initial parameters = 0
file = NULL, # Don't save
estimateMode = 1, # Estimate hindcast only
M1Fun = build_M1(M1_model = 0,
M1_use_prior = FALSE,
M2_use_prior = FALSE),
recFun = build_srr(srr_fun = 0,
srr_pred_fun = 3,
proj_mean_rec = FALSE,
srr_est_mode = 1,
srr_prior_mean = alpha,
srr_prior_sd = 0.2),
random_rec = FALSE, # No random recruitment
msmMode = 0, # Single species mode
phase = "default",
verbose = 1,
initMode = 2)
# -- NPFMC Tier 3
ss_run_Tier3 <- Rceattle::fit_mod(data_list = BS2017SS,
inits = ss_run$estimated_params,
estimateMode = 0, # Run projection only
HCR = build_hcr(HCR = 5, # Tier3 HCR
FsprTarget = 0.4, # F40%
FsprLimit = 0.35, # F35%
Plimit = c(0.2, 0.2, 0), # No fishing when SB<SB20
Alpha = 0.05),
msmMode = 0, # Single species mode
verbose = 1,
initMode = 2)
ss_run_dynamicTier3 <- Rceattle::fit_mod(data_list = BS2017SS,
inits = ss_run$estimated_params, # Initial parameters from ss_run
estimateMode = 0, # Run projection only
HCR = build_hcr(HCR = 5, # Tier3 HCR
DynamicHCR = TRUE, # Use dynamic reference points
FsprTarget = 0.4, # F40%
FsprLimit = 0.35, # F35%
Plimit = c(0.2, 0.2, 0), # No fishing when SB<SB20
Alpha = 0.05),
msmMode = 0, # Single species mode
verbose = 1,
initMode = 2)
plot_depletionSSB(list(ss_run, ss_run_Tier3, ss_run_dynamicTier3), incl_proj = TRUE, model_names = 1:3)
plot_ssb(list(ss_run, ss_run_Tier3, ss_run_dynamicTier3), incl_proj = TRUE)
check <- ss_run_dynamicTier3
check$quantities$biomassSSB <- check$quantities$DynamicSB0
plot_ssb(list(ss_run, ss_run_Tier3, check, ss_run_dynamicTier3), incl_proj = TRUE)
ss_run_dynamicTier3$quantities$DynamicNByage0[1,1,1,1:10]
ss_run_dynamicTier3$quantities$R[1,1:10]
mod_list <- list(ss_run_dynamicTier3, ss_run_ricker, EMs_from_OM_Sim_1$OM, EMs_from_OM_Sim_1$EM$`OM_Sim_1. EM_yr_2060`)
plot_ssb(mod_list, incl_proj = TRUE)
plot_stock_recruit(mod_list)
plot_depletionSSB(mod_list, incl_proj = TRUE)
plot_ssb(mod_list, incl_proj = TRUE)
plot_stock_recruit(mod_list)
plot_depletionSSB(mod_list, incl_proj = TRUE)
install.packages("D:/GitHub/Rceattle/Rceattle_1.0.0.0000.tar.gz", repos = NULL, type = "source")
install.packages("D:/GitHub/Rceattle/Rceattle_1.0.0.0000.tar.gz", repos = NULL, type = "source")
library(Rceattle)
library(Rceattle)
mean(rlnorm(1000,1,0.2))
mean(rlnorm(1000,1,0.2))
mean(rlnorm(1000,log(10),0.2))
mean(rlnorm(1000,log(10),0.2))
mean(rlnorm(1000,log(10),0.2))
mean(rlnorm(1000,log(10),0.2))
mean(rlnorm(1000,log(10),0.2))
mean(rlnorm(10000,log(10),0.2))
mean(rlnorm(10000,log(10)-0.2^2/2,0.2))
mean(rlnorm(10000,log(10)-0.2^2/2,0.2))
mean(rlnorm(10000,log(10)-0.2^2/2,0.2))
mean(rlnorm(10000,log(10)-0.2^2/2,0.2))
mean(rlnorm(10000,log(10)-0.2^2/2,0.2))
mean(rlnorm(10000,log(10)-0.2^2/2,0.2))
mean(rlnorm(10000,log(10)-0.2^2/2,0.2))
(rlnorm(10000,log(10)-0.2^2/2,0.2))
(plnorm(10000,log(10)-0.2^2/2,0.2))
(plnorm(10,log(10)-0.2^2/2,0.2))
(plnorm(log(10),log(10)-0.2^2/2,0.2))
(plnorm((10),log(10)-0.2^2/2,0.2))
(plnorm((10),log(10),0.2))
library(Rceattle)
library(dplyr)
################################################
# Data
################################################
# Example
# To run the 2017 single species assessment for the Bering Sea, a data file must first be loaded:
data(BS2017SS) # ?BS2017SS for more information on the data
BS2017SS$projyr <- 2060
BS2017SS$fleet_control$Estimate_q
BS2017SS$fleet_control$Q_prior
library(Rceattle)
library(Rceattle)
library(dplyr)
################################################
# Data
################################################
# Example
# To run the 2017 single species assessment for the Bering Sea, a data file must first be loaded:
data(BS2017SS) # ?BS2017SS for more information on the data
BS2017SS$projyr <- 2060
data("BS2017MS") # Note: the only difference is the residual mortality (M1_base) is lower
BS2017MS$projyr <- 2060
BS2017SS$fleet_control$proj_F_prop <-rep(1,7)
BS2017MS$fleet_control$proj_F_prop <- rep(1, 7)
#
# BS2017SS$fsh_biom <- BS2017SS$fsh_biom %>%
#   mutate(Catch = ifelse(Year > 2000 & grep( "Cod", BS2017SS$fsh_biom$Fleet_name), Catch * 4,
#                         Catch)
#   )
################################################
# Estimate OMs
################################################
ss_run <- Rceattle::fit_mod(data_list = BS2017SS,
inits = NULL, # Initial parameters = 0
file = NULL, # Don't save
estimateMode = 1, # Estimate hindcast only
random_rec = FALSE, # No random recruitment
msmMode = 0, # Single species mode
phase = "default",
verbose = 1,
initMode = 2)
# -- NPFMC Tier 3
ss_run_Tier3 <- Rceattle::fit_mod(data_list = BS2017SS,
inits = ss_run$estimated_params,
estimateMode = 0, # Run projection only
HCR = build_hcr(HCR = 5, # Tier3 HCR
FsprTarget = 0.4, # F40%
FsprLimit = 0.35, # F35%
Plimit = c(0.2, 0.2, 0), # No fishing when SB<SB20
Alpha = 0.05),
msmMode = 0, # Single species mode
verbose = 1,
initMode = 2)
library(Rceattle)
library(Rceattle)
library(Rceattle)
library(Rceattle)
library(Rceattle)
################################################
# Data
################################################
# Example
# To run the 2017 single species assessment for the Bering Sea, a data file must first be loaded:
data(BS2017SS) # ?BS2017SS for more information on the data
BS2017SS$projyr <- 2060
# Write data to excel
Rceattle::write_data(data_list = BS2017SS, file = "BS2017SS.xlsx")
# Change the data how you want in excel
# Read the data back in
mydata <- Rceattle::read_data( file = "BS2017SS.xlsx")
################################################
# Estimation
################################################
# Then the model can be fit by setting `msmMode = 0` using the `Rceattle` function:
mydata$fleet_control$proj_F_prop <-rep(1,7)
ss_run <- Rceattle::fit_mod(data_list = mydata,
inits = NULL, # Initial parameters = 0
file = NULL, # Don't save
estimateMode = 1, # Estimate hindcast only
random_rec = FALSE, # No random recruitment
msmMode = 0, # Single species mode
phase = "default",
verbose = 1)
# # Estimate single-species and estimate M
# mydata_M <- mydata
# mydata_M$est_M1 <- c(1,1,1)
# ss_run_M <- Rceattle::fit_mod(data_list = mydata_M,
#                               inits = ss_run$estimated_params, # Initial parameters = 0
#                               file = NULL, # Don't save
#                               estimateMode = 1, # Estimate hindcast only
#                               random_rec = FALSE, # No random recruitment
#                               msmMode = 0, # Single species mode
#                               phase = "default",
#                               verbose = 1)
# For the a multispecies model starting from the single species parameters, the following can be specified to load the data:
data("BS2017MS") # Note: the only difference is the residual mortality (M1_base) is lower
BS2017MS$est_M1 <- c(1,1,1) # Estimate residual M
BS2017MS$projyr <- 2060
BS2017MS$fleet_control$proj_F_prop <-rep(1,7)
ms_run <- Rceattle::fit_mod(data_list = BS2017MS,
inits = ss_run_M$estimated_params, # Initial parameters from single species ests
file = NULL, # Don't save
estimateMode = 1, # Estimate hindcast only
niter = 3, # 10 iterations around population and predation dynamics
random_rec = FALSE, # No random recruitment
msmMode = 1, # MSVPA based
suitMode = 0, # empirical suitability
verbose = 1)
library(Rceattle)
################################################
# Data
################################################
# Example
# To run the 2017 single species assessment for the Bering Sea, a data file must first be loaded:
data(BS2017SS) # ?BS2017SS for more information on the data
BS2017SS$projyr <- 2060
# Write data to excel
Rceattle::write_data(data_list = BS2017SS, file = "BS2017SS.xlsx")
# Change the data how you want in excel
# Read the data back in
mydata <- Rceattle::read_data( file = "BS2017SS.xlsx")
################################################
# Estimation
################################################
# Then the model can be fit by setting `msmMode = 0` using the `Rceattle` function:
mydata$fleet_control$proj_F_prop <-rep(1,7)
ss_run <- Rceattle::fit_mod(data_list = mydata,
inits = NULL, # Initial parameters = 0
file = NULL, # Don't save
estimateMode = 1, # Estimate hindcast only
random_rec = FALSE, # No random recruitment
msmMode = 0, # Single species mode
phase = "default",
verbose = 1)
# Estimate single-species and estimate M
mydata_M <- mydata
mydata_M$est_M1 <- c(1,1,1)
ss_run_M <- Rceattle::fit_mod(data_list = mydata_M,
inits = ss_run$estimated_params, # Initial parameters = 0
file = NULL, # Don't save
estimateMode = 1, # Estimate hindcast only
random_rec = FALSE, # No random recruitment
msmMode = 0, # Single species mode
phase = "default",
verbose = 1)
# For the a multispecies model starting from the single species parameters, the following can be specified to load the data:
data("BS2017MS") # Note: the only difference is the residual mortality (M1_base) is lower
BS2017MS$est_M1 <- c(1,1,1) # Estimate residual M
BS2017MS$projyr <- 2060
BS2017MS$fleet_control$proj_F_prop <-rep(1,7)
ms_run <- Rceattle::fit_mod(data_list = BS2017MS,
inits = ss_run_M$estimated_params, # Initial parameters from single species ests
file = NULL, # Don't save
estimateMode = 1, # Estimate hindcast only
niter = 3, # 10 iterations around population and predation dynamics
random_rec = FALSE, # No random recruitment
msmMode = 1, # MSVPA based
suitMode = 0, # empirical suitability
verbose = 1)
# We can plot both runs as well:
mod_list <- list(ss_run, ss_run_M, ms_run)
mod_names <- c("SS", "SS-M", "MS")
# Plot biomass trajectory
plot_biomass(Rceattle = mod_list, model_names = mod_names)
plot_recruitment(Rceattle = mod_list, model_names = mod_names, add_ci = TRUE)
################################################
# Alternative harvest control rules
################################################
# -- Constant F as a percentage of SB0
ss_run_fb0 <- Rceattle::fit_mod(data_list = mydata,
inits = ss_run$estimated_params, # Initial parameters from ss_run
estimateMode = 2, # Run projection only
HCR = build_hcr(HCR = 3, # Constant F HCR
DynamicHCR = FALSE, # Use dynamic reference points
FsprTarget = 0.4), # F that achieves 40% SB0
msmMode = 0, # Single species mode
verbose = 1)
ms_run_fb40 <- Rceattle::fit_mod(data_list = BS2017MS,
inits = ss_run_M$estimated_params, # Initial parameters from single species ests
file = NULL, # Don't save
estimateMode = 0, # Estimate hindcast only
niter = 3, # 10 iterations around population and predation dynamics
random_rec = FALSE, # No random recruitment
HCR = build_hcr(HCR = 3, # Constant F HCR
DynamicHCR = FALSE, # Use dynamic reference points
FsprTarget = 0.4), # F that achieves 40% SB0
msmMode = 1, # MSVPA based
suitMode = 0, # empirical suitability
verbose = 1)
library(Rceattle)
library(Rceattle)
################################################
# Data
################################################
# Example
# To run the 2017 single species assessment for the Bering Sea, a data file must first be loaded:
data(BS2017SS) # ?BS2017SS for more information on the data
BS2017SS$projyr <- 2060
# Write data to excel
Rceattle::write_data(data_list = BS2017SS, file = "BS2017SS.xlsx")
# Change the data how you want in excel
# Read the data back in
mydata <- Rceattle::read_data( file = "BS2017SS.xlsx")
################################################
# Estimation
################################################
# Then the model can be fit by setting `msmMode = 0` using the `Rceattle` function:
mydata$fleet_control$proj_F_prop <-rep(1,7)
ss_run <- Rceattle::fit_mod(data_list = mydata,
inits = NULL, # Initial parameters = 0
file = NULL, # Don't save
estimateMode = 1, # Estimate hindcast only
random_rec = FALSE, # No random recruitment
msmMode = 0, # Single species mode
phase = "default",
verbose = 1)
# Estimate single-species and estimate M
mydata_M <- mydata
mydata_M$est_M1 <- c(1,1,1)
ss_run_M <- Rceattle::fit_mod(data_list = mydata_M,
inits = ss_run$estimated_params, # Initial parameters = 0
file = NULL, # Don't save
estimateMode = 1, # Estimate hindcast only
random_rec = FALSE, # No random recruitment
msmMode = 0, # Single species mode
phase = "default",
verbose = 1)
# For the a multispecies model starting from the single species parameters, the following can be specified to load the data:
data("BS2017MS") # Note: the only difference is the residual mortality (M1_base) is lower
BS2017MS$est_M1 <- c(1,1,1) # Estimate residual M
BS2017MS$projyr <- 2060
BS2017MS$fleet_control$proj_F_prop <-rep(1,7)
ms_run <- Rceattle::fit_mod(data_list = BS2017MS,
inits = ss_run_M$estimated_params, # Initial parameters from single species ests
file = NULL, # Don't save
estimateMode = 1, # Estimate hindcast only
niter = 3, # 10 iterations around population and predation dynamics
random_rec = FALSE, # No random recruitment
msmMode = 1, # MSVPA based
suitMode = 0, # empirical suitability
verbose = 1)
# We can plot both runs as well:
mod_list <- list(ss_run, ss_run_M, ms_run)
mod_names <- c("SS", "SS-M", "MS")
# Plot biomass trajectory
plot_biomass(Rceattle = mod_list, model_names = mod_names)
plot_recruitment(Rceattle = mod_list, model_names = mod_names, add_ci = TRUE)
################################################
# Alternative harvest control rules
################################################
# -- Constant F as a percentage of SB0
ss_run_fb0 <- Rceattle::fit_mod(data_list = mydata,
inits = ss_run$estimated_params, # Initial parameters from ss_run
estimateMode = 2, # Run projection only
HCR = build_hcr(HCR = 3, # Constant F HCR
DynamicHCR = FALSE, # Use dynamic reference points
FsprTarget = 0.4), # F that achieves 40% SB0
msmMode = 0, # Single species mode
verbose = 1)
ms_run_fb40 <- Rceattle::fit_mod(data_list = BS2017MS,
inits = ss_run_M$estimated_params, # Initial parameters from single species ests
file = NULL, # Don't save
estimateMode = 0, # Estimate hindcast only
niter = 3, # 10 iterations around population and predation dynamics
random_rec = FALSE, # No random recruitment
HCR = build_hcr(HCR = 3, # Constant F HCR
DynamicHCR = FALSE, # Use dynamic reference points
FsprTarget = 0.4), # F that achieves 40% SB0
msmMode = 1, # MSVPA based
suitMode = 0, # empirical suitability
verbose = 1)
ms_run_fb40$quantities$depletionSSB[,82]
ms_run_fb40iter <- Rceattle::fit_mod(data_list = BS2017MS,
inits = ss_run_M$estimated_params, # Initial parameters from single species ests
file = NULL, # Don't save
estimateMode = 0, # Estimate hindcast only
niter = 3, # 10 iterations around population and predation dynamics
random_rec = FALSE, # No random recruitment
HCR = build_hcr(HCR = 3, # Constant F HCR
DynamicHCR = FALSE, # Use dynamic reference points
FsprTarget = 0.4,
HCRorder = c(2,1,1)), # F that achieves 40% SB0
msmMode = 1, # MSVPA based
suitMode = 0, # empirical suitability
verbose = 1)
ms_run_fb40iter$quantities$depletionSSB[,82]
ms_run_fb40iter$quantities$SB0[,82]
ms_run_fb40$quantities$SB0[,82]
plot_ssb(list(ms_run_fb40iter, ms_run_fb40), incl_proj = TRUE)
plot_ssb(list(ms_run_fb40iter, ms_run_fb40, ms_run), incl_proj = TRUE)
# -- Multi-species CMSY
ms_run_fb40iter <- Rceattle::fit_mod(data_list = BS2017MS,
inits = ss_run_M$estimated_params, # Initial parameters from single species ests
file = NULL, # Don't save
estimateMode = 0, # Estimate hindcast only
niter = 3, # 10 iterations around population and predation dynamics
random_rec = FALSE, # No random recruitment
HCR = build_hcr(HCR = 1),
msmMode = 1, # MSVPA based
suitMode = 0, # empirical suitability
verbose = 1)
# -- F that acheives 40% of SB0, where SB0 is derived from projecting all species simultaneously under no fishing
ms_run_fb40 <- Rceattle::fit_mod(data_list = BS2017MS,
inits = ss_run_M$estimated_params, # Initial parameters from single species ests
file = NULL, # Don't save
estimateMode = 0, # Estimate hindcast only
niter = 3, # 10 iterations around population and predation dynamics
random_rec = FALSE, # No random recruitment
HCR = build_hcr(HCR = 3, # Constant F HCR
DynamicHCR = FALSE, # Use dynamic reference points
FsprTarget = 0.4), # F that achieves 40% SB0
msmMode = 1, # MSVPA based
suitMode = 0, # empirical suitability
verbose = 1)
# -- F that acheives 40% of SB0, where SB0 is derived from first projecting arrowtooth and cod under no fishing, then projecting pollock under no fishing and cod/arrowtooth at SB40.
ms_run_fb40iter <- Rceattle::fit_mod(data_list = BS2017MS,
inits = ss_run_M$estimated_params, # Initial parameters from single species ests
file = NULL, # Don't save
estimateMode = 0, # Estimate hindcast only
niter = 3, # 10 iterations around population and predation dynamics
random_rec = FALSE, # No random recruitment
HCR = build_hcr(HCR = 3, # Constant F HCR
DynamicHCR = FALSE, # Use dynamic reference points
FsprTarget = 0.4,
HCRorder = c(2,1,1)), # F that achieves 40% SB0
msmMode = 1, # MSVPA based
suitMode = 0, # empirical suitability
verbose = 1)
# -- Multi-species CMSY
ms_run_cmsy <- Rceattle::fit_mod(data_list = BS2017MS,
inits = ss_run_M$estimated_params, # Initial parameters from single species ests
file = NULL, # Don't save
estimateMode = 0, # Estimate hindcast only
niter = 3, # 10 iterations around population and predation dynamics
random_rec = FALSE, # No random recruitment
HCR = build_hcr(HCR = 1),
msmMode = 1, # MSVPA based
suitMode = 0, # empirical suitability
verbose = 1)
# -- Multi-species CMSY, constrained so that species don't fall below 20% SB0
# -- SB0 is derived from projecting all species simultaneously under no fishing
ms_run_concmsy <- Rceattle::fit_mod(data_list = BS2017MS,
inits = ss_run_M$estimated_params, # Initial parameters from single species ests
file = NULL, # Don't save
estimateMode = 0, # Estimate hindcast only
niter = 3, # 10 iterations around population and predation dynamics
random_rec = FALSE, # No random recruitment
HCR = build_hcr(HCR = 1,
Plimit = 0.2),
msmMode = 1, # MSVPA based
suitMode = 0, # empirical suitability
verbose = 1)
# -- Plot
mod_list <- list(ms_run_fb40, ms_run_fb40iter, ms_run_cmsy, ms_run_concmsy)
model_names <- c("F40","F40 - iter", "MS-CMSY", "Constrained CMSY")
plot_biomass(mod_list, model_names = model_names, incl_proj = TRUE)
plot_ssb(mod_list, model_names = model_names, incl_proj = TRUE)
plot_recruitment(mod_list, model_names = model_names, incl_proj = TRUE)
plot_catch(mod_list, model_names = model_names, incl_proj = TRUE)
devtools::document()
library(Rceattle)
library(Rceattle)
library(Rceattle)
################################################
# Data
################################################
# Example
# To run the 2017 single species assessment for the Bering Sea, a data file must first be loaded:
data(BS2017SS) # ?BS2017SS for more information on the data
BS2017SS$projyr <- 2060
# Write data to excel
Rceattle::write_data(data_list = BS2017SS, file = "BS2017SS.xlsx")
# Change the data how you want in excel
# Read the data back in
mydata <- Rceattle::read_data( file = "BS2017SS.xlsx")
################################################
# Estimation
################################################
# Then the model can be fit by setting `msmMode = 0` using the `Rceattle` function:
mydata$fleet_control$proj_F_prop <-rep(1,7)
ss_run <- Rceattle::fit_mod(data_list = mydata,
inits = NULL, # Initial parameters = 0
file = NULL, # Don't save
estimateMode = 1, # Estimate hindcast only
random_rec = FALSE, # No random recruitment
msmMode = 0, # Single species mode
phase = "default",
verbose = 1)
library(Rceattle)
install.packages(c("BH", "bookdown", "brew", "brio", "bslib", "checkmate", "cli", "cowplot", "cpp11", "crosstalk", "curl", "data.table", "DBI", "dbplyr", "desc", "digest", "dplyr", "DT", "e1071", "evaluate", "fansi", "gdtools", "gert", "ggridges", "ggthemes", "glue", "gtools", "haven", "htmltools", "htmlwidgets", "httpuv", "httr2", "igraph", "jsonlite", "knitr", "later", "magick", "markdown", "matrixStats", "mvtnorm", "ncdf4", "oce", "patchwork", "pkgbuild", "posterior", "pracma", "processx", "progress", "QuickJSR", "ragg", "Rcpp", "RcppArmadillo", "RcppEigen", "readr", "reprex", "rjags", "rlang", "RNetCDF", "roxygen2", "rstan", "s2", "sass", "scales", "sf", "sp", "StanHeaders", "stringi", "svglite", "tensorA", "terra", "testthat", "timeDate", "tinytex", "TMB", "tseries", "TTR", "units", "vctrs", "vroom", "waldo", "wk", "xfun", "xml2", "yaml"))
install.packages(c("BH", "bookdown", "brew", "brio", "bslib", "checkmate", "cli", "cowplot", "cpp11", "crosstalk", "curl", "data.table", "DBI", "dbplyr", "desc", "digest", "dplyr", "DT", "e1071", "evaluate", "fansi", "gdtools", "gert", "ggridges", "ggthemes", "glue", "gtools", "haven", "htmltools", "htmlwidgets", "httpuv", "httr2", "igraph", "jsonlite", "knitr", "later", "magick", "markdown", "matrixStats", "mvtnorm", "ncdf4", "oce", "patchwork", "pkgbuild", "posterior", "pracma", "processx", "progress", "QuickJSR", "ragg", "Rcpp", "RcppArmadillo", "RcppEigen", "readr", "reprex", "rjags", "rlang", "RNetCDF", "roxygen2", "rstan", "s2", "sass", "scales", "sf", "sp", "StanHeaders", "stringi", "svglite", "tensorA", "terra", "testthat", "timeDate", "tinytex", "TMB", "tseries", "TTR", "units", "vctrs", "vroom", "waldo", "wk", "xfun", "xml2", "yaml"))
install.packages(c("BH", "bookdown", "brew", "brio", "bslib", "checkmate", "cli", "cowplot", "cpp11", "crosstalk", "curl", "data.table", "DBI", "dbplyr", "desc", "digest", "dplyr", "DT", "e1071", "evaluate", "fansi", "gdtools", "gert", "ggridges", "ggthemes", "glue", "gtools", "haven", "htmltools", "htmlwidgets", "httpuv", "httr2", "igraph", "jsonlite", "knitr", "later", "magick", "markdown", "matrixStats", "mvtnorm", "ncdf4", "oce", "patchwork", "pkgbuild", "posterior", "pracma", "processx", "progress", "QuickJSR", "ragg", "Rcpp", "RcppArmadillo", "RcppEigen", "readr", "reprex", "rjags", "rlang", "RNetCDF", "roxygen2", "rstan", "s2", "sass", "scales", "sf", "sp", "StanHeaders", "stringi", "svglite", "tensorA", "terra", "testthat", "timeDate", "tinytex", "TMB", "tseries", "TTR", "units", "vctrs", "vroom", "waldo", "wk", "xfun", "xml2", "yaml"))
