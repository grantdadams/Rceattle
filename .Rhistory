# For the a multispecies model starting from the single species parameters, the following can be specified to load the data:
data("BS2017MS") # Note: the only difference is the residual mortality (M1_base) is lower
BS2017MS$est_M1 <- c(1,1,1) # Estimate residual M
ms_run <- Rceattle::fit_mod(data_list = BS2017MS,
inits = ss_run$estimated_params, # Initial parameters from single species ests
file = NULL, # Don't save
estimateMode = 0, # Estimate
niter = 3, # 10 iterations around population and predation dynamics
random_rec = FALSE, # No random recruitment
msmMode = 1, # MSVPA based
suitMode = 0, # empirical suitability
verbose = 1)
plot_b_eaten_prop(ms_run)
library(Rceattle)
install.packages("TMB")
library(Rceattle)
library(Rceattle)
################################################
# Data
################################################
# Example
# To run the 2017 single species assessment for the Bering Sea, a data file must first be loaded:
data(BS2017SS) # ?BS2017SS for more information on the data
# Write data to excel
Rceattle::write_data(data_list = BS2017SS, file = "BS2017SS.xlsx")
# Change the data how you want in excel
# Read the data back in
mydata <- Rceattle::read_data( file = "BS2017SS.xlsx")
mydata$est_M1 <- c(0,0,0)
################################################
# Estimation
################################################
# Then the model can be fit by setting `msmMode = 0` using the `Rceattle` function:
mydata$fleet_control$proj_F_prop <- c(rep(1,3), rep(0,4))
ss_run <- Rceattle::fit_mod(data_list = mydata,
inits = NULL, # Initial parameters = 0
file = NULL, # Don't save
estimateMode = 0, # Estimate
random_rec = FALSE, # No random recruitment
msmMode = 0, # Single species mode
phase = "default",
verbose = 1)
plot_depletion(ss_run, incl_proj = TRUE)
ss_run$estimated_params$ln_mean_rec
exp(ss_run$estimated_params$ln_mean_rec)
rowMeans(ss_run$quantities[,1:39])
rowMeans(ss_run$quantities$R[,1:39])
library(Rceattle)
library(Rceattle)
################################################
# Data
################################################
# Example
# To run the 2017 single species assessment for the Bering Sea, a data file must first be loaded:
data(BS2017SS) # ?BS2017SS for more information on the data
# Write data to excel
Rceattle::write_data(data_list = BS2017SS, file = "BS2017SS.xlsx")
# Change the data how you want in excel
# Read the data back in
mydata <- Rceattle::read_data( file = "BS2017SS.xlsx")
mydata$est_M1 <- c(0,0,0)
################################################
# Estimation
################################################
# Then the model can be fit by setting `msmMode = 0` using the `Rceattle` function:
mydata$fleet_control$proj_F_prop <- c(rep(1,3), rep(0,4))
ss_run <- Rceattle::fit_mod(data_list = mydata,
inits = NULL, # Initial parameters = 0
file = NULL, # Don't save
estimateMode = 0, # Estimate
random_rec = FALSE, # No random recruitment
msmMode = 0, # Single species mode
phase = "default",
verbose = 1)
exp(ss_run$estimated_params$ln_mean_rec)
rowMeans(ss_run$quantities$R[,1:39])
library(Rceattle)
library(Rceattle)
################################################
# Data
################################################
# Example
# To run the 2017 single species assessment for the Bering Sea, a data file must first be loaded:
data(BS2017SS) # ?BS2017SS for more information on the data
# Write data to excel
Rceattle::write_data(data_list = BS2017SS, file = "BS2017SS.xlsx")
# Change the data how you want in excel
# Read the data back in
mydata <- Rceattle::read_data( file = "BS2017SS.xlsx")
mydata$est_M1 <- c(0,0,0)
################################################
# Estimation
################################################
# Then the model can be fit by setting `msmMode = 0` using the `Rceattle` function:
mydata$fleet_control$proj_F_prop <- c(rep(1,3), rep(0,4))
ss_run <- Rceattle::fit_mod(data_list = mydata,
inits = NULL, # Initial parameters = 0
file = NULL, # Don't save
estimateMode = 0, # Estimate
random_rec = FALSE, # No random recruitment
msmMode = 0, # Single species mode
phase = "default",
verbose = 1)
exp(ss_run$estimated_params$ln_mean_rec)
rowMeans(ss_run$quantities$R[,1:39])
library(Rceattle)
library(Rceattle)
################################################
# Data
################################################
# Example
# To run the 2017 single species assessment for the Bering Sea, a data file must first be loaded:
data(BS2017SS) # ?BS2017SS for more information on the data
# Write data to excel
Rceattle::write_data(data_list = BS2017SS, file = "BS2017SS.xlsx")
# Change the data how you want in excel
# Read the data back in
mydata <- Rceattle::read_data( file = "BS2017SS.xlsx")
mydata$est_M1 <- c(0,0,0)
################################################
# Estimation
################################################
# Then the model can be fit by setting `msmMode = 0` using the `Rceattle` function:
mydata$fleet_control$proj_F_prop <- c(rep(1,3), rep(0,4))
ss_run <- Rceattle::fit_mod(data_list = mydata,
inits = NULL, # Initial parameters = 0
file = NULL, # Don't save
estimateMode = 0, # Estimate
random_rec = FALSE, # No random recruitment
msmMode = 0, # Single species mode
phase = "default",
verbose = 1)
exp(ss_run$estimated_params$ln_mean_rec)
rowMeans(ss_run$quantities$R[,1:39])
rowMeans(ss_run$estimated_params$rec_dev[,1:39])
rowMeans(rbind(ss_run$estimated_params$rec_dev[,1:39],ss_run$estimated_params$init_dev[,1:9]) )
ss_run$estimated_params$init_dev[,1:9]
rowMeans(cbind(ss_run$estimated_params$rec_dev[,1:39],ss_run$estimated_params$init_dev[,1:9]) )
rowMeans(cbind(ss_run$estimated_params$rec_dev[,1:39],ss_run$estimated_params$init_dev[,1:11]) )
rowSums(cbind(ss_run$estimated_params$rec_dev[,1:39],ss_run$estimated_params$init_dev[,1:11]) )
rowSums(cbind(ss_run$estimated_params$rec_dev[,1:39],ss_run$estimated_params$init_dev[,1:21]) )
rowSums(cbind(ss_run$estimated_params$rec_dev[,1:39],ss_run$estimated_params$init_dev[,1:20]) )
library(Rceattle)
library(Rceattle)
################################################
# Data
################################################
# Example
# To run the 2017 single species assessment for the Bering Sea, a data file must first be loaded:
data(BS2017SS) # ?BS2017SS for more information on the data
# Write data to excel
Rceattle::write_data(data_list = BS2017SS, file = "BS2017SS.xlsx")
# Change the data how you want in excel
# Read the data back in
mydata <- Rceattle::read_data( file = "BS2017SS.xlsx")
mydata$est_M1 <- c(0,0,0)
################################################
# Estimation
################################################
# Then the model can be fit by setting `msmMode = 0` using the `Rceattle` function:
mydata$fleet_control$proj_F_prop <- c(rep(1,3), rep(0,4))
ss_run <- Rceattle::fit_mod(data_list = mydata,
inits = NULL, # Initial parameters = 0
file = NULL, # Don't save
estimateMode = 0, # Estimate
random_rec = FALSE, # No random recruitment
msmMode = 0, # Single species mode
phase = "default",
verbose = 1)
exp(ss_run$estimated_params$ln_mean_rec)
rowMeans(ss_run$quantities$R[,1:39])
rowSums(cbind(ss_run$estimated_params$rec_dev[,1:39],ss_run$estimated_params$init_dev[,1:20]) )
ss_run$estimated_params$rec_dev[,1:39]
rowSums(cbind(ss_run$estimated_params$rec_dev[,1:39],ss_run$estimated_params$init_dev[,1:20]) )
exp(ss_run$estimated_params$ln_sigma_rec)
exp(ss_run$estimated_params$ln_rec_sigma)
exp(ss_run$estimated_params$ln_rec_sigma) * 48
exp(ss_run$estimated_params$ln_rec_sigma) * 48/2
exp(ss_run$estimated_params$ln_rec_sigma)^2 * 48/2
exp(ss_run$estimated_params$ln_mean_rec)
library(Rceattle)
library(Rceattle)
################################################
# Data
################################################
# Example
# To run the 2017 single species assessment for the Bering Sea, a data file must first be loaded:
data(BS2017SS) # ?BS2017SS for more information on the data
# Write data to excel
Rceattle::write_data(data_list = BS2017SS, file = "BS2017SS.xlsx")
# Change the data how you want in excel
# Read the data back in
mydata <- Rceattle::read_data( file = "BS2017SS.xlsx")
mydata$est_M1 <- c(0,0,0)
################################################
# Estimation
################################################
# Then the model can be fit by setting `msmMode = 0` using the `Rceattle` function:
mydata$fleet_control$proj_F_prop <- c(rep(1,3), rep(0,4))
ss_run <- Rceattle::fit_mod(data_list = mydata,
inits = NULL, # Initial parameters = 0
file = NULL, # Don't save
estimateMode = 0, # Estimate
random_rec = FALSE, # No random recruitment
msmMode = 0, # Single species mode
phase = "default",
verbose = 1)
exp(ss_run$estimated_params$ln_mean_rec)
exp(ss_run$estimated_params$ln_rec_sigma)^2 * 48/2
rowMeans(ss_run$quantities$R[,1:39])
rowSums(cbind(ss_run$estimated_params$rec_dev[,1:39],ss_run$estimated_params$init_dev[,1:20]) )
22031014.2   364169.4   168436.8
?sample
?rep
om_use <- ss_run
mean(ss_run$quantities$R[1,1:39])
exp(ss_run$estimated_params$ln_mean_rec + mean(ss_run$estimated_params$rec_dev[1,1:39]))
exp(ss_run$estimated_params$ln_mean_rec[1] + mean(ss_run$estimated_params$rec_dev[1,1:39]))
exp(ss_run$estimated_params$ln_mean_rec[1] + median(ss_run$estimated_params$rec_dev[1,1:39]))
# - Update OM with devs
om_use$estimated_params$rec_dev[sp,proj_yrs - om_use$data_list$styr + 1] <- replace(
om_use$estimated_params$rec_dev[sp,proj_yrs - om_use$data_list$styr + 1],
values =  rec_dev)
ss_run$quantities$R[1,1:39]
ss_run$estimated_params$rec_dev[1,1:39]
sp = 1
log(mean(om_use$quantities$R[sp,1:hind_nyrs])) - om_use$estimated_params$ln_mean_rec[sp]
em = om_use
# - Years for simulations
hind_yrs <- (em$data_list$styr) : em$data_list$endyr
hind_nyrs <- length(hind_nyrs)
hind_nyrs <- length(hind_yrs)
log(mean(om_use$quantities$R[sp,1:hind_nyrs])) - om_use$estimated_params$ln_mean_rec[sp]
exp(0.8201364 + om_use$estimated_params$ln_mean_rec[sp])
mean(ss_run$estimated_params$rec_dev[1,1:39])
sample(x = om_use$estimated_params$rec_dev[sp, 1:hind_nyrs], size = proj_nyrs, replace = TRUE)
proj_yrs <- (em$data_list$endyr + 1) : em$data_list$projyr
proj_nyrs <- length(proj_yrs)
sample(x = om_use$estimated_params$rec_dev[sp, 1:hind_nyrs], size = proj_nyrs, replace = TRUE)
library(Rceattle)
library(TMB)
?compile
library(Rceattle)
library(Rceattle)
install.packages("TMB")
install.packages("TMB")
install.packages("TMB")
library(Rceattle)
################################################
# Data
################################################
# Example
# To run the 2017 single species assessment for the Bering Sea, a data file must first be loaded:
data(BS2017SS) # ?BS2017SS for more information on the data
# Write data to excel
Rceattle::write_data(data_list = BS2017SS, file = "BS2017SS.xlsx")
# Change the data how you want in excel
# Read the data back in
mydata <- Rceattle::read_data( file = "BS2017SS.xlsx")
mydata$est_M1 <- c(0,0,0)
################################################
# Estimation
################################################
# Then the model can be fit by setting `msmMode = 0` using the `Rceattle` function:
mydata$fleet_control$proj_F_prop <- c(rep(1,3), rep(0,4))
ss_run <- Rceattle::fit_mod(data_list = mydata,
inits = NULL, # Initial parameters = 0
file = NULL, # Don't save
estimateMode = 0, # Estimate
random_rec = FALSE, # No random recruitment
msmMode = 0, # Single species mode
phase = "default",
verbose = 1)
# Estimate M
mydata_M <- mydata
mydata_M$est_M1 <- c(1,1,1)
ss_run_M <- Rceattle::fit_mod(data_list = mydata_M,
inits = ss_run$estimated_params, # Initial parameters = 0
file = NULL, # Don't save
estimateMode = 0, # Estimate
random_rec = FALSE, # No random recruitment
msmMode = 0, # Single species mode
phase = "default",
verbose = 1)
# The you can plot the model results using using
plot_biomass(Rceattle =  list(ss_run, ss_run_M), model_names = c("Fixed M", "Est M"), line_col = c(1,2))
plot_recruitment(Rceattle =  list(ss_run, ss_run_M), add_ci = TRUE)
plot_catch(Rceattle =  ss_run, incl_proj = T)
# The you can plot the model results using using
plot_biomass(Rceattle =  list(ss_run, ss_run_M), model_names = c("Fixed M", "Est M"), line_col = c(1,2))
plot_recruitment(Rceattle =  list(ss_run, ss_run_M), add_ci = TRUE)
plot_catch(Rceattle =  ss_run, incl_proj = T)
# The you can plot the model results using using
plot_biomass(Rceattle =  list(ss_run, ss_run_M), model_names = c("Fixed M", "Est M"), line_col = c(1,2))
ss_run$quantities$mean_rec
rowMeans(ss_run$quantities$R[1:39,])
ss_run$quantities$R
ss_run$quantities$R[1:10]
ss_run$quantities$R[1:10,]
ss_run$quantities$R[,1:39]
rowMeans(ss_run$quantities$R[,1:39])
ss_run$quantities$mean_rec
rowMeans(ss_run$quantities$R[,1:38])
rowMeans(ss_run$quantities$R[,1:37])
rowMeans(ss_run$quantities$R[,1:36])
rowMeans(ss_run$quantities$R[,1:35])
rowMeans(ss_run$quantities$R[,1:34])
usethis::use_vignette("Stock_synthesis_to_Rceattle")
install.packages('TMB', type = 'source')
install.packages("TMB", type = "source")
usethis::use_vignette("Stock_synthesis_to_Rceattle")
install.packages("usethis")
install.packages("usethis")
install.packages("usethis")
install.packages("usethis")
usethis::use_vignette("Stock_synthesis_to_Rceattle")
usethis::use_vignette("Stock_synthesis_to_Rceattle")
devtools:document()
install.packages("devtools")
install.packages("devtools")
devtools::document()
devtools::document()
version
setwd("~/GitHub/RceattleRuns/GOA/Model runs/GOA_18.5.1/Data")
################################################
# Load packages
################################################
library(Rceattle)
library(readxl)
################################################
# Load data
################################################
# Pollock
mydata_pollock <- Rceattle::read_data( file = "GOA_18.5.1_pollock_single_species_1970-2018.xlsx")
# Note - the Pollock indices of abundance are rescaled (martin does the scaling in model)
# Differences between CEATTLE and SAFE: the SAFE model penalizes the first 7 and last recruitment deviates, while I penalize them all. Besides that its parameterized the exact same.
# Cod
mydata_pcod <- Rceattle::read_data( file = "GOA_18.5.1_pcod_single_species_1977-2018.xlsx")
mydata_pcod$pmature[1,2:13] <- 2 # Spawn wt from SS model includes sex-ratio and maturity already, so setting Pmature (age-at-maturity) to 2 to have CEATTLE calculations be the same
# The cod model was  a bit trickier to recreate because of the use of internal age-length estimation/conditional age-at-length and more flexible selectivity parameterization than I currently have set up in CEATTLE. I use the output weight-at-age, mortality, and terminal year age-length-key from SS as inputs into CEATTLE and set age-based selectivity in CEATTLE to be the form that is most similar to the terminal year length-based selectivity pattern in SS. I fit the same index, catch, and length-at-age data as well as marginal age- and length-comp data that the SAFE model doesn't fit. I ignore annual varying selectivity (you could do it in CEATTLE... see meta_data sheet in the Excel file, I just stopped trying after some convergence issues). I ignored the aging error (could add in, but was having convergence problems). I also do not use the Taylor and Methot 2013 recruitment bias correction thats in SS and did not have a 2016 bump in mortality from the blob.
# ATF
mydata_atf <- Rceattle::read_data( file = "GOA_18.5.1_arrowtooth_single_species_1961-2018.xlsx")
# Differences between CEATTLE and SAFE: ATF composition sample sizes and non-parametric selectivity penalties are the same for each sex while they are different in the SAFE model (differences between sexes for both bits are < 5 in the SAFE model. This was a convenience for coding
setwd("~/GitHub/Rceattle")
GOApollock <- mydata_pollock
usethis::use_data(mydata_pollock)
GOAcod <- mydata_pcod
usethis::use_data(GOAcod)
usethis::use_data(GOApollock)
GOAatf <- mydata_atf
usethis::use_data(GOAatf)
setwd("~/GitHub/RceattleRuns/GOA/Model runs/GOA_18.5.1/Data")
safe2018biomass <- as.data.frame(read_xlsx("2018_SAFE_biomass_estimate.xlsx", sheet = 1))
safe2018ssb <- as.data.frame(read_xlsx("2018_SAFE_biomass_estimate.xlsx", sheet = 2))
safe2018rec <- as.data.frame(read_xlsx("2018_SAFE_biomass_estimate.xlsx", sheet = 3))
setwd("~/GitHub/Rceattle")
################################################
# Compare with SAFE Models
################################################
# Columns = year, pollock, cod, atf - outputs here are 1977-2018
GOAsafe2018 <- list(biomass = safe2018biomass, ssb = safe2018ssb, recruitment = safe2018rec)
usethis::use_data(GOAsafe2018)
devtools::document()
library(Rceattle)
library(Rceattle)
################################################
# Data
################################################
# Example
# To run the 2017 single species assessment for the Bering Sea, a data file must first be loaded:
data(BS2017SS) # ?BS2017SS for more information on the data
# Write data to excel
Rceattle::write_data(data_list = BS2017SS, file = "BS2017SS.xlsx")
# Change the data how you want in excel
# Read the data back in
mydata <- Rceattle::read_data( file = "BS2017SS.xlsx")
mydata$est_M1 <- c(0,0,0)
################################################
# Estimation
################################################
# Then the model can be fit by setting `msmMode = 0` using the `Rceattle` function:
mydata$fleet_control$proj_F_prop <- c(rep(1,3), rep(0,4))
ss_run <- Rceattle::fit_mod(data_list = mydata,
inits = NULL, # Initial parameters = 0
file = NULL, # Don't save
estimateMode = 0, # Estimate
random_rec = FALSE, # No random recruitment
msmMode = 0, # Single species mode
phase = "default",
verbose = 1)
# Estimate M
mydata_M <- mydata
mydata_M$est_M1 <- c(1,1,1) # Estimate age-invariant M (M2/predation = 0)
ss_run_M <- Rceattle::fit_mod(data_list = mydata_M,
inits = ss_run$estimated_params, # Initial parameters = 0
file = NULL, # Don't save
estimateMode = 0, # Estimate
random_rec = FALSE, # No random recruitment
msmMode = 0, # Single species mode
phase = "default",
verbose = 1)
# The you can plot the model results using using
plot_biomass(Rceattle =  list(ss_run, ss_run_M), model_names = c("Fixed M", "Est M"), line_col = c(1,2))
plot_recruitment(Rceattle =  list(ss_run, ss_run_M), add_ci = TRUE)
plot_catch(Rceattle =  ss_run, incl_proj = T)
# For the a multispecies model starting from the single species parameters, the following can be specified to load the data:
data("BS2017MS") # Note: the only difference is the residual mortality (M1_base) is lower
BS2017MS$est_M1 <- c(0,0,0) # Estimate residual M
ms_run <- Rceattle::fit_mod(data_list = BS2017MS,
inits = ss_run$estimated_params, # Initial parameters from single species ests
file = NULL, # Don't save
estimateMode = 0, # Estimate
niter = 3, # 10 iterations around population and predation dynamics
random_rec = FALSE, # No random recruitment
msmMode = 1, # MSVPA based
suitMode = 0, # empirical suitability
verbose = 1)
install.packages("TMB")
library(Rceattle)
################################################
# Data
################################################
# Example
# To run the 2017 single species assessment for the Bering Sea, a data file must first be loaded:
data(BS2017SS) # ?BS2017SS for more information on the data
# Write data to excel
Rceattle::write_data(data_list = BS2017SS, file = "BS2017SS.xlsx")
# Change the data how you want in excel
# Read the data back in
mydata <- Rceattle::read_data( file = "BS2017SS.xlsx")
mydata$est_M1 <- c(0,0,0) # Fix M1 to input value (M1_base)
################################################
# Estimation
################################################
# Then the model can be fit by setting `msmMode = 0` using the `Rceattle` function:
mydata$fleet_control$proj_F_prop <- c(rep(1,3), rep(0,4))
ss_run <- Rceattle::fit_mod(data_list = mydata,
inits = NULL, # Initial parameters = 0
file = NULL, # Don't save
estimateMode = 0, # Estimate
random_rec = FALSE, # No random recruitment
msmMode = 0, # Single species mode
phase = "default",
verbose = 1)
library(Rceattle)
library(Rceattle)
################################################
# Data
################################################
# Example
# To run the 2017 single species assessment for the Bering Sea, a data file must first be loaded:
data(BS2017SS) # ?BS2017SS for more information on the data
# Write data to excel
Rceattle::write_data(data_list = BS2017SS, file = "BS2017SS.xlsx")
# Change the data how you want in excel
# Read the data back in
mydata <- Rceattle::read_data( file = "BS2017SS.xlsx")
mydata$est_M1 <- c(0,0,0) # Fix M1 to input value (M1_base)
################################################
# Estimation
################################################
# Then the model can be fit by setting `msmMode = 0` using the `Rceattle` function:
mydata$fleet_control$proj_F_prop <- c(rep(1,3), rep(0,4))
ss_run <- Rceattle::fit_mod(data_list = mydata,
inits = NULL, # Initial parameters = 0
file = NULL, # Don't save
estimateMode = 0, # Estimate
random_rec = FALSE, # No random recruitment
msmMode = 0, # Single species mode
phase = "default",
verbose = 1)
# Estimate M
mydata_M <- mydata
mydata_M$est_M1 <- c(1,1,1) # Estimate age-invariant M (M2/predation = 0)
ss_run_M <- Rceattle::fit_mod(data_list = mydata_M,
inits = ss_run$estimated_params, # Initial parameters = 0
file = NULL, # Don't save
estimateMode = 0, # Estimate
random_rec = FALSE, # No random recruitment
msmMode = 0, # Single species mode
phase = "default",
verbose = 1)
# The you can plot the model results using using
plot_biomass(Rceattle =  list(ss_run, ss_run_M), model_names = c("Fixed M", "Est M"), line_col = c(1,2))
plot_recruitment(Rceattle =  list(ss_run, ss_run_M), add_ci = TRUE)
plot_catch(Rceattle =  ss_run, incl_proj = T)
# For the a multispecies model starting from the single species parameters, the following can be specified to load the data:
data("BS2017MS") # Note: the only difference is the residual mortality (M1_base) is lower
BS2017MS$est_M1 <- c(0,0,0) # Estimate residual M
ms_run <- Rceattle::fit_mod(data_list = BS2017MS,
inits = ss_run$estimated_params, # Initial parameters from single species ests
file = NULL, # Don't save
estimateMode = 0, # Estimate
niter = 3, # 10 iterations around population and predation dynamics
random_rec = FALSE, # No random recruitment
msmMode = 1, # MSVPA based
suitMode = 0, # empirical suitability
verbose = 1)
# We can plot both runs as well:
Rceattle <- list(ss_run, ms_run)
mod_names <- c("Single-species", "Multi-species")
# Plot biomass trajectory
plot_biomass(Rceattle = mod_list, model_names = mod_names)
plot_recruitment(Rceattle = mod_list, model_names = mod_names, add_ci = TRUE)
# We can plot both runs as well:
mod_list <- list(ss_run, ms_run)
mod_names <- c("Single-species", "Multi-species")
# Plot biomass trajectory
plot_biomass(Rceattle = mod_list, model_names = mod_names)
apply(ms_run$quantities$M2[1,1,1:10,1:39],1, mean)
devtools::document()
library(Rceattle)
