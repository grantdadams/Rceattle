geom_point()
library(cowplot)
goa_results %>%
ggplot(aes(x = ParName, y = Difference, group = Model)) +
geom_point() +
facet_grid(~Model)
goa_results %>%
ggplot(aes(x = ParName, y = abs(Difference), group = Model)) +
geom_point() +
facet_grid(~Model)
goa_results %>%
ggplot(aes(x = ParName, y = abs(Difference), colour = Model)) +
geom_point() +
facet_grid(~Model)
head(goa_results)
max(abs(grad3))
ss_run3$opt$max_gradient
max(abs(grad1))
ss_run$opt$max_gradient
max(abs(grad2))
ss_run2$opt$max_gradient
library(ggplot2)
library(Rceattle)
library(dplyr)
library(TMB)
library(numDeriv)
library(tidyr)
library(cowplot)
################################################
# Data
################################################
# Example
data("GOA2018SS")
data("BS2017SS")
################################################
# Estimation
################################################
# * GOA ----
ss_run <- Rceattle::fit_mod(data_list = GOA2018SS,
inits = NULL, # Initial parameters = 0
file = NULL, # Don't save
estimateMode = 0, # Estimate
random_rec = FALSE, # No random recruitment
msmMode = 0, # Single species mode
phase = "default",
verbose = 1)
ss_run2 <- Rceattle::fit_mod(data_list = GOA2018SS,
TMBfilename = "src/TMB/ceattle_v01_11_sel_norm",
inits = NULL, # Initial parameters = 0
file = NULL, # Don't save
estimateMode = 0, # Estimate
random_rec = FALSE, # No random recruitment
msmMode = 0, # Single species mode
phase = "default",
verbose = 1)
GOA2018SS$sel_age <- apply(ss_run2$quantities$sel[,1,,1], 1, which.max) - 1
ss_run3 <- Rceattle::fit_mod(data_list = GOA2018SS,
TMBfilename = "src/TMB/ceattle_v01_11_sel_norm_age",
inits = NULL, # Initial parameters = 0
file = NULL, # Don't save
estimateMode = 0, # Estimate
random_rec = FALSE, # No random recruitment
msmMode = 0, # Single species mode
phase = "default",
verbose = 1)
# * EBS ----
colnames(BS2017SS$fleet_control)[2:ncol(BS2017SS$fleet_control)] <- c("EBS pollock fishery",
"EBS cod fishery",
"EBS atf fishery",
"EBS pollock bottom trawl",
"EBS cod bottom trawl",
"EBS atf bottom trawl",
"EBS pollock EIT")
ebs_run <- Rceattle::fit_mod(data_list = BS2017SS,
inits = NULL, # Initial parameters = 0
file = NULL, # Don't save
estimateMode = 0, # Estimate
random_rec = FALSE, # No random recruitment
msmMode = 0, # Single species mode
phase = "default",
verbose = 1)
ebs_run2 <- Rceattle::fit_mod(data_list = BS2017SS,
TMBfilename = "src/TMB/ceattle_v01_11_sel_norm",
inits = NULL, # Initial parameters = 0
file = NULL, # Don't save
estimateMode = 0, # Estimate
random_rec = FALSE, # No random recruitment
msmMode = 0, # Single species mode
phase = "default",
verbose = 1)
BS2017SS$sel_age <- apply(ebs_run2$quantities$sel[,1,,1], 1, which.max) - 1
ebs_run3 <- Rceattle::fit_mod(data_list = BS2017SS,
TMBfilename = "src/TMB/ceattle_v01_11_sel_norm_age",
inits = NULL, # Initial parameters = 0
file = NULL, # Don't save
estimateMode = 0, # Estimate
random_rec = FALSE, # No random recruitment
msmMode = 0, # Single species mode
phase = "default",
verbose = 1)
# Plots ----
ss_run$data_list$spnames <- paste("GOA", ss_run2$data_list$spnames)
plot_f(list(ss_run, ss_run2, ss_run3), model_names = c("1. Norm by max", "2. No norm", "3. Norm by age"))
plot_catch(list(ss_run, ss_run2, ss_run3), model_names = c("1. Norm by max", "2. No norm", "3. Norm by age"))
plot_biomass(list(ss_run, ss_run2, ss_run3), model_names = c("1. Norm by max", "2. No norm", "3. Norm by age"), add_ci = T)
plot_selectivity(list(ss_run, ss_run2, ss_run3), model_names = c("1. Norm by max", "2. No norm", "3. Norm by age"))
dev.off()
plot_selectivity(list(ss_run, ss_run2, ss_run3), model_names = c("1. Norm by max", "2. No norm", "3. Norm by age"))
plot_selectivity(list(ss_run2, ss_run, ss_run2, ss_run3), model_names = c("1. Norm by max", "2. No norm", "3. Norm by age"))
plot_selectivity(list(ss_run3, ss_run, ss_run2, ss_run3), model_names = c("1. Norm by max", "2. No norm", "3. Norm by age"))
plot_selectivity(ss_run)
plot_selectivity(ss_run2)
plot_selectivity(ss_run3)
ebs_run$data_list$spnames <- paste("EBS", ebs_run$data_list$spnames)
ebs_run$data_list$fleet_control$Fleet_name <- paste("EBS", ebs_run$data_list$fleet_control$Fleet_name)
plot_f(list(ebs_run, ebs_run2, ebs_run3), model_names = c("1. Norm by max", "2. No norm", "3. Norm by age"))
plot_catch(list(ebs_run, ebs_run2, ebs_run3), model_names = c("1. Norm by max", "2. No norm", "3. Norm by age"))
plot_biomass(list(ebs_run, ebs_run2, ebs_run3), model_names = c("1. Norm by max", "2. No norm", "3. Norm by age"), add_ci = T)
dev.off()
ebs_run$quantities$sel[7,,,] <- 0:1
ebs_run2$quantities$sel[7,,,] <- 0:1
ebs_run3$quantities$sel[7,,,] <- 0:1
plot_selectivity(list(ebs_run, ebs_run2, ebs_run3), model_names = c("1. Norm by max", "2. No norm", "3. Norm by age"))
plot_selectivity(list(ebs_run2, ebs_run, ebs_run2, ebs_run3), model_names = c("1. Norm by max", "2. No norm", "3. Norm by age"))
plot_selectivity(list(ebs_run3, ebs_run, ebs_run2, ebs_run3), model_names = c("1. Norm by max", "2. No norm", "3. Norm by age"))
plot_selectivity(ebs_run)
plot_selectivity(ebs_run2)
plot_selectivity(ebs_run3)
# Gradients ----
# * GOA ----
# Divide by max
grad_mle <- ss_run$obj$gr(ss_run$opt$par)
grad1 <- numDeriv::grad(func = ss_run$obj$f, x = ss_run$opt$par)
max(abs(grad1))
ss_run$opt$max_gradient
max(abs(grad_mle))
grad1 - grad_mle
names(grad1)[which(abs(grad1) == max(abs(grad1)))]
# No divide
grad_mle2 <- ss_run2$obj$gr(ss_run2$opt$par)
grad2 <- numDeriv::grad(func = ss_run2$obj$f, x = ss_run2$opt$par)
max(abs(grad2))
ss_run2$opt$max_gradient
max(abs(grad_mle2))
grad2 - grad_mle2
names(grad2)[which(abs(grad2) == max(abs(grad2)))]
# Divide by age
grad_mle3 <- ss_run3$obj$gr(ss_run3$opt$par)
grad3 <- numDeriv::grad(func = ss_run3$obj$f, x = ss_run3$opt$par)
max(abs(grad3))
ss_run3$opt$max_gradient
max(abs(grad_mle3))
grad3 - grad_mle3
names(grad3)[which(abs(grad3) == max(abs(grad3)))]
# Plot
goa_results <- data.frame(Param = names(ss_run$opt$par),
MLEmodel1 = ss_run$opt$par, ADgrModel1 = c(ss_run$obj$gr(ss_run$opt$par)), FDgrModel1 = grad1,
MLEmodel2 = ss_run2$opt$par, ADgrModel2 = c(ss_run2$obj$gr(ss_run2$opt$par)), FDgrModel2 = grad2,
MLEmodel3 = ss_run3$opt$par, ADgrModel3 = c(ss_run3$obj$gr(ss_run3$opt$par)), FDgrModel3 = grad3)
goa_results <- goa_results %>%
mutate(ParN = 1:n(),
ParName = paste0(ParN, Param),
GRdiffModel1 = ADgrModel1 - FDgrModel1,
GRdiffModel2 = ADgrModel2 - FDgrModel2,
GRdiffModel3 = ADgrModel3 - FDgrModel3) %>%
select(ParName, GRdiffModel1, GRdiffModel2, GRdiffModel3) %>%
pivot_longer(!ParName, names_to = "Model", values_to = "Difference")
goa_results %>%
ggplot(aes(x = ParName, y = abs(Difference), colour = Model)) +
geom_point() +
facet_grid(~Model)
# * EBS ----
# Divide by max
grad_mle <- ebs_run$obj$gr(ebs_run$opt$par)
grad1 <- numDeriv::grad(func = ebs_run$obj$f, x = ebs_run$opt$par)
max(abs(grad1))
ebs_run$opt$max_gradient
max(abs(grad_mle))
grad1 - grad_mle
names(grad1)[which(abs(grad1) == max(abs(grad1)))]
# No divide
grad_mle2 <- ebs_run2$obj$gr(ebs_run2$opt$par)
grad2 <- numDeriv::grad(func = ebs_run2$obj$f, x = ebs_run2$opt$par)
max(abs(grad2))
ebs_run2$opt$max_gradient
max(abs(grad_mle2))
grad2 - grad_mle2
names(grad2)[which(abs(grad2) == max(abs(grad2)))]
# Divide by age
grad_mle3 <- ebs_run3$obj$gr(ebs_run3$opt$par)
grad3 <- numDeriv::grad(func = ebs_run3$obj$f, x = ebs_run3$opt$par)
max(abs(grad3))
ebs_run3$opt$max_gradient
max(abs(grad_mle3))
grad3 - grad_mle3
names(grad3)[which(abs(grad3) == max(abs(grad3)))]
# Plot
ebs_results <- data.frame(Param = names(ebs_run$opt$par),
MLEmodel1 = ebs_run$opt$par, ADgrModel1 = c(ebs_run$obj$gr(ebs_run$opt$par)), FDgrModel1 = grad1,
MLEmodel2 = ebs_run2$opt$par, ADgrModel2 = c(ebs_run2$obj$gr(ebs_run2$opt$par)), FDgrModel2 = grad2,
MLEmodel3 = ebs_run3$opt$par, ADgrModel3 = c(ebs_run3$obj$gr(ebs_run3$opt$par)), FDgrModel3 = grad3)
ebs_results <- ebs_results %>%
mutate(ParN = 1:n(),
ParName = paste0(ParN, Param),
GRdiffModel1 = ADgrModel1 - FDgrModel1,
GRdiffModel2 = ADgrModel2 - FDgrModel2,
GRdiffModel3 = ADgrModel3 - FDgrModel3) %>%
select(ParName, GRdiffModel1, GRdiffModel2, GRdiffModel3) %>%
pivot_longer(!ParName, names_to = "Model", values_to = "Difference")
ebs_results %>%
ggplot(aes(x = ParName, y = abs(Difference), colour = Model)) +
geom_point() +
facet_grid(~Model)
# Plot
goa_results <- data.frame(Param = names(ss_run$opt$par),
MLEmodel1 = ss_run$opt$par, ADgrModel1 = c(ss_run$obj$gr(ss_run$opt$par)), FDgrModel1 = grad1,
MLEmodel2 = ss_run2$opt$par, ADgrModel2 = c(ss_run2$obj$gr(ss_run2$opt$par)), FDgrModel2 = grad2,
MLEmodel3 = ss_run3$opt$par, ADgrModel3 = c(ss_run3$obj$gr(ss_run3$opt$par)), FDgrModel3 = grad3)
# Plot
ebs_results <- data.frame(Param = names(ebs_run$opt$par),
MLEmodel1 = ebs_run$opt$par, ADgrModel1 = c(ebs_run$obj$gr(ebs_run$opt$par)), FDgrModel1 = grad1,
MLEmodel2 = ebs_run2$opt$par, ADgrModel2 = c(ebs_run2$obj$gr(ebs_run2$opt$par)), FDgrModel2 = grad2,
MLEmodel3 = ebs_run3$opt$par, ADgrModel3 = c(ebs_run3$obj$gr(ebs_run3$opt$par)), FDgrModel3 = grad3)
ebs_results <- ebs_results %>%
mutate(ParN = 1:n(),
ParName = paste0(ParN, Param),
GRdiffModel1 = ADgrModel1 - FDgrModel1,
GRdiffModel2 = ADgrModel2 - FDgrModel2,
GRdiffModel3 = ADgrModel3 - FDgrModel3) %>%
select(ParName, GRdiffModel1, GRdiffModel2, GRdiffModel3) %>%
rename(MaxDivide = GRdiffModel1, NoDivide = GRdiffModel2, AgeDivide = GRdiffModel3) %>%
pivot_longer(!ParName, names_to = "Model", values_to = "Difference")
ebs_results %>%
ggplot(aes(x = ParName, y = abs(Difference), colour = Model)) +
geom_point() +
facet_grid(~Model)
# Gradients ----
# * GOA ----
# Divide by max
grad_mle <- ss_run$obj$gr(ss_run$opt$par)
grad1 <- numDeriv::grad(func = ss_run$obj$f, x = ss_run$opt$par)
max(abs(grad1))
ss_run$opt$max_gradient
max(abs(grad_mle))
grad1 - grad_mle
names(grad1)[which(abs(grad1) == max(abs(grad1)))]
# No divide
grad_mle2 <- ss_run2$obj$gr(ss_run2$opt$par)
grad2 <- numDeriv::grad(func = ss_run2$obj$f, x = ss_run2$opt$par)
max(abs(grad2))
ss_run2$opt$max_gradient
max(abs(grad_mle2))
grad2 - grad_mle2
names(grad2)[which(abs(grad2) == max(abs(grad2)))]
# Divide by age
grad_mle3 <- ss_run3$obj$gr(ss_run3$opt$par)
grad3 <- numDeriv::grad(func = ss_run3$obj$f, x = ss_run3$opt$par)
max(abs(grad3))
ss_run3$opt$max_gradient
max(abs(grad_mle3))
grad3 - grad_mle3
names(grad3)[which(abs(grad3) == max(abs(grad3)))]
# Plot
goa_results <- data.frame(Param = names(ss_run$opt$par),
MLEmodel1 = ss_run$opt$par, ADgrModel1 = c(ss_run$obj$gr(ss_run$opt$par)), FDgrModel1 = grad1,
MLEmodel2 = ss_run2$opt$par, ADgrModel2 = c(ss_run2$obj$gr(ss_run2$opt$par)), FDgrModel2 = grad2,
MLEmodel3 = ss_run3$opt$par, ADgrModel3 = c(ss_run3$obj$gr(ss_run3$opt$par)), FDgrModel3 = grad3)
goa_results <- goa_results %>%
mutate(ParN = 1:n(),
ParName = paste0(ParN, Param),
GRdiffModel1 = ADgrModel1 - FDgrModel1,
GRdiffModel2 = ADgrModel2 - FDgrModel2,
GRdiffModel3 = ADgrModel3 - FDgrModel3) %>%
select(ParName, GRdiffModel1, GRdiffModel2, GRdiffModel3) %>%
rename(MaxDivide = GRdiffModel1, NoDivide = GRdiffModel2, AgeDivide = GRdiffModel3) %>%
pivot_longer(!ParName, names_to = "Model", values_to = "Difference")
goa_results %>%
ggplot(aes(x = ParName, y = abs(Difference), colour = Model)) +
geom_point() +
facet_grid(~Model)
goa_results %>%
ggplot(aes(x = Model, y = abs(Difference), colour = ParName)) +
geom_point() +
facet_grid(~ParName)
goa_results %>%
ggplot(aes(x = Model, y = abs(Difference), colour = ParName)) +
geom_point() +
facet_wrap(~ParName)
goa_results %>%
slice(1:9) %>%
ggplot(aes(x = Model, y = abs(Difference), colour = ParName)) +
geom_point() +
facet_wrap(~ParName)
goa_results %>%
slice(1:30) %>%
ggplot(aes(x = Model, y = abs(Difference), colour = ParName)) +
geom_point() +
facet_wrap(~ParName)
ss_run3$obj$par
################################################
# Estimation
################################################
# * GOA ----
ss_run5 <- Rceattle::fit_mod(data_list = GOA2018SS,
inits = NULL, # Initial parameters = 0
file = NULL, # Don't save
estimateMode = 0, # Estimate
random_rec = FALSE, # No random recruitment
msmMode = 0, # Single species mode
phase = NULL,
verbose = 1)
plot_biomass(list(ss_run, ss_run5))
ss_run6 <- Rceattle::fit_mod(data_list = GOA2018SS,
TMBfilename = "src/TMB/ceattle_v01_11_sel_norm",
inits = NULL, # Initial parameters = 0
file = NULL, # Don't save
estimateMode = 0, # Estimate
random_rec = FALSE, # No random recruitment
msmMode = 0, # Single species mode
phase = NULL,
verbose = 1)
plot_biomass(list(ss_run2, ss_run6))
library(ggplot2)
library(Rceattle)
library(dplyr)
library(TMB)
library(numDeriv)
library(tidyr)
library(cowplot)
################################################
# Data
################################################
# Example
data("GOA2018SS")
data("BS2017SS")
################################################
# Estimation
################################################
# * GOA ----
ss_run5 <- Rceattle::fit_mod(data_list = GOA2018SS,
inits = NULL, # Initial parameters = 0
file = NULL, # Don't save
estimateMode = 0, # Estimate
random_rec = FALSE, # No random recruitment
msmMode = 0, # Single species mode
phase = NULL,
verbose = 1)
ss_run6 <- Rceattle::fit_mod(data_list = GOA2018SS,
TMBfilename = "src/TMB/ceattle_v01_11_sel_norm",
inits = NULL, # Initial parameters = 0
file = NULL, # Don't save
estimateMode = 0, # Estimate
random_rec = FALSE, # No random recruitment
msmMode = 0, # Single species mode
phase = NULL,
verbose = 1)
GOA2018SS$sel_age <- apply(ss_run2$quantities$sel[,1,,1], 1, which.max) - 1
ss_run3 <- Rceattle::fit_mod(data_list = GOA2018SS,
TMBfilename = "src/TMB/ceattle_v01_11_sel_norm_age",
inits = NULL, # Initial parameters = 0
file = NULL, # Don't save
estimateMode = 0, # Estimate
random_rec = FALSE, # No random recruitment
msmMode = 0, # Single species mode
phase = NULL,
verbose = 1)
# * EBS ----
colnames(BS2017SS$fleet_control)[2:ncol(BS2017SS$fleet_control)] <- c("EBS pollock fishery",
"EBS cod fishery",
"EBS atf fishery",
"EBS pollock bottom trawl",
"EBS cod bottom trawl",
"EBS atf bottom trawl",
"EBS pollock EIT")
ebs_run <- Rceattle::fit_mod(data_list = BS2017SS,
inits = NULL, # Initial parameters = 0
file = NULL, # Don't save
estimateMode = 0, # Estimate
random_rec = FALSE, # No random recruitment
msmMode = 0, # Single species mode
phase = NULL,
verbose = 1)
ebs_run2 <- Rceattle::fit_mod(data_list = BS2017SS,
TMBfilename = "src/TMB/ceattle_v01_11_sel_norm",
inits = NULL, # Initial parameters = 0
file = NULL, # Don't save
estimateMode = 0, # Estimate
random_rec = FALSE, # No random recruitment
msmMode = 0, # Single species mode
phase = NULL,
verbose = 1)
BS2017SS$sel_age <- apply(ebs_run2$quantities$sel[,1,,1], 1, which.max) - 1
ebs_run3 <- Rceattle::fit_mod(data_list = BS2017SS,
TMBfilename = "src/TMB/ceattle_v01_11_sel_norm_age",
inits = NULL, # Initial parameters = 0
file = NULL, # Don't save
estimateMode = 0, # Estimate
random_rec = FALSE, # No random recruitment
msmMode = 0, # Single species mode
phase = NULL,
verbose = 1)
# Plots ----
ss_run$data_list$spnames <- paste("GOA", ss_run2$data_list$spnames)
plot_f(list(ss_run, ss_run2, ss_run3), model_names = c("1. Norm by max", "2. No norm", "3. Norm by age"))
plot_catch(list(ss_run, ss_run2, ss_run3), model_names = c("1. Norm by max", "2. No norm", "3. Norm by age"))
plot_biomass(list(ss_run, ss_run2, ss_run3), model_names = c("1. Norm by max", "2. No norm", "3. Norm by age"), add_ci = T)
dev.off()
plot_selectivity(list(ss_run, ss_run2, ss_run3), model_names = c("1. Norm by max", "2. No norm", "3. Norm by age"))
plot_selectivity(list(ss_run2, ss_run, ss_run2, ss_run3), model_names = c("1. Norm by max", "2. No norm", "3. Norm by age"))
plot_selectivity(list(ss_run3, ss_run, ss_run2, ss_run3), model_names = c("1. Norm by max", "2. No norm", "3. Norm by age"))
plot_selectivity(ss_run)
plot_selectivity(ss_run2)
plot_selectivity(ss_run3)
ebs_run$data_list$spnames <- paste("EBS", ebs_run$data_list$spnames)
ebs_run$data_list$fleet_control$Fleet_name <- paste("EBS", ebs_run$data_list$fleet_control$Fleet_name)
plot_f(list(ebs_run, ebs_run2, ebs_run3), model_names = c("1. Norm by max", "2. No norm", "3. Norm by age"))
plot_catch(list(ebs_run, ebs_run2, ebs_run3), model_names = c("1. Norm by max", "2. No norm", "3. Norm by age"))
plot_biomass(list(ebs_run, ebs_run2, ebs_run3), model_names = c("1. Norm by max", "2. No norm", "3. Norm by age"), add_ci = T)
dev.off()
ebs_run$quantities$sel[7,,,] <- 0:1
ebs_run2$quantities$sel[7,,,] <- 0:1
ebs_run3$quantities$sel[7,,,] <- 0:1
plot_selectivity(list(ebs_run, ebs_run2, ebs_run3), model_names = c("1. Norm by max", "2. No norm", "3. Norm by age"))
plot_selectivity(list(ebs_run2, ebs_run, ebs_run2, ebs_run3), model_names = c("1. Norm by max", "2. No norm", "3. Norm by age"))
plot_selectivity(list(ebs_run3, ebs_run, ebs_run2, ebs_run3), model_names = c("1. Norm by max", "2. No norm", "3. Norm by age"))
plot_selectivity(ebs_run)
plot_selectivity(ebs_run2)
plot_selectivity(ebs_run3)
# Gradients ----
# * GOA ----
# Divide by max
grad_mle <- ss_run$obj$gr(ss_run$opt$par)
grad1 <- numDeriv::grad(func = ss_run$obj$f, x = ss_run$opt$par)
max(abs(grad1))
ss_run$opt$max_gradient
max(abs(grad_mle))
grad1 - grad_mle
names(grad1)[which(abs(grad1) == max(abs(grad1)))]
# No divide
grad_mle2 <- ss_run2$obj$gr(ss_run2$opt$par)
grad2 <- numDeriv::grad(func = ss_run2$obj$f, x = ss_run2$opt$par)
max(abs(grad2))
ss_run2$opt$max_gradient
max(abs(grad_mle2))
grad2 - grad_mle2
names(grad2)[which(abs(grad2) == max(abs(grad2)))]
# Divide by age
grad_mle3 <- ss_run3$obj$gr(ss_run3$opt$par)
grad3 <- numDeriv::grad(func = ss_run3$obj$f, x = ss_run3$opt$par)
max(abs(grad3))
ss_run3$opt$max_gradient
max(abs(grad_mle3))
grad3 - grad_mle3
names(grad3)[which(abs(grad3) == max(abs(grad3)))]
# Plot
goa_results <- data.frame(Param = names(ss_run$opt$par),
MLEmodel1 = ss_run$opt$par,
ADgrModel1 = c(ss_run$obj$gr(ss_run$opt$par)),
FDgrModel1 = numDeriv::grad(func = ss_run3$obj$f, x = ss_run3$obj$par),
MLEmodel2 = ss_run2$opt$par,
ADgrModel2 = c(ss_run2$obj$gr(ss_run2$opt$par)),
FDgrModel2 = grad2,
MLEmodel3 = ss_run3$opt$par,
ADgrModel3 = c(ss_run3$obj$gr(ss_run3$opt$par)),
FDgrModel3 = grad3)
goa_results <- goa_results %>%
mutate(ParN = 1:n(),
ParName = paste0(ParN, Param),
GRdiffModel1 = ADgrModel1 - FDgrModel1,
GRdiffModel2 = ADgrModel2 - FDgrModel2,
GRdiffModel3 = ADgrModel3 - FDgrModel3) %>%
select(ParName, GRdiffModel1, GRdiffModel2, GRdiffModel3) %>%
rename(MaxDivide = GRdiffModel1, NoDivide = GRdiffModel2, AgeDivide = GRdiffModel3) %>%
pivot_longer(!ParName, names_to = "Model", values_to = "Difference")
goa_results %>%
ggplot(aes(x = ParName, y = abs(Difference), colour = Model)) +
geom_point() +
facet_grid(~Model)
goa_results %>%
ggplot(aes(x = ParName, y = abs(Difference), colour = Model)) +
geom_point() +
facet_grid(~Model)
goa_results %>%
slice(1:30) %>%
ggplot(aes(x = Model, y = abs(Difference), colour = ParName)) +
geom_point() +
facet_wrap(~ParName)
goa_results %>%
ggplot(aes(x = ParName, y = log10(abs(Difference)), colour = Model)) +
geom_point() +
facet_grid(~Model)
# Plot
goa_results <- data.frame(Param = names(ss_run$opt$par),
MLEmodel1 = ss_run$opt$par,
ADgrModel1 = c(ss_run$obj$gr(ss_run$opt$par)),
FDgrModel1 = numDeriv::grad(func = ss_run3$obj$f, x = ss_run3$obj$par),
MLEmodel2 = ss_run2$opt$par,
ADgrModel2 = c(ss_run2$obj$gr(ss_run2$opt$par)),
FDgrModel2 = grad2,
MLEmodel3 = ss_run3$opt$par,
ADgrModel3 = c(ss_run3$obj$gr(ss_run3$opt$par)),
FDgrModel3 = grad3)
sum(c(ss_run$obj$gr(ss_run$opt$par)) == 0)
sum(c(ss_run2$obj$gr(ss_run$opt$par)) == 0)
sum(c(ss_run3$obj$gr(ss_run$opt$par)) == 0)
# Plots ----
ss_run$data_list$spnames <- paste("GOA", ss_run2$data_list$spnames)
plot_f(list(ss_run, ss_run2, ss_run3), model_names = c("1. Norm by max", "2. No norm", "3. Norm by age"))
plot_catch(list(ss_run, ss_run2, ss_run3), model_names = c("1. Norm by max", "2. No norm", "3. Norm by age"))
plot_biomass(list(ss_run, ss_run2, ss_run3), model_names = c("1. Norm by max", "2. No norm", "3. Norm by age"), add_ci = T)
plot_biomass(list(ss_run, ss_run2, ss_run3), model_names = c("1. Norm by max", "2. No norm", "3. Norm by age"), add_ci = T)
save.image("C:/Users/grant.adams/GitHub/RceattleRuns/Selectivity experiments/wd.RData")
