random_rec = FALSE, # No random recruitment
msmMode = 0, # Single species mode
phase = TRUE,
verbose = 1)
load("~/Documents/GitHub/dev ss run.RData")
inits <- mod_objects$estimated_params
names(ss_run$estimated_params)[!names(ss_run$estimated_params) %in% names(inits)]
inits$R_ln_sd <- inits$ln_rec_sigma
inits$ln_rec_sigma <- NULL
inits$index_ln_q <- inits$ln_srv_q
inits$ln_srv_q <- NULL
inits$index_q_dev <- inits$ln_srv_q_dev
inits$ln_srv_q_dev <- NULL
inits$index_q_ln_sd <- inits$ln_sigma_srv_q
inits$ln_sigma_srv_q <- NULL
inits$sel_dev_ln_sd <- inits$ln_sigma_sel
inits$ln_sigma_sel <- NULL
inits$index_q_dev_ln_sd <- inits$ln_sigma_time_varying_srv_q
inits$ln_sigma_time_varying_srv_q <- NULL
inits$index_ln_sd <- inits$ln_sigma_srv_index
inits$ln_sigma_srv_index <- NULL
inits$catch_ln_sd <- inits$ln_sigma_fsh_catch
inits$ln_sigma_fsh_catch <- NULL
inits$index_q_beta <- ss_run$estimated_params$index_q_beta
inits$beta_rec_pars <- ss_run$estimated_params$beta_rec_pars
inits$index_q_rho <- ss_run$estimated_params$index_q_rho
names(ss_run$estimated_params)[!names(ss_run$estimated_params) %in% names(inits)]
names(inits)[!names(inits) %in% names(ss_run$estimated_params)]
inits[c("ln_pop_scalar", "ln_sex_ratio_sigma", "logH_1", "logH_1a", "logH_1b", "logH_2", "logH_3", "H_4", "log_gam_a", "log_gam_b", "log_phi")] = NULL
map <- build_map(ss_run$data_list, inits)
names(map$mapList)[!names(map$mapList) %in% names(inits)]
names(inits)[!names(inits) %in% names(map$mapList)]
ss_run$data_list$fleet_control$Comp_loglike <- -1
ss_init <- Rceattle::fit_mod(data_list = ss_run$data_list,
inits = inits, # Initial parameters = 0
file = NULL, # Don't save
estimateMode = 3, # Estimate
random_rec = FALSE, # No random recruitment
msmMode = 0, # Single species mode
phase = TRUE,
verbose = 1)
sum(ss_init$quantities$sel[8,1,,]-mod_objects$quantities$sel[8,1,,])
round(ss_init$quantities$jnll_comp, 4)-round(mod_objects$quantities$jnll_comp, 4)
ss_init$quantities$ln_catch_sd-mod_objects$quantities$fsh_log_sd_hat
ss_init$quantities$catch_hat-mod_objects$quantities$fsh_bio_hat
ss_init$quantities$catch_hat[1]
mod_objects$quantities$fsh_bio_hat[1]
mod_objects$quantities$F_spp-ss_init$quantities$F_spp
mod_objects$quantities$F_flt-ss_init$quantities$F_flt
sum(mod_objects$quantities$F_flt-ss_init$quantities$F_flt)
sum(mod_objects$quantities$F_flt_age-ss_init$quantities$F_flt_age)
sum(mod_objects$quantities$M-ss_init$quantities$M_at_age)
sum(mod_objects$quantities$Z-ss_init$quantities$Z_at_age)
ss_init$data_list$wt
mod_objects$data_list$wt
ss_init$data_list$wt-mod_objects$data_list$wt
ss_init$data_list$wt[,-1]-mod_objects$data_list$wt[,-1]
sum(ss_init$data_list$wt[,-1]-mod_objects$data_list$wt[,-1], na.rm = T)
sum(mod_objects$quantities$NByage-ss_init$quantities$N_at_age)
sum(mod_objects$quantities$NByage[1,1,,]-ss_init$quantities$N_at_age[1,1,,])
ss_init$quantities$N_at_age[1,1,,]
(mod_objects$quantities$NByage[1,1,,]-ss_init$quantities$N_at_age[1,1,,])
ss_init$data_list$initMode
ss_init$estimated_params$init_dev
mod_objects$estimated_params$init_dev
mod_objects$estimated_params$init_dev-ss_init$estimated_params$init_dev
mod_objects$map$mapList$init_dev
ss_init$map$mapList$init_dev
ss_init$estimated_params$ln_Finit
mod_objects$estimated_params$ln_Finit
ss_init$map$mapList$ln_Finit
mod_objects$map$mapList$ln_Finit
# Code to run Gulf of Alaska CEATTLE model in TMB
# Citation:
# Adams, G. D., Holsman, K. K., Barbeaux, S. J., Dorn, M. W., Ianelli, J. N., Spies, I., ... & Punt, A. E. (2022). An ensemble approach to understand predation mortality for groundfish in the Gulf of Alaska. Fisheries Research, 251, 106303.
library(Rceattle)
library(dplyr)
################################################
# Data
################################################
# Example
# To run the 2018 single species assessment for the Gulf of Alaska, a data file must first be loaded:
data("GOA2018SS") # Single-species data. ?BS2017SS for more information on the data
################################################
# Estimation
################################################
# - Single-species
# Then the model can be fit by setting `msmMode = 0` using the `Rceattle` function:
# GOA2018SS$fleet_control$proj_F_prop <- rep(1, nrow(GOA2018SS$fleet_control))
ss_run <- Rceattle::fit_mod(data_list = GOA2018SS,
inits = NULL, # Initial parameters = 0
file = NULL, # Don't save
estimateMode = 3, # Estimate
random_rec = FALSE, # No random recruitment
msmMode = 0, # Single species mode
phase = TRUE,
verbose = 1)
load("~/Documents/GitHub/dev ss run.RData")
inits <- mod_objects$estimated_params
names(ss_run$estimated_params)[!names(ss_run$estimated_params) %in% names(inits)]
inits$R_ln_sd <- inits$ln_rec_sigma
inits$ln_rec_sigma <- NULL
inits$index_ln_q <- inits$ln_srv_q
inits$ln_srv_q <- NULL
inits$index_q_dev <- inits$ln_srv_q_dev
inits$ln_srv_q_dev <- NULL
inits$index_q_ln_sd <- inits$ln_sigma_srv_q
inits$ln_sigma_srv_q <- NULL
inits$sel_dev_ln_sd <- inits$ln_sigma_sel
inits$ln_sigma_sel <- NULL
inits$index_q_dev_ln_sd <- inits$ln_sigma_time_varying_srv_q
inits$ln_sigma_time_varying_srv_q <- NULL
inits$index_ln_sd <- inits$ln_sigma_srv_index
inits$ln_sigma_srv_index <- NULL
inits$catch_ln_sd <- inits$ln_sigma_fsh_catch
inits$ln_sigma_fsh_catch <- NULL
inits$index_q_beta <- ss_run$estimated_params$index_q_beta
inits$beta_rec_pars <- ss_run$estimated_params$beta_rec_pars
inits$index_q_rho <- ss_run$estimated_params$index_q_rho
names(ss_run$estimated_params)[!names(ss_run$estimated_params) %in% names(inits)]
names(inits)[!names(inits) %in% names(ss_run$estimated_params)]
inits[c("ln_pop_scalar", "ln_sex_ratio_sigma", "logH_1", "logH_1a", "logH_1b", "logH_2", "logH_3", "H_4", "log_gam_a", "log_gam_b", "log_phi")] = NULL
map <- build_map(ss_run$data_list, inits)
names(map$mapList)[!names(map$mapList) %in% names(inits)]
names(inits)[!names(inits) %in% names(map$mapList)]
ss_run$data_list$fleet_control$Comp_loglike <- -1
ss_init <- Rceattle::fit_mod(data_list = ss_run$data_list,
inits = inits, # Initial parameters = 0
file = NULL, # Don't save
estimateMode = 3, # Estimate
random_rec = FALSE, # No random recruitment
msmMode = 0, # Single species mode
phase = TRUE,
verbose = 1)
sum(ss_init$quantities$sel[8,1,,]-mod_objects$quantities$sel[8,1,,])
round(ss_init$quantities$jnll_comp, 4)-round(mod_objects$quantities$jnll_comp, 4)
ss_init$quantities$ln_catch_sd-mod_objects$quantities$fsh_log_sd_hat
ss_init$quantities$catch_hat-mod_objects$quantities$fsh_bio_hat
ss_init$quantities$catch_hat[1]
mod_objects$quantities$fsh_bio_hat[1]
mod_objects$quantities$F_spp-ss_init$quantities$F_spp
sum(mod_objects$quantities$F_flt-ss_init$quantities$F_flt)
sum(mod_objects$quantities$F_flt_age-ss_init$quantities$F_flt_age)
sum(mod_objects$quantities$M-ss_init$quantities$M_at_age)
sum(mod_objects$quantities$Z-ss_init$quantities$Z_at_age)
(mod_objects$quantities$NByage[1,1,,]-ss_init$quantities$N_at_age[1,1,,])
ss_init$quantities$R_init
mod_objects$quantities$Rinit
mod_objects$quantities$Rinit * mod_objects$quantities$M1[1,1,1]
ss_init$quantities$N_at_age[1,1,,1]
mod_objects$quantities$NByage[1,1,,1]
mod_objects$quantities$SPRFinit
ss_init$quantities$SPRFinit
ss_init$estimated_params$ln_Finit
mod_objects$estimated_params$ln_Finit
inits$ln_Finit
ss_init$quantities$R_sexr
mod_objects$quantities$R_sexr
mod_objects$obj$env$parList()$init_Dev
mod_objects$obj$env$parList()$init_dev
ss_init$obj$env$parList()$init_dev
mod_objects$obj$env$parList()$init_dev-ss_init$obj$env$parList()$init_dev
ss_init$obj$env$map$init_dev
mod_objects$obj$env$map$init_dev
ss_init$quantities$N_at_age[1,1,,1]
ss_init$quantities$N_at_age[1,1,,1] * ss_init$quantities$M_at_age[1,1,,1]
ss_init$quantities$N_at_age[1,1,1,1] * ss_init$quantities$M_at_age[1,1,1,1]
ss_init$quantities$N_at_age[1,1,1,1] * exp(-ss_init$quantities$M_at_age[1,1,1,1])
ss_init$quantities$N_at_age[1,1,,1]
ss_init$quantities$N_at_age[1,1,1,1] * exp(-ss_init$quantities$M_at_age[1,1,1,1] + ss_init$estimated_params$init_dev[1,1])
mod_objects$quantities$NByage[1,1,,1]
ss_init$quantities$NByage[1,1,,1]
mod_objects$quantities$NByage[1,1,,1]
ss_init$quantities$NByage[1,1,,1]
ss_init$quantities$N_at_age[1,1,,1]
ss_init$quantities$N_at_age[1,1,1,1] * exp(ss_init$estimated_params$init_dev[1,1])
ss_init$quantities$N_at_age[1,1,1,1] * exp(-ss_init$quantities$M_at_age[1,1,1,1] + ss_init$estimated_params$init_dev[1,1])
ss_init$quantities$N_at_age[1,1,1,1] * exp(-ss_init$quantities$M_at_age[1,1,1,1] )
ss_init$quantities$N_at_age[1,1,1,1]
ss_init$quantities$M_at_age[1,1,1,1]
mod_objects$quantities$M_at_age[1,1,1,1]
mod_objects$quantities$M1[1,1,1,1]
mod_objects$quantities$M[1,1,1,1]
ss_init$quantities$N_at_age[1,1,1,1] * exp(-ss_init$quantities$M_at_age[1,1,1,1] + ss_init$estimated_params$init_dev[1,1] - exp(-10))
exp(-10)
mod_objects$quantities$NByage[1,1,,1]
ss_init$quantities$N_at_age[1,1,,1]
ss_init$quantities$N_at_age[1,1,1,1] * exp(-ss_init$quantities$M_at_age[1,1,1,1] + ss_init$estimated_params$init_dev[1,1] - exp(-10))
log(ss_init$quantities$N_at_age[1,1,2,1]/ss_init$quantities$N_at_age[1,1,1,1])
-ss_init$quantities$M_at_age[1,1,1,1] + ss_init$estimated_params$init_dev[1,1]
-ss_init$quantities$M_at_age[1,1,1,1]
ss_init$estimated_params$init_dev[1,1]
ss_init$estimated_params$init_dev
log(mod_objects$quantities$N_at_age[1,1,2,1]/mod_objects$quantities$N_at_age[1,1,1,1])
log(mod_objects$quantities$NByage[1,1,2,1]/mod_objects$quantities$NByage[1,1,1,1])
log(ss_init$quantities$N_at_age[1,1,2,1]/ss_init$quantities$N_at_age[1,1,1,1])
-log(ss_init$quantities$N_at_age[1,1,2,1]/ss_init$quantities$N_at_age[1,1,1,1])
-log(ss_init$quantities$N_at_age[1,1,2,1]/ss_init$quantities$N_at_age[1,1,1,1]) - 1.39
-log(ss_init$quantities$N_at_age[1,1,2,1]/ss_init$quantities$N_at_age[1,1,1,1]) + 1.39
ss_init$estimated_params$init_dev[1,1]
ss_init$estimated_params$init_dev[1,2]
# Code to run Gulf of Alaska CEATTLE model in TMB
# Citation:
# Adams, G. D., Holsman, K. K., Barbeaux, S. J., Dorn, M. W., Ianelli, J. N., Spies, I., ... & Punt, A. E. (2022). An ensemble approach to understand predation mortality for groundfish in the Gulf of Alaska. Fisheries Research, 251, 106303.
library(Rceattle)
################################################
# Data
################################################
# Example
# To run the 2018 single species assessment for the Gulf of Alaska, a data file must first be loaded:
data("GOA2018SS") # Single-species data. ?BS2017SS for more information on the data
################################################
# Estimation
################################################
# - Single-species
# Then the model can be fit by setting `msmMode = 0` using the `Rceattle` function:
GOA2018SS$fleet_control$proj_F_prop <- rep(1, nrow(GOA2018SS$fleet_control))
ss_run <- Rceattle::fit_mod(data_list = GOA2018SS,
inits = NULL, # Initial parameters = 0
file = "goa save", # Don't save
estimateMode = 0, # Estimate
random_rec = FALSE, # No random recruitment
msmMode = 0, # Single species mode
phase = "default",
verbose = 1)
plot_biomass(ss_run, add_ci = TRUE)
# Code to run Gulf of Alaska CEATTLE model in TMB
# Citation:
# Adams, G. D., Holsman, K. K., Barbeaux, S. J., Dorn, M. W., Ianelli, J. N., Spies, I., ... & Punt, A. E. (2022). An ensemble approach to understand predation mortality for groundfish in the Gulf of Alaska. Fisheries Research, 251, 106303.
library(Rceattle)
library(dplyr)
################################################
# Data
################################################
# Example
# To run the 2018 single species assessment for the Gulf of Alaska, a data file must first be loaded:
data("GOA2018SS") # Single-species data. ?BS2017SS for more information on the data
################################################
# Estimation
################################################
# - Single-species
# Then the model can be fit by setting `msmMode = 0` using the `Rceattle` function:
# GOA2018SS$fleet_control$proj_F_prop <- rep(1, nrow(GOA2018SS$fleet_control))
ss_run <- Rceattle::fit_mod(data_list = GOA2018SS,
inits = NULL, # Initial parameters = 0
file = NULL, # Don't save
estimateMode = 3, # Estimate
random_rec = FALSE, # No random recruitment
msmMode = 0, # Single species mode
phase = TRUE,
verbose = 1)
load("~/Documents/GitHub/goa save.RData")
inits <- mod_objects$estimated_params
names(ss_run$estimated_params)[!names(ss_run$estimated_params) %in% names(inits)]
inits$R_ln_sd <- inits$ln_rec_sigma
inits$ln_rec_sigma <- NULL
inits$index_ln_q <- inits$ln_srv_q
inits$ln_srv_q <- NULL
inits$index_q_dev <- inits$ln_srv_q_dev
inits$ln_srv_q_dev <- NULL
inits$index_q_ln_sd <- inits$ln_sigma_srv_q
inits$ln_sigma_srv_q <- NULL
inits$sel_dev_ln_sd <- inits$ln_sigma_sel
inits$ln_sigma_sel <- NULL
inits$index_q_dev_ln_sd <- inits$ln_sigma_time_varying_srv_q
inits$ln_sigma_time_varying_srv_q <- NULL
inits$index_ln_sd <- inits$ln_sigma_srv_index
inits$ln_sigma_srv_index <- NULL
inits$catch_ln_sd <- inits$ln_sigma_fsh_catch
inits$ln_sigma_fsh_catch <- NULL
inits$index_q_beta <- ss_run$estimated_params$index_q_beta
inits$beta_rec_pars <- ss_run$estimated_params$beta_rec_pars
inits$index_q_rho <- ss_run$estimated_params$index_q_rho
names(ss_run$estimated_params)[!names(ss_run$estimated_params) %in% names(inits)]
names(inits)[!names(inits) %in% names(ss_run$estimated_params)]
inits[c("ln_pop_scalar", "ln_sex_ratio_sigma", "logH_1", "logH_1a", "logH_1b", "logH_2", "logH_3", "H_4", "log_gam_a", "log_gam_b", "log_phi")] = NULL
map <- build_map(ss_run$data_list, inits)
names(map$mapList)[!names(map$mapList) %in% names(inits)]
names(inits)[!names(inits) %in% names(map$mapList)]
ss_run$data_list$fleet_control$Comp_loglike <- -1
ss_init <- Rceattle::fit_mod(data_list = ss_run$data_list,
inits = inits, # Initial parameters = 0
file = NULL, # Don't save
estimateMode = 3, # Estimate
random_rec = FALSE, # No random recruitment
msmMode = 0, # Single species mode
phase = TRUE,
verbose = 1)
sum(ss_init$quantities$sel[8,1,,]-mod_objects$quantities$sel[8,1,,])
round(ss_init$quantities$jnll_comp, 4)-round(mod_objects$quantities$jnll_comp, 4)
ss_init$quantities$ln_catch_sd-mod_objects$quantities$fsh_log_sd_hat
ss_init$quantities$catch_hat-mod_objects$quantities$fsh_bio_hat
ss_init$quantities$catch_hat[1]
mod_objects$quantities$fsh_bio_hat[1]
mod_objects$quantities$F_spp-ss_init$quantities$F_spp
sum(mod_objects$quantities$F_flt-ss_init$quantities$F_flt)
sum(mod_objects$quantities$F_flt_age-ss_init$quantities$F_flt_age)
sum(mod_objects$quantities$M-ss_init$quantities$M_at_age)
sum(mod_objects$quantities$Z-ss_init$quantities$Z_at_age)
(mod_objects$quantities$NByage[1,1,,1]-ss_init$quantities$N_at_age[1,1,,1])
sum(ss_init$data_list$wt[,-1]-mod_objects$data_list$wt[,-1], na.rm = T)
ss_init$quantities$mort_sum[1,]
mod_objects$quantities$mort_sum[1,]
ss_init$quantities$mort_sum[1,]-mod_objects$quantities$mort_sum[1,]
ss_init$quantities$init_dev[1,]
mod_objects$quantities$init_dev[1,]
ss_init$quantities$init_dev[1,]-mod_objects$quantities$init_dev[1,]
ss_init$quantities$Finit-mod_objects$quantities$Finit
ss_init$quantities$Finit
mod_objects$quantities$Finit
log(ss_init$quantities$Finit)
mod_objects$quantities$M1[1,,]
ss_init$quantities$M1[1,,]
mod_objects$quantities$M1[1,,]
ss_init$quantities$mort_sum[1,]
mod_objects$quantities$mort_sum[1,]
log(ss_init$quantities$Finit)
ss_init$quantities$Finit
mod_objects$quantities$Finit
ss_init$quantities$mort_sum[1,]
mod_objects$quantities$mort_sum[1,]
mod_objects$data_list$initMode
ss_init$data_list$initMode
ss_init$estimated_params$ln_Finit
mod_objects$estimated_params$ln_Finit
ss_init$map$mapList$ln_Finit
mod_objects$map$mapList$ln_Finit
exp(-10)
exp(-100)
# Code to run Gulf of Alaska CEATTLE model in TMB
# Citation:
# Adams, G. D., Holsman, K. K., Barbeaux, S. J., Dorn, M. W., Ianelli, J. N., Spies, I., ... & Punt, A. E. (2022). An ensemble approach to understand predation mortality for groundfish in the Gulf of Alaska. Fisheries Research, 251, 106303.
library(Rceattle)
library(dplyr)
################################################
# Data
################################################
# Example
# To run the 2018 single species assessment for the Gulf of Alaska, a data file must first be loaded:
data("GOA2018SS") # Single-species data. ?BS2017SS for more information on the data
################################################
# Estimation
################################################
# - Single-species
# Then the model can be fit by setting `msmMode = 0` using the `Rceattle` function:
# GOA2018SS$fleet_control$proj_F_prop <- rep(1, nrow(GOA2018SS$fleet_control))
ss_run <- Rceattle::fit_mod(data_list = GOA2018SS,
inits = NULL, # Initial parameters = 0
file = NULL, # Don't save
estimateMode = 3, # Estimate
random_rec = FALSE, # No random recruitment
msmMode = 0, # Single species mode
phase = TRUE,
verbose = 1)
load("~/Documents/GitHub/goa save.RData")
inits <- mod_objects$estimated_params
names(ss_run$estimated_params)[!names(ss_run$estimated_params) %in% names(inits)]
inits$R_ln_sd <- inits$ln_rec_sigma
inits$ln_rec_sigma <- NULL
inits$index_ln_q <- inits$ln_srv_q
inits$ln_srv_q <- NULL
inits$index_q_dev <- inits$ln_srv_q_dev
inits$ln_srv_q_dev <- NULL
inits$index_q_ln_sd <- inits$ln_sigma_srv_q
inits$ln_sigma_srv_q <- NULL
inits$sel_dev_ln_sd <- inits$ln_sigma_sel
inits$ln_sigma_sel <- NULL
inits$index_q_dev_ln_sd <- inits$ln_sigma_time_varying_srv_q
inits$ln_sigma_time_varying_srv_q <- NULL
inits$index_ln_sd <- inits$ln_sigma_srv_index
inits$ln_sigma_srv_index <- NULL
inits$catch_ln_sd <- inits$ln_sigma_fsh_catch
inits$ln_sigma_fsh_catch <- NULL
inits$index_q_beta <- ss_run$estimated_params$index_q_beta
inits$beta_rec_pars <- ss_run$estimated_params$beta_rec_pars
inits$index_q_rho <- ss_run$estimated_params$index_q_rho
names(ss_run$estimated_params)[!names(ss_run$estimated_params) %in% names(inits)]
names(inits)[!names(inits) %in% names(ss_run$estimated_params)]
inits[c("ln_pop_scalar", "ln_sex_ratio_sigma", "logH_1", "logH_1a", "logH_1b", "logH_2", "logH_3", "H_4", "log_gam_a", "log_gam_b", "log_phi")] = NULL
map <- build_map(ss_run$data_list, inits)
names(map$mapList)[!names(map$mapList) %in% names(inits)]
names(inits)[!names(inits) %in% names(map$mapList)]
ss_run$data_list$fleet_control$Comp_loglike <- -1
ss_init <- Rceattle::fit_mod(data_list = ss_run$data_list,
inits = inits, # Initial parameters = 0
file = NULL, # Don't save
estimateMode = 3, # Estimate
random_rec = FALSE, # No random recruitment
msmMode = 0, # Single species mode
phase = TRUE,
verbose = 1)
sum(ss_init$quantities$sel[8,1,,]-mod_objects$quantities$sel[8,1,,])
round(ss_init$quantities$jnll_comp, 4)-round(mod_objects$quantities$jnll_comp, 4)
ss_init$data_list$fleet_control[c(10:13),]
sum(ss_init$quantities$sel[8,1,,]-mod_objects$quantities$sel[8,1,,])
sum(ss_init$quantities$sel-mod_objects$quantities$sel)
(mod_objects$quantities$NByage[1,1,,1]-ss_init$quantities$N_at_age[1,1,,1])
sum(mod_objects$quantities$NByage[1,1,,]-ss_init$quantities$N_at_age[1,1,,])
sum(mod_objects$quantities$NByage-ss_init$quantities$N_at_age)
mod_objects$data_list$fleet_control[c(10:13),]
sum(mod_objects$quantities$comp_hat-ss_init$quantities$comp_hat)
round(ss_init$quantities$jnll_comp, 4)-round(mod_objects$quantities$jnll_comp, 4)
sum(mod_objects$quantities$comp_n-ss_init$quantities$comp_n)
sum(mod_objects$quantities$comp_obs-ss_init$quantities$comp_obs)
sum(mod_objects$quantities$comp_obs-ss_init$quantities$comp_obs, na.rm = T)
check <- ss_init$data_list$comp_data %>%
filter(Fleet_code == 10)
View(check)
check <- mod_objects$data_list$comp_data %>%
filter(Fleet_code == 10)
sum(check[,-1])
View(check)
check
(mod_objects$quantities$comp_obs-ss_init$quantities$comp_obs)
check <- (mod_objects$quantities$comp_obs-ss_init$quantities$comp_obs)
ss_init$map$mapList$sel_inf[,8,]
ss_init$map$mapList$sel_inf[1,8,]
ss_init$map$mapList$sel_inf[2,8,]
ss_init$estimated_params$sel_inf[2,8,]
# Code to run Gulf of Alaska CEATTLE model in TMB
# Citation:
# Adams, G. D., Holsman, K. K., Barbeaux, S. J., Dorn, M. W., Ianelli, J. N., Spies, I., ... & Punt, A. E. (2022). An ensemble approach to understand predation mortality for groundfish in the Gulf of Alaska. Fisheries Research, 251, 106303.
library(Rceattle)
library(dplyr)
################################################
# Data
################################################
# Example
# To run the 2018 single species assessment for the Gulf of Alaska, a data file must first be loaded:
data("GOA2018SS") # Single-species data. ?BS2017SS for more information on the data
################################################
# Estimation
################################################
# - Single-species
# Then the model can be fit by setting `msmMode = 0` using the `Rceattle` function:
# GOA2018SS$fleet_control$proj_F_prop <- rep(1, nrow(GOA2018SS$fleet_control))
ss_run <- Rceattle::fit_mod(data_list = GOA2018SS,
inits = NULL, # Initial parameters = 0
file = NULL, # Don't save
estimateMode = 3, # Estimate
random_rec = FALSE, # No random recruitment
msmMode = 0, # Single species mode
phase = TRUE,
verbose = 1)
load("~/Documents/GitHub/goa save.RData")
inits <- mod_objects$estimated_params
names(ss_run$estimated_params)[!names(ss_run$estimated_params) %in% names(inits)]
inits$R_ln_sd <- inits$ln_rec_sigma
inits$ln_rec_sigma <- NULL
inits$index_ln_q <- inits$ln_srv_q
inits$ln_srv_q <- NULL
inits$index_q_dev <- inits$ln_srv_q_dev
inits$ln_srv_q_dev <- NULL
inits$index_q_ln_sd <- inits$ln_sigma_srv_q
inits$ln_sigma_srv_q <- NULL
inits$sel_dev_ln_sd <- inits$ln_sigma_sel
inits$ln_sigma_sel <- NULL
inits$index_q_dev_ln_sd <- inits$ln_sigma_time_varying_srv_q
inits$ln_sigma_time_varying_srv_q <- NULL
inits$index_ln_sd <- inits$ln_sigma_srv_index
inits$ln_sigma_srv_index <- NULL
inits$catch_ln_sd <- inits$ln_sigma_fsh_catch
inits$ln_sigma_fsh_catch <- NULL
inits$index_q_beta <- ss_run$estimated_params$index_q_beta
inits$beta_rec_pars <- ss_run$estimated_params$beta_rec_pars
inits$index_q_rho <- ss_run$estimated_params$index_q_rho
names(ss_run$estimated_params)[!names(ss_run$estimated_params) %in% names(inits)]
names(inits)[!names(inits) %in% names(ss_run$estimated_params)]
inits[c("ln_pop_scalar", "ln_sex_ratio_sigma", "logH_1", "logH_1a", "logH_1b", "logH_2", "logH_3", "H_4", "log_gam_a", "log_gam_b", "log_phi")] = NULL
map <- build_map(ss_run$data_list, inits)
names(map$mapList)[!names(map$mapList) %in% names(inits)]
names(inits)[!names(inits) %in% names(map$mapList)]
ss_run$data_list$fleet_control$Comp_loglike <- -1
ss_init <- Rceattle::fit_mod(data_list = ss_run$data_list,
inits = inits, # Initial parameters = 0
file = NULL, # Don't save
estimateMode = 3, # Estimate
random_rec = FALSE, # No random recruitment
msmMode = 0, # Single species mode
phase = TRUE,
verbose = 1)
sum(ss_init$quantities$sel-mod_objects$quanti
################################################
# Estimation
################################################
# - Single-species
# Then the model can be fit by setting `msmMode = 0` using the `Rceattle` function:
# GOA2018SS$fleet_control$proj_F_prop <- rep(1, nrow(GOA2018SS$fleet_control))
ss_run <- Rceattle::fit_mod(data_list = GOA2018SS,
inits = NULL, # Initial parameters = 0
file = NULL, # Don't save
estimateMode = 0, # Estimate
random_rec = FALSE, # No random recruitment
msmMode = 0, # Single species mode
phase = TRUE,
verbose = 1)
load("~/Documents/GitHub/goa save.RData")
plot_biomass(list(mod_objects, ss_run))
ss_run$quantities$index_q
mod_objects$quantities$index_q
mod_objects$quantities$srv_q
plot_selectivity(ss_run)
plot_selectivity(ss_run)
plot_selectivity(mod_objects)
ss_run$map$mapList$sel_inf[,8,]
ss_run$map$mapList$ln_sel_slp[,8,]
ss_run$map$mapList$sel_inf_dev[,8,]
ss_run$map$mapList$sel_inf_dev[,8,,]
ss_run$map$mapList$sel_inf_dev[,8,1,]
ss_run$estimated_params$sel_inf_dev[,8,1,]
ss_run$estimated_params$sel_inf[,8,]
mod_objects$estimated_params$sel_inf[,8,]
