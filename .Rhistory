return(list(Flimit = Flimit, Ftarget = Ftarget))
}
Pvals <- seq(0,1,length.out = 1000)
Tier3Ftargets <- sapply(Pvals, function(x) tier3hcr_fun(Pcur = x, Plimit = 0.2, Alpha = 0.05)$Ftarget)
Tier3Flimits <- sapply(Pvals, function(x) tier3hcr_fun(Pcur = x, Plimit = 0.2, Alpha = 0.05)$Flimit)
Tier3FtargetsATF <- sapply(Pvals, function(x) tier3hcr_fun(Pcur = x, Plimit = 0, Alpha = 0.05)$Ftarget)
Tier3FlimitsATF <- sapply(Pvals, function(x) tier3hcr_fun(Pcur = x, Plimit = 0, Alpha = 0.05)$Flimit)
SESSFCat1Ftargets <- sapply(Pvals, function(x) sessfcat1hcr_fun(Pcur = x)$Ftarget)
SESSFCat1Flimits <- sapply(Pvals, function(x) sessfcat1hcr_fun(Pcur = x)$Flimit)
PFMCCat1Ftargets <- sapply(Pvals, function(x) pfmccat1hcr_fun(Pcur = x)$Ftarget)
PFMCCat1Flimits <- sapply(Pvals, function(x) pfmccat1hcr_fun(Pcur = x)$Flimit)
PFMCCat1FtargetsFlatfish <- sapply(Pvals, function(x) pfmccat1hcr_fun(Pcur = x, Ptarget = 0.25, Plimit = 0.05, Flimit = F30, sigma = 0.5, Pstar = 0.45)$Ftarget)
#--------------------------
# Plot it
par(mar = c(3, 3, 0.5, 0.5))
# Colors (by EM/HCR)
MPcols <- gmri_pal("mixed")(10)[1:8]
plot(NA,NA, ylim = c(0, 1.4), xlim = c(0,1), ylab = NA, yaxt = "na", xlab = "Depletion")
mtext(side = 2, "Fishing mortality (F)", line = 1.5)
mtext(side = 1, "Relative depletion", line = 2)
# abline(h = Tier3Ftargets[length(Tier3Ftargets)], lwd = 3, col = SamplingCol[4])
# - Tier 3
lines(x = Pvals, y = Tier3Ftargets, col = MPcols[1], lwd = 3, lty = 2)
lines(x = Pvals, y = Tier3FtargetsATF, col = MPcols[1], lwd = 3, lty = 1)
text(x=Pvals[1000], y = Tier3Ftargets[1000]+0.07, expression('1) F'["40%"]), offset = -2,pos = 4, col = MPcols[1])
#lines(x = Pvals, y = Tier3Flimits, col = MPcols[1], lwd = 3, lty = 2)
# - Cat 1
# -- 40-10
lines(x = Pvals, y = PFMCCat1Ftargets, col = MPcols[3], lwd = 3, lty = 1)
text(x=Pvals[900], y = PFMCCat1Ftargets[1000]+0.07, expression(paste("2a) ", Phi,'(0.45, F'["45%"],", 0.5)")), offset = -6,pos = 4, col = MPcols[3])
#lines(x = Pvals, y = PFMCCat1Flimits, col = 1, lwd = 3, lty = 2)
# -- 25-5
lines(x = Pvals, y = PFMCCat1FtargetsFlatfish, col = MPcols[4], lwd = 3, lty = 1)
text(x=Pvals[900], y = PFMCCat1FtargetsFlatfish[1000]+0.07, expression(paste("2b) ", Phi,'(0.45, F'["30%"],", 0.5)")), offset = -6,pos = 4, col = MPcols[4])
#lines(x = Pvals, y = PFMCCat1Flimits, col = MPcols[3], lwd = 3, lty = 2)
# - Tier 1
lines(x = Pvals, y = SESSFCat1Ftargets, col = MPcols[5], lwd = 3, lty = 1)
text(x=0.4, y = SESSFCat1Ftargets[1000]+0.07, expression('3) F'["48%"]), offset = 0,pos = 4, col = MPcols[5])
# - F40
abline(h = 0.75 * F40, col = MPcols[7], lwd = 3)
text(x=Pvals[1000], y = 0.75 * F40-0.07, expression('4) 0.75 * F'["40%"]), offset = -6 ,pos = 4, col = MPcols[7])
legend("bottomright", c("NPFMC", "PFMC 40-10", "PFMC 25-5", "SESSF", "NEFMC (Fspr)"), col = c(MPcols[1], MPcols[3], MPcols[4], MPcols[5], MPcols[7]), lty = 1, lwd = 4, bty = "n")
# Load old model
load("inst/extdata/CEATTLE_classic_ss.Rdata")
# Load data and set up inits
library(Rceattle)
data(BS2017SS) # ?BS2017SS for more information on the data
BS2017SS$srr_prior_mean <- 9
BS2017SS$initMode  <- 1
inits <- build_params(BS2017SS)
# - Update population dynamics from previous parameters
inits$init_dev <- CEATTLE_classic_SS$estimated_params$init_dev
inits$rec_dev[,1:39] <- CEATTLE_classic_SS$estimated_params$rec_dev
inits$rec_pars[,1] <- CEATTLE_classic_SS$estimated_params$ln_mn_rec
inits$ln_F[1:3, 1:39] <- CEATTLE_classic_SS$estimated_params$F_dev[,1:39] + CEATTLE_classic_SS$estimated_params$ln_mean_F
inits$sel_coff[1:3,1,] <- CEATTLE_classic_SS$estimated_params$fsh_sel_coff
ss_run_old_params <- Rceattle::fit_mod(data_list = BS2017SS,
inits = inits, # Initial parameters = 0
file = NULL, # Don't save
estimateMode = 3, # Estimate
random_rec = FALSE, # No random recruitment
msmMode = 0, # Single species mode
phase = TRUE,
verbose = 1)
# - Estimate instead
ss_run_new <- Rceattle::fit_mod(data_list = BS2017SS,
inits = NULL, # Initial parameters = 0
file = NULL, # Don't save
estimateMode = 0, # Estimate
random_rec = FALSE, # No random recruitment
msmMode = 0, # Single species mode
phase = TRUE,
verbose = 1)
# Previous time series
ss_run_old <- ss_run_new
ss_run_old$quantities$R[,1:39] <- CEATTLE_classic_SS$quantities$R[,1:39]
ss_run_old$quantities$biomass[,1:39] <- CEATTLE_classic_SS$quantities$biomass
ss_run_old$quantities$ssb[,1:39] <- CEATTLE_classic_SS$quantities$biomassSSB
# Plot
plot_recruitment(list(ss_run_old_params, ss_run_old), model_names = 1:2)
plot_biomass(list(ss_run_old_params, ss_run_old), model_names = 1:2)
plot_ssb(list(ss_run_old_params, ss_run_old), model_names = 1:2)
plot_index(list(ss_run_old_params, ss_run_old), model_names = 1:2)
plot_recruitment(list(ss_run_new, ss_run_old_params, ss_run_old), model_names = 1:3)
plot_biomass(list(ss_run_new, ss_run_old_params, ss_run_old), model_names = 1:3)
plot_ssb(list(ss_run_new, ss_run_old_params, ss_run_old), model_names = 1:3)
})
ms_run_old_params$quantities$sel[1:3,1,,1] - CEATTLE_classic_MS$quantities$fsh_sel
ms_run_old_params$quantities$sel[4:6,1,,1] - CEATTLE_classic_MS$quantities$srv_sel
# Load old model
library(Rceattle)
load("inst/extdata/CEATTLE_classic_MS.Rdata")
# Load data and set up inits
data("BS2017SS")
data("BS2017MS")
BS2017MS$srr_prior_mean <- 9
BS2017MS$initMode  <- 1
inits <- build_params(BS2017MS)
# - Update population dynamics from old parameters
inits$init_dev[,1:20] <- CEATTLE_classic_MS$estimated_params$init_dev
inits$rec_dev[,1:39] <- CEATTLE_classic_MS$estimated_params$rec_dev
inits$rec_pars[,1] <- CEATTLE_classic_MS$estimated_params$ln_mn_rec
inits$ln_F[1:3, 1:39] <- CEATTLE_classic_MS$estimated_params$F_dev[,1:39] + CEATTLE_classic_MS$estimated_params$ln_mean_F
# -- Sel
inits$sel_coff[1:3,1,] <- CEATTLE_classic_MS$estimated_params$fsh_sel_coff
inits$sel_inf[1,4:6,1] <- CEATTLE_classic_MS$estimated_params$srv_sel_inf[1,]
inits$ln_sel_slp[1,4:6,1] <- log(CEATTLE_classic_MS$estimated_params$srv_sel_slp[1,])
inits$index_ln_q[4:6] <- CEATTLE_classic_MS$estimated_params$log_srv_q
inits$index_ln_q[7] <- CEATTLE_classic_MS$estimated_params$log_eit_q # Need to scale by max sel because selectivity is rescaled to max = 1 in the CPP
# - Update diet data
BS2017MS_new <- BS2017MS
BS2017MS_new$diet_data <- as.data.frame(BS2017MS_new$diet_data)
for(i in 1:nrow(BS2017MS_new$diet_data)){
BS2017MS_new$diet_data$Stomach_proportion_by_weight[i] <- CEATTLE_classic_MS$data_list$UobsAge[
BS2017MS_new$diet_data$Pred[i], BS2017MS_new$diet_data$Prey[i],
BS2017MS_new$diet_data$Pred_age[i], BS2017MS_new$diet_data$Prey_age[i]
]
}
# - Update foraging data
BS2017MS_new$Pyrs <- as.data.frame(BS2017MS_new$Pyrs)
BS2017MS_new$Pyrs[,4:ncol(BS2017MS_new$Pyrs)] <- rbind(CEATTLE_classic_MS$data_list$Pyrs[-40,,1],
CEATTLE_classic_MS$data_list$Pyrs[-40,,2],
CEATTLE_classic_MS$data_list$Pyrs[-40,,3])
ms_run_old_params <- Rceattle::fit_mod(
data_list = BS2017MS_new,
inits = inits, # Initial parameters from old model
M1Fun = build_M1(M1_model = 0,
updateM1 = TRUE,
M1_use_prior = FALSE,
M2_use_prior = FALSE),
file = NULL, # Don't save
estimateMode = 3, # Fix at parameter values
niter = 10, # iterations around population and predation dynamics
random_rec = FALSE, # No random recruitment
msmMode = 1, # MSVPA based
suitMode = 0, # empirical suitability
verbose = 1)
#  Fit models
ss_run_new <- Rceattle::fit_mod(
data_list = BS2017SS,
inits = NULL, # Initial parameters = 0
file = NULL, # Don't save
estimateMode = 0, # Estimate
random_rec = FALSE, # No random recruitment
msmMode = 0, # Single species mode
phase = TRUE,
verbose = 1)
# - Multi-species
ms_run_new <- Rceattle::fit_mod(
data_list = BS2017MS_new,
inits = ss_run_new$estimated_params, # Initial parameters from single species ests
M1Fun = build_M1(M1_model = 0,
updateM1 = TRUE,
M1_use_prior = FALSE,
M2_use_prior = FALSE),
file = NULL, # Don't save
estimateMode = 0, # Estimate
niter = 10, # 3 iterations around population and predation dynamics
random_rec = FALSE, # No random recruitment
msmMode = 1, # MSVPA based
suitMode = 0, # empirical suitability
verbose = 1)
# Previous time series
ms_run_old <- ms_run_new
ms_run_old$quantities$R[,1:39] <- CEATTLE_classic_MS$quantities$R[,1:39]
ms_run_old$quantities$biomass[,1:39] <- CEATTLE_classic_MS$quantities$biomass
ms_run_old$quantities$ssb[,1:39] <- CEATTLE_classic_MS$quantities$biomassSSB
ms_run_old$quantities$index_hat <- c(CEATTLE_classic_MS$quantities$srv_bio_hat[1,1:36],
CEATTLE_classic_MS$quantities$srv_bio_hat[2,1:36],
CEATTLE_classic_MS$quantities$srv_bio_hat[3,1:36],
CEATTLE_classic_MS$quantities$eit_hat[1:20])
fsh_bio <- ms_run_old$data_list$catch_data
fsh_bio$Pred <- ms_run_old$quantities$catch_hat
fsh_bio$CatchOld <- NA
fsh_bio$CatchOld[which(fsh_bio$Year < 2018)] <- c(CEATTLE_classic_MS$quantities$tc_biom_hat[1,],
CEATTLE_classic_MS$quantities$tc_biom_hat[2,],
CEATTLE_classic_MS$quantities$tc_biom_hat[3,])
ms_run_old$quantities$catch_hat <- fsh_bio$CatchOld
# Sel
round(ms_run_old_params$quantities$sel[,1,,1], 5)
round(CEATTLE_classic_MS$quantities$fsh_sel, 5)
round(CEATTLE_classic_MS$quantities$srv_sel, 5)
ms_run_old_params$quantities$sel[1:3,1,,1] - CEATTLE_classic_MS$quantities$fsh_sel
ms_run_old_params$quantities$sel[4:6,1,,1] - CEATTLE_classic_MS$quantities$srv_sel
# Plot
plot_recruitment(list(ms_run_old_params, ms_run_old))
plot_biomass(list(ms_run_old_params, ms_run_old))
plot_ssb(list(ms_run_old_params, ms_run_old))
plot_index(list(ms_run_old_params, ms_run_old), model_names = c(1,2))
plot_catch(list(ms_run_old_params, ms_run_old))
# Load old model
load("inst/extdata/CEATTLE_classic_ss.Rdata")
# Load data and set up inits
library(Rceattle)
data(BS2017SS) # ?BS2017SS for more information on the data
BS2017SS$srr_prior_mean <- 9
BS2017SS$initMode  <- 1
inits <- build_params(BS2017SS)
# - Update population dynamics from previous parameters
inits$init_dev <- CEATTLE_classic_SS$estimated_params$init_dev
inits$rec_dev[,1:39] <- CEATTLE_classic_SS$estimated_params$rec_dev
inits$rec_pars[,1] <- CEATTLE_classic_SS$estimated_params$ln_mn_rec
inits$ln_F[1:3, 1:39] <- CEATTLE_classic_SS$estimated_params$F_dev[,1:39] + CEATTLE_classic_SS$estimated_params$ln_mean_F
inits$sel_coff[1:3,1,] <- CEATTLE_classic_SS$estimated_params$fsh_sel_coff
ss_run_old_params <- Rceattle::fit_mod(data_list = BS2017SS,
inits = inits, # Initial parameters = 0
file = NULL, # Don't save
estimateMode = 3, # Estimate
random_rec = FALSE, # No random recruitment
msmMode = 0, # Single species mode
phase = TRUE,
verbose = 1)
# - Estimate instead
ss_run_new <- Rceattle::fit_mod(data_list = BS2017SS,
inits = NULL, # Initial parameters = 0
file = NULL, # Don't save
estimateMode = 0, # Estimate
random_rec = FALSE, # No random recruitment
msmMode = 0, # Single species mode
phase = TRUE,
verbose = 1)
# Previous time series
ss_run_old <- ss_run_new
ss_run_old$quantities$R[,1:39] <- CEATTLE_classic_SS$quantities$R[,1:39]
ss_run_old$quantities$biomass[,1:39] <- CEATTLE_classic_SS$quantities$biomass
ss_run_old$quantities$ssb[,1:39] <- CEATTLE_classic_SS$quantities$biomassSSB
# Plot
plot_recruitment(list(ss_run_old_params, ss_run_old), model_names = 1:2)
plot_biomass(list(ss_run_old_params, ss_run_old), model_names = 1:2)
plot_ssb(list(ss_run_old_params, ss_run_old), model_names = 1:2)
plot_index(list(ss_run_old_params, ss_run_old), model_names = 1:2)
plot_recruitment(list(ss_run_new, ss_run_old_params, ss_run_old), model_names = 1:3)
plot_biomass(list(ss_run_new, ss_run_old_params, ss_run_old), model_names = 1:3)
plot_ssb(list(ss_run_new, ss_run_old_params, ss_run_old), model_names = 1:3)
plot_index(list(ms_run_old_params, ms_run_old), model_names = c(1,2))
# Grant Adams, Kirstin Holsman, Andre Punt - April 2019
# Code to run Bering Sea CEATTLE model in TMB
# Citation:
# Holsman, K. K., Ianelli, J., Aydin, K., Punt, A. E., and Moffitt, E. A. 2015. A comparison of fisheries biological reference points estimated from temperature-specific multi-species and single-species climate-enhanced stock assessment models. Deep-Sea Research Part II: Topical Studies in Oceanography, 134: 360–378.
library(Rceattle)
################################################
# Data
################################################
# Example
# To run the 2017 single species assessment for the Bering Sea, a data file must first be loaded:
data("BS2017SS") # Single-species data. ?BS2017SS for more information on the data
data("BS2017MS") # Multi-species data. Note: the only difference is the residual mortality (M1_base) is lower
# Write data to excel
Rceattle::write_data(data_list = BS2017SS, file = "BS2017SS.xlsx")
# Change the data how you want in excel
# Read the data back in
mydata <- Rceattle::read_data( file = "BS2017SS.xlsx")
################################################
# Estimation
################################################
# - Single-species
# Then the model can be fit by setting `msmMode = 0` using the `Rceattle` function:
ss_run <- Rceattle::fit_mod(data_list = mydata,
inits = NULL, # Initial parameters = 0
file = NULL, # Don't save
estimateMode = 0, # Estimate
random_rec = FALSE, # No random recruitment
msmMode = 0, # Single species mode
phase = TRUE,
verbose = 1)
check <- build_params(mydata)
check$log_gam_a
check$log_phi
View(BS2017MS)
# Grant Adams, Kirstin Holsman, Andre Punt - April 2019
# Code to run Bering Sea CEATTLE model in TMB
# Citation:
# Holsman, K. K., Ianelli, J., Aydin, K., Punt, A. E., and Moffitt, E. A. 2015. A comparison of fisheries biological reference points estimated from temperature-specific multi-species and single-species climate-enhanced stock assessment models. Deep-Sea Research Part II: Topical Studies in Oceanography, 134: 360–378.
library(Rceattle)
################################################
# Data
################################################
# Example
# To run the 2017 single species assessment for the Bering Sea, a data file must first be loaded:
data("BS2017SS") # Single-species data. ?BS2017SS for more information on the data
data("BS2017MS") # Multi-species data. Note: the only difference is the residual mortality (M1_base) is lower
# Write data to excel
Rceattle::write_data(data_list = BS2017SS, file = "BS2017SS.xlsx")
# Change the data how you want in excel
# Read the data back in
mydata <- Rceattle::read_data( file = "BS2017SS.xlsx")
################################################
# Estimation
################################################
# - Single-species
# Then the model can be fit by setting `msmMode = 0` using the `Rceattle` function:
ss_run <- Rceattle::fit_mod(data_list = mydata,
inits = NULL, # Initial parameters = 0
file = NULL, # Don't save
estimateMode = 0, # Estimate
random_rec = FALSE, # No random recruitment
msmMode = 0, # Single species mode
phase = TRUE,
verbose = 1)
data_list = mydata
data_list$suitMode = c(0,0,0)
# Switches ---
if(any(data_list$suitMode %in% c(1, 3))){
stop("Length based suitability not yet implemented")
}
data_list$suitMode
data_list$suitMode %in% c(1, 3)
# Grant Adams, Kirstin Holsman, Andre Punt - April 2019
# Code to run Bering Sea CEATTLE model in TMB
# Citation:
# Holsman, K. K., Ianelli, J., Aydin, K., Punt, A. E., and Moffitt, E. A. 2015. A comparison of fisheries biological reference points estimated from temperature-specific multi-species and single-species climate-enhanced stock assessment models. Deep-Sea Research Part II: Topical Studies in Oceanography, 134: 360–378.
library(Rceattle)
################################################
# Data
################################################
# Example
# To run the 2017 single species assessment for the Bering Sea, a data file must first be loaded:
data("BS2017SS") # Single-species data. ?BS2017SS for more information on the data
data("BS2017MS") # Multi-species data. Note: the only difference is the residual mortality (M1_base) is lower
# Write data to excel
Rceattle::write_data(data_list = BS2017SS, file = "BS2017SS.xlsx")
# Change the data how you want in excel
# Read the data back in
mydata <- Rceattle::read_data( file = "BS2017SS.xlsx")
################################################
# Estimation
################################################
# - Single-species
# Then the model can be fit by setting `msmMode = 0` using the `Rceattle` function:
ss_run <- Rceattle::fit_mod(data_list = mydata,
inits = NULL, # Initial parameters = 0
file = NULL, # Don't save
estimateMode = 0, # Estimate
random_rec = FALSE, # No random recruitment
msmMode = 0, # Single species mode
phase = TRUE,
verbose = 1)
# Single-species, but estimate M
ss_run_M <- Rceattle::fit_mod(data_list = mydata,
inits = ss_run$estimated_params, # Initial parameters = 0
file = NULL, # Don't save
estimateMode = 0, # Estimate
M1Fun = build_M1(M1_model = 1,
M1_use_prior = FALSE,
M2_use_prior = FALSE),
random_rec = FALSE, # No random recruitment
msmMode = 0, # Single species mode
phase = TRUE,
verbose = 1)
plot_biomass(ss_run_M, add_ci = TRUE)
# - Multi-species
# For the a multispecies model we from the single species parameters.
ms_run <- Rceattle::fit_mod(data_list = BS2017MS,
inits = ss_run$estimated_params, # Initial parameters from single species ests
M1Fun = build_M1(M1_model = 1,
updateM1 = TRUE,
M1_use_prior = FALSE,
M2_use_prior = FALSE),
file = NULL, # Don't save
estimateMode = 0, # Estimate
niter = 3, # 3 iterations around population and predation dynamics
random_rec = FALSE, # No random recruitment
msmMode = 1, # MSVPA based
suitMode = 0, # empirical suitability
verbose = 1)
plot_biomass(ms_run, add_ci = TRUE)
################################################
# Plotting
################################################
# We can plot all runs
mod_list <- list(ss_run, ss_run_M, ms_run)
mod_names <- c("Single-species", "Single-species estimate M", "Multi-species")
# Plot biomass trajectory
plot_biomass(Rceattle = mod_list, model_names = mod_names)
plot_depletionSSB(Rceattle = mod_list, model_names = mod_names)
# Load old model
library(Rceattle)
load("inst/extdata/CEATTLE_classic_MS.Rdata")
# Load data and set up inits
data("BS2017SS")
data("BS2017MS")
BS2017MS$srr_prior_mean <- 9
BS2017MS$initMode  <- 1
# BS2017MS$M1_base[,-c(1:2)] <- CEATTLE_classic_MS$quantities$M1 # + 0.0001 is in the old one
inits <- build_params(BS2017MS)
# - Update population dynamics from old parameters
inits$init_dev[,1:20] <- CEATTLE_classic_MS$estimated_params$init_dev
inits$rec_dev[,1:39] <- CEATTLE_classic_MS$estimated_params$rec_dev
inits$rec_pars[,1] <- CEATTLE_classic_MS$estimated_params$ln_mn_rec
inits$ln_F[1:3, 1:39] <- CEATTLE_classic_MS$estimated_params$F_dev[,1:39] + CEATTLE_classic_MS$estimated_params$ln_mean_F
# -- Sel
inits$sel_coff[1:3,1,] <- CEATTLE_classic_MS$estimated_params$fsh_sel_coff
inits$sel_inf[1,4:6,1] <- CEATTLE_classic_MS$estimated_params$srv_sel_inf[1,]
inits$ln_sel_slp[1,4:6,1] <- log(CEATTLE_classic_MS$estimated_params$srv_sel_slp[1,])
inits$index_ln_q[4:6] <- CEATTLE_classic_MS$estimated_params$log_srv_q
inits$index_ln_q[7] <- CEATTLE_classic_MS$estimated_params$log_eit_q # Need to scale by max sel because selectivity is rescaled to max = 1 in the CPP
# - Update diet data
BS2017MS_new <- BS2017MS
BS2017MS_new$diet_data <- as.data.frame(BS2017MS_new$diet_data)
for(i in 1:nrow(BS2017MS_new$diet_data)){
BS2017MS_new$diet_data$Stomach_proportion_by_weight[i] <- CEATTLE_classic_MS$data_list$UobsAge[
BS2017MS_new$diet_data$Pred[i], BS2017MS_new$diet_data$Prey[i],
BS2017MS_new$diet_data$Pred_age[i], BS2017MS_new$diet_data$Prey_age[i]
]
}
# - Update foraging data
BS2017MS_new$Pyrs <- as.data.frame(BS2017MS_new$Pyrs)
BS2017MS_new$Pyrs[,4:ncol(BS2017MS_new$Pyrs)] <- rbind(CEATTLE_classic_MS$data_list$Pyrs[-40,,1],
CEATTLE_classic_MS$data_list$Pyrs[-40,,2],
CEATTLE_classic_MS$data_list$Pyrs[-40,,3])
ms_run_old_params <- Rceattle::fit_mod(
data_list = BS2017MS_new,
inits = inits, # Initial parameters from old model
M1Fun = build_M1(M1_model = 0,
updateM1 = TRUE,
M1_use_prior = FALSE,
M2_use_prior = FALSE),
file = NULL, # Don't save
estimateMode = 3, # Fix at parameter values
niter = 10, # iterations around population and predation dynamics
random_rec = FALSE, # No random recruitment
msmMode = 1, # MSVPA based
suitMode = 0, # empirical suitability
verbose = 1)
#  Fit models
ss_run_new <- Rceattle::fit_mod(
data_list = BS2017SS,
inits = NULL, # Initial parameters = 0
file = NULL, # Don't save
estimateMode = 0, # Estimate
random_rec = FALSE, # No random recruitment
msmMode = 0, # Single species mode
phase = TRUE,
verbose = 1)
# - Multi-species
ms_run_new <- Rceattle::fit_mod(
data_list = BS2017MS_new,
inits = ss_run_new$estimated_params, # Initial parameters from single species ests
M1Fun = build_M1(M1_model = 0,
updateM1 = TRUE,
M1_use_prior = FALSE,
M2_use_prior = FALSE),
file = NULL, # Don't save
estimateMode = 0, # Estimate
niter = 10, # 3 iterations around population and predation dynamics
random_rec = FALSE, # No random recruitment
msmMode = 1, # MSVPA based
suitMode = 0, # empirical suitability
verbose = 1)
# Previous time series
ms_run_old <- ms_run_new
ms_run_old$quantities$R[,1:39] <- CEATTLE_classic_MS$quantities$R[,1:39]
ms_run_old$quantities$biomass[,1:39] <- CEATTLE_classic_MS$quantities$biomass
ms_run_old$quantities$ssb[,1:39] <- CEATTLE_classic_MS$quantities$biomassSSB
ms_run_old$quantities$index_hat <- c(CEATTLE_classic_MS$quantities$srv_bio_hat[1,1:36],
CEATTLE_classic_MS$quantities$srv_bio_hat[2,1:36],
CEATTLE_classic_MS$quantities$srv_bio_hat[3,1:36],
CEATTLE_classic_MS$quantities$eit_hat[1:20])
fsh_bio <- ms_run_old$data_list$catch_data
fsh_bio$Pred <- ms_run_old$quantities$catch_hat
fsh_bio$CatchOld <- NA
fsh_bio$CatchOld[which(fsh_bio$Year < 2018)] <- c(CEATTLE_classic_MS$quantities$tc_biom_hat[1,],
CEATTLE_classic_MS$quantities$tc_biom_hat[2,],
CEATTLE_classic_MS$quantities$tc_biom_hat[3,])
ms_run_old$quantities$catch_hat <- fsh_bio$CatchOld
# Sel
round(ms_run_old_params$quantities$sel[,1,,1], 5)
round(CEATTLE_classic_MS$quantities$fsh_sel, 5)
round(CEATTLE_classic_MS$quantities$srv_sel, 5)
ms_run_old_params$quantities$sel[1:3,1,,1] - CEATTLE_classic_MS$quantities$fsh_sel
ms_run_old_params$quantities$sel[4:6,1,,1] - CEATTLE_classic_MS$quantities$srv_sel
# Plot
plot_recruitment(list(ms_run_old_params, ms_run_old))
plot_biomass(list(ms_run_old_params, ms_run_old))
plot_ssb(list(ms_run_old_params, ms_run_old))
plot_index(list(ms_run_old_params, ms_run_old), model_names = c(1,2))
plot_catch(list(ms_run_old_params, ms_run_old))
# ms_run_old$quantities$M1[,1,]
# CEATTLE_classic_MS$quantities$M1
# CEATTLE_classic_MS$quantities$ration2Age[1,1:10,1:39]
# ms_run_old_params$quantities$ration[1,1,1:10,1:39]
#
#
# CEATTLE_classic_MS$quantities$ConsumAge[1,1:10,1:39] - ms_run_old_params$quantities$ConsumAge[1,1,1:10,1:39]
#
# CEATTLE_classic_MS$quantities$Pyrs[1:39,1:12,1] - t(ms_run_old_params$quantities$Pyrs[1,1,1:12,1:39])
#
# head(t(CEATTLE_classic_MS$quantities$ConsumAge[1,1:12,1:39]))
# head(t(ms_run_old_params$quantities$ConsumAge[1,1,1:10,1:39]))
#
#
# ms_run_old_params$data_list$pop_wt_index
#
# # Weight
# CEATTLE_classic_MS$data_list$wt[,1:12,1] - ms_run_old_params$data_list$wt %>%
#   filter(Wt_index == 1) %>%
#   dplyr::select(paste0("Age", 1:12)) %>%
#   as.matrix()
#
#
# CEATTLE_classic_MS$quantities$fT[,1:39] == ms_run_old_params$quantities$fT[,1:39]
#
# CEATTLE_classic_MS$data_list$CA == ms_run_old_params$data_list$CA
#
# CEATTLE_classic_MS$data_list$CB == ms_run_old_params$data_list$CB
plot_recruitment(list(ms_run_new, ms_run_old_params, ms_run_old))
plot_biomass(list(ms_run_new, ms_run_old_params, ms_run_old))
plot_ssb(list(ms_run_new, ms_run_old_params, ms_run_old))
devtools::document()
devtools::document()
phi = c(0, 0.5)
phi/(1+sum(phi))
