verbose = 1)
library(Rceattle)
library(Rceattle)
################################################
# Data
################################################
# Example
# To run the 2017 single species assessment for the Bering Sea, a data file must first be loaded:
data(BS2017SS) # ?BS2017SS for more information on the data
BS2017SS$projyr <- 2030
# Write data to excel
Rceattle::write_data(data_list = BS2017SS, file = "BS2017SS.xlsx")
# Change the data how you want in excel
# Read the data back in
mydata <- Rceattle::read_data( file = "BS2017SS.xlsx")
mydata$est_M1 <- c(0,0,0)
################################################
# Estimation
################################################
# Then the model can be fit by setting `msmMode = 0` using the `Rceattle` function:
mydata$projyr <- 2100
mydata$fleet_control$proj_F_prop <- c(rep(1,3), rep(0,4))
ss_run <- Rceattle::fit_mod(data_list = mydata,
inits = NULL, # Initial parameters = 0
file = NULL, # Don't save
debug = FALSE, # Estimate
random_rec = FALSE, # No random recruitment
msmMode = 0, # Single species mode
phase = "default",
verbose = 1)
ss_run <- Rceattle::fit_mod(data_list = mydata,
inits = NULL, # Initial parameters = 0
file = NULL, # Don't save
debug = 1, # Estimate
random_rec = FALSE, # No random recruitment
msmMode = 0, # Single species mode
phase = FALSE,
verbose = 1)
names(ss_run$obj$par)
unique(names(ss_run$obj$par))
unique(names(ss_run$obj$parlist()))
unique(names(ss_run$obj$parList()))
names(ss_run$obj$env$parList())
library(Rceattle)
library(Rceattle)
################################################
# Data
################################################
# Example
# To run the 2017 single species assessment for the Bering Sea, a data file must first be loaded:
data(BS2017SS) # ?BS2017SS for more information on the data
BS2017SS$projyr <- 2030
# Write data to excel
Rceattle::write_data(data_list = BS2017SS, file = "BS2017SS.xlsx")
# Change the data how you want in excel
# Read the data back in
mydata <- Rceattle::read_data( file = "BS2017SS.xlsx")
mydata$est_M1 <- c(0,0,0)
################################################
# Estimation
################################################
# Then the model can be fit by setting `msmMode = 0` using the `Rceattle` function:
mydata$projyr <- 2100
mydata$fleet_control$proj_F_prop <- c(rep(1,3), rep(0,4))
ss_run <- Rceattle::fit_mod(data_list = mydata,
inits = NULL, # Initial parameters = 0
file = NULL, # Don't save
debug = 0, # Estimate
random_rec = FALSE, # No random recruitment
msmMode = 0, # Single species mode
phase = "default",
verbose = 1)
ss_run <- Rceattle::fit_mod(data_list = mydata,
inits = NULL, # Initial parameters = 0
file = NULL, # Don't save
debug = 1, # Estimate
random_rec = FALSE, # No random recruitment
msmMode = 0, # Single species mode
phase = "default",
verbose = 1)
ss_run$quantities$jnll_comp
ss_run$quantities$jnll_comp
ss_run$quantities$sel[1:3,1,,1]
ss_run$quantities$sel[1:3,1,,2]
ss_run$quantities$sel[1:3,2,,2]
plot_biomass(ss_run)
plot_b_eaten(ss_run)
ss_run$quantities$M2
sum(ss_run$quantities$M2)
ss_run$quantities$M2
ss_run$quantities$jnll_comp
plot_catch(ss_run)
ss_run$estimated_params$F_dev
ss_run$estimated_params$ln_mean_F
exp(ss_run$estimated_params$ln_mean_F)
ss_run$quantities$F[1:3,1,,2]
ss_run$quantities$F[1:3,1,,]
ss_run$quantities$F[1:3,1,,1]
mydata$nages
ss_run$quantities$M[1:3,1,,1]
ss_run$quantities$M2[1:3,1,,1]
ss_run$quantities$M[1:3,1,,1]
ss_run$quantities$M[1:3,1,,]
sum(ss_run$quantities$M[1:3,1,,])
ss_run$quantities$Zed[1:3,1,,]
sum(ss_run$quantities$Zed[1:3,1,,])
sum(ss_run$quantities$S[1:3,1,,])
sum(ss_run$quantities$Nbyaga[1:3,1,,])
sum(ss_run$quantities$Nbyage[1:3,1,,])
dim(ss_run$quantities$Nbyage)
ss_run$quantities$Nbyage
ss_run$quantities$Nbyage[1,]
ss_run$quantities$Nbyage[1,,]
ss_run$quantities$Nbyage[1,,,]
dim(ss_run$quantities$R)
ss_run$quantities$R
ss_run$quantities$comp_n
ss_run$quantities$comp_hat
which(is.null(rowSums(ss_run$quantities$comp_hat)))
which(is.na(rowSums(ss_run$quantities$comp_hat)))
check <- which(is.na(rowSums(ss_run$quantities$comp_hat)))
check
mydata$comp_data[check,]
mydata$comp_data$Species[check]
ss_run$quantities$NByage
dim(ss_run$quantities$NByage)
sum(ss_run$quantities$NByage)
ss_run$quantities$Nbyage[1,,]
ss_run$quantities$Nbyage[1,,,]
ss_run$quantities$NByage[1,,,]
ss_run$quantities$fsh_bio_hat
ss_run$quantities$fsh_bio_obs
ss_run$data_list$fsh_bio_obs
ss_run$data_list$fsh_biom
sum(ss_run$quantities$F)
sum(ss_run$quantities$Zed)
sum(1-exp(-ss_run$quantities$Zed)))
sum(1-exp(-ss_run$quantities$Zed))
sum(ss_run$quantities$NByage)
sum(ss_run$quantities$flt_wt_index)
ss_run$quantities$flt_wt_index
ss_run$quantities$F[1:3,,,]/ss_run$quantities$Zed * (1-exp(-ss_run$quantities$Zed))*ss_run$quantities$NByage
sum(ss_run$quantities$F[1:3,,,]/ss_run$quantities$Zed * (1-exp(-ss_run$quantities$Zed))*ss_run$quantities$NByage)
sum(ss_run$quantities$F[1:3,,,]/ss_run$quantities$Zed * (1-exp(-ss_run$quantities$Zed)))
sum(ss_run$quantities$F[1:3,,,] * (1-exp(-ss_run$quantities$Zed)))
ss_run$quantities$Zed[1,1,1:12,]
sum(ss_run$quantities$Zed[1,1,1:12,])
sum(ss_run$quantities$Zed[1,1,1:12,1:42])
sum(ss_run$quantities$Zed[2,1,1:12,1:42])
sum(ss_run$quantities$Zed[3,,1:12,1:42])
sum(which(ss_run$quantities$Zed[3,,1:12,1:42] == 0))
sum(which(ss_run$quantities$Zed[1,1,1:12,1:42] == 0))
sum(which(ss_run$quantities$Zed[2,1,1:12,1:42] == 0))
sum(1/ss_run$quantities$Zed[3,,1:12,1:42])
sum(1/ss_run$quantities$Zed[3,,1:21,1:42])
sum(1/ss_run$quantities$Zed[3,,1:21,1:41])
sum(1/ss_run$quantities$Zed[3,,1:21,1:39])
sum(1/ss_run$quantities$Zed[3,,1:21,1:30])
sum(1/ss_run$quantities$Zed[3,1:2,1:21,1:30])
sum(1/ss_run$quantities$Zed[2,1,1:12,1:30])
sum(1/ss_run$quantities$Zed[1,1,1:12,1:30])
sum(1/ss_run$quantities$Zed[1,1,1:12,1:42])
sum(1/ss_run$quantities$Zed[2,1,1:12,1:42])
sum(ss_run$quantities$F[1,1,1:12,1:42]/ss_run$quantities$Zed[1,1,1:12,1:42] * (1-exp(-ss_run$quantities$Zed[1,1,1:12,1:42]))*ss_run$quantities$NByage[1,1,1:12,1:42])
sum(ss_run$quantities$F[2,1,1:12,1:42]/ss_run$quantities$Zed[2,1,1:12,1:42] * (1-exp(-ss_run$quantities$Zed[2,1,1:12,1:42]))*ss_run$quantities$NByage[2,1,1:12,1:42])
ss_run$quantities$Zed[3,1,,1]
ss_run$quantities$Zed[3,1,,2]
ss_run$quantities$Zed[3,1,,]
ss_run$quantities$Zed[3,1,,1:42]
ss_run$quantities$Zed[3,2,,1:42]
ss_run$quantities$M1
ss_run$quantities$M1[3,,]
ss_run$quantities$F[3,2,,1:42]
ss_run$data_list$nsex
library(Rceattle)
# To run the 2017 single species assessment for the Bering Sea, a data file must first be loaded:
data(BS2017SS) # ?BS2017SS for more information on the data
BS2017SS$projyr <- 2030
# Write data to excel
Rceattle::write_data(data_list = BS2017SS, file = "BS2017SS.xlsx")
# Change the data how you want in excel
# Read the data back in
mydata <- Rceattle::read_data( file = "BS2017SS.xlsx")
mydata$est_M1 <- c(0,0,0)
################################################
# Estimation
################################################
# Then the model can be fit by setting `msmMode = 0` using the `Rceattle` function:
mydata$projyr <- 2100
mydata$fleet_control$proj_F_prop <- c(rep(1,3), rep(0,4))
ss_run <- Rceattle::fit_mod(data_list = mydata,
inits = NULL, # Initial parameters = 0
file = NULL, # Don't save
debug = 1, # Estimate
random_rec = FALSE, # No random recruitment
msmMode = 0, # Single species mode
phase = "default",
verbose = 1)
ss_run$quantities$jnll_comp
library(Rceattle)
library(Rceattle)
################################################
# Data
################################################
# Example
# To run the 2017 single species assessment for the Bering Sea, a data file must first be loaded:
data(BS2017SS) # ?BS2017SS for more information on the data
BS2017SS$projyr <- 2030
# Write data to excel
Rceattle::write_data(data_list = BS2017SS, file = "BS2017SS.xlsx")
# Change the data how you want in excel
# Read the data back in
mydata <- Rceattle::read_data( file = "BS2017SS.xlsx")
mydata$est_M1 <- c(0,0,0)
################################################
# Estimation
################################################
# Then the model can be fit by setting `msmMode = 0` using the `Rceattle` function:
mydata$projyr <- 2100
mydata$fleet_control$proj_F_prop <- c(rep(1,3), rep(0,4))
ss_run <- Rceattle::fit_mod(data_list = mydata,
inits = NULL, # Initial parameters = 0
file = NULL, # Don't save
debug = 1, # Estimate
random_rec = FALSE, # No random recruitment
msmMode = 0, # Single species mode
phase = "default",
verbose = 1)
ss_run$quantities$jnll_comp
ss_run$quantities$sel_curve_pen
ss_run$estimated_params$sel_curve_pen
ss_run$estimated_params$sel[1:2,1,1:12,1]
ss_run$quantities$sel[1:2,1,1:12,1]
ss_run$quantities$sel[3,1,1:21,1]
ss_run$quantities$sel[3,1,1:21,]
ss_run$quantities$sel[1:2,1,1:12,]
ss_run$quantities$jnll_comp
library(Rceattle)
library(Rceattle)
################################################
# Data
################################################
# Example
# To run the 2017 single species assessment for the Bering Sea, a data file must first be loaded:
data(BS2017SS) # ?BS2017SS for more information on the data
BS2017SS$projyr <- 2030
# Write data to excel
Rceattle::write_data(data_list = BS2017SS, file = "BS2017SS.xlsx")
# Change the data how you want in excel
# Read the data back in
mydata <- Rceattle::read_data( file = "BS2017SS.xlsx")
mydata$est_M1 <- c(0,0,0)
################################################
# Estimation
################################################
# Then the model can be fit by setting `msmMode = 0` using the `Rceattle` function:
mydata$projyr <- 2100
mydata$fleet_control$proj_F_prop <- c(rep(1,3), rep(0,4))
ss_run <- Rceattle::fit_mod(data_list = mydata,
inits = NULL, # Initial parameters = 0
file = NULL, # Don't save
debug = 1, # Estimate
random_rec = FALSE, # No random recruitment
msmMode = 0, # Single species mode
phase = "default",
verbose = 1)
ss_run$quantities$jnll_comp
devtools::document()
devtools::build_vignettes()
devtools::build_vignettes()
library(Rceattle)
library(Rceattle)
################################################
# Data
################################################
# Example
# To run the 2017 single species assessment for the Bering Sea, a data file must first be loaded:
data(BS2017SS) # ?BS2017SS for more information on the data
BS2017SS$est_M1 <- c(0,0,0)
################################################
# Estimation
################################################
# Then the model can be fit by setting `msmMode = 0` using the `Rceattle` function:
BS2017SS$fleet_control$proj_F_prop <- c(rep(1,3), rep(0,4))
BS2017SS$projyr = 2100
ss_run <- Rceattle::fit_mod(data_list = BS2017SS,
inits = NULL, # Initial parameters = 0
file = "EBS_ss_run", # Don't save
debug = 0, # Estimate
random_rec = FALSE, # No random recruitment
msmMode = 0, # Single species mode
phase = "default",
verbose = 1)
data("EBS_ss_run")
plot_biomass(list(EBS_ss_run, ss_run))
data("BS2017MS")
data("EBS_ms_run")
load("~/GitHub/Rceattle/EBS_ms_run_1iter.RData")
BS2017MS$projyr = 2100
inits <- mod_objects$estimated_params
inits$log_gam_a <- ss_run$estimated_params$log_gam_a
inits$log_gam_b <- ss_run$estimated_params$log_gam_b
inits$log_phi <- ss_run$estimated_params$log_phi
inits$logH_1 <- ss_run$estimated_params$logH_1
inits$logH_1a <- ss_run$estimated_params$logH_1a
inits$logH_1b <- ss_run$estimated_params$logH_1b
inits$logH_2 <- ss_run$estimated_params$logH_2
inits$logH_3 <- ss_run$estimated_params$logH_3
inits$H_4 <- ss_run$estimated_params$H_4
ms_run <- Rceattle::fit_mod(data_list = BS2017MS,
inits = ss_run$estimated_params, # Initial parameters from single species ests
file = NULL, # Don't save
debug = 0, # Estimate
niter = 3, # 10 iterations around population and predation dynamics
random_rec = FALSE, # No random recruitment
msmMode = 1, # MSVPA based
suitMode = 0, # empirical suitability
verbose = 1)
# Check starting nll
for(i in 1:4){
ms_run_check <- Rceattle::fit_mod(data_list = BS2017MS,
inits = ms_run$estimated_params, # Initial parameters from single species ests
file = NULL, # Don't save
debug = 1, # Estimate
niter = 3, # 10 iterations around population and predation dynamics
random_rec = FALSE, # No random recruitment
msmMode = 1, # MSVPA based
suitMode = i, # empirical suitability
verbose = 1)
plot_biomass(ms_run_check)
print(i)
print(ms_run_check$quantities$jnll_comp)
save(i,file = paste0("Suit",i,".RData"))
}
for(i in 3:9){
ms_run_check <- Rceattle::fit_mod(data_list = BS2017MS,
inits = ms_run$estimated_params, # Initial parameters from single species ests
file = NULL, # Don't save
debug = 1, # Estimate
niter = 3, # 10 iterations around population and predation dynamics
random_rec = FALSE, # No random recruitment
msmMode = i, # MSVPA based
suitMode = 1, # empirical suitability
verbose = 1)
plot_biomass(ms_run_check)
print(i)
print(ms_run_check$quantities$jnll_comp)
save(i,file = paste0("MsmMode",i,".RData"))
}
sum(ms_run_check$quantities$ration_hat)
sum(ms_run_check$quantities$ration_hat_ave)
for(i in 1:42){
print(sum((ms_run_check$quantities$ration_hat[1,1,1:12,i] - ms_run_check$quantities$ration_hat_ave[1,1,1:12])^2))
}
ms_run_check$quantities$B_eaten_as_pred[1,1,1:12,1:42]/ms_run_check$quantities$AvgN[1,1,1:12,1:42]
# Try estimating
ms_suit <- list()
for(i in 1:4){
ms_suit[[i]] <- try(Rceattle::fit_mod(data_list = BS2017MS,
inits = ms_run$estimated_params, # Initial parameters from single species ests
file = NULL, # Don't save
debug = 0, # Estimate
niter = 3, # 10 iterations around population and predation dynamics
random_rec = FALSE, # No random recruitment
msmMode = 1, # MSVPA based
suitMode = i, # empirical suitability
verbose = 2))
}
ms_form <- list()
for(i in 3:9){
ms_form[[i]] <- try(Rceattle::fit_mod(data_list = BS2017MS,
inits = ms_run$estimated_params, # Initial parameters from single species ests
file = NULL, # Don't save
debug = 0, # Estimate
niter = 3, # 10 iterations around population and predation dynamics
random_rec = FALSE, # No random recruitment
msmMode = i, # MSVPA based
suitMode = 1, # empirical suitability
verbose = 2))
}
# Try estimating
BS2017MS$est_M1 <- rep(1,3)
ms_suit <- list()
for(i in 1:4){
ms_suit[[i]] <- list()
for(j in 3:9){
ms_suit[[i]][[j]] <- try(Rceattle::fit_mod(data_list = BS2017MS,
inits = ss_run$estimated_params, # Initial parameters from single species ests
file = NULL, # Don't save
debug = 0, # Estimate
niter = 3, # 10 iterations around population and predation dynamics
random_rec = FALSE, # No random recruitment
msmMode = i, # MSVPA based
suitMode = j, # empirical suitability
verbose = 1))
}
}
library(Rceattle)
library(Rceattle)
################################################
# Data
################################################
# Example
# To run the 2017 single species assessment for the Bering Sea, a data file must first be loaded:
data(BS2017SS) # ?BS2017SS for more information on the data
BS2017SS$est_M1 <- c(0,0,0)
################################################
# Estimation
################################################
# Then the model can be fit by setting `msmMode = 0` using the `Rceattle` function:
BS2017SS$fleet_control$proj_F_prop <- c(rep(1,3), rep(0,4))
BS2017SS$projyr = 2100
ss_run <- Rceattle::fit_mod(data_list = BS2017SS,
inits = NULL, # Initial parameters = 0
file = "EBS_ss_run", # Don't save
debug = 0, # Estimate
random_rec = FALSE, # No random recruitment
msmMode = 0, # Single species mode
phase = "default",
verbose = 1)
data("EBS_ss_run")
plot_biomass(list(EBS_ss_run, ss_run))
data("BS2017MS")
data("EBS_ms_run")
load("~/GitHub/Rceattle/EBS_ms_run_1iter.RData")
BS2017MS$projyr = 2100
inits <- mod_objects$estimated_params
inits$log_gam_a <- ss_run$estimated_params$log_gam_a
inits$log_gam_b <- ss_run$estimated_params$log_gam_b
inits$log_phi <- ss_run$estimated_params$log_phi
inits$logH_1 <- ss_run$estimated_params$logH_1
inits$logH_1a <- ss_run$estimated_params$logH_1a
inits$logH_1b <- ss_run$estimated_params$logH_1b
inits$logH_2 <- ss_run$estimated_params$logH_2
inits$logH_3 <- ss_run$estimated_params$logH_3
inits$H_4 <- ss_run$estimated_params$H_4
ms_run <- Rceattle::fit_mod(data_list = BS2017MS,
inits = ss_run$estimated_params, # Initial parameters from single species ests
file = NULL, # Don't save
debug = 0, # Estimate
niter = 3, # 10 iterations around population and predation dynamics
random_rec = FALSE, # No random recruitment
msmMode = 1, # MSVPA based
suitMode = 0, # empirical suitability
verbose = 1)
# Try estimating
BS2017MS$est_M1 <- rep(1,3)
ms_suit <- list()
for(i in 1:4){
ms_suit[[i]] <- list()
for(j in 3:9){
ms_suit[[i]][[j]] <- try(Rceattle::fit_mod(data_list = BS2017MS,
inits = ss_run$estimated_params, # Initial parameters from single species ests
file = NULL, # Don't save
debug = 0, # Estimate
niter = 3, # 10 iterations around population and predation dynamics
random_rec = FALSE, # No random recruitment
msmMode = i, # MSVPA based
suitMode = j, # empirical suitability
verbose = 1))
}
}
plot_biomass(ms_suit[[1]][3:9])
ms_suit[[1]][3:9]
class(ms_suit[[1]][3:9])
sapply(ms_suit[[1]][3:9], class)
plot_biomass(ms_suit[[1]][5:9])
sapply(ms_suit[[2]][3:9], class)
sapply(ms_suit[[3]][3:9], class)
sapply(ms_suit[[4]][3:9], class)
plot_biomass(c(list(ss_run),ms_suit[[1]][5:9], ms_suit[[2]][5:9]))
plot_biomass(c(list(ss_run, ms_run),ms_suit[[1]][5:9], ms_suit[[2]][5:9]))
# Try estimating
BS2017MS$est_M1 <- rep(0,3)
ms_suit <- list()
for(i in 1:4){
ms_suit[[i]] <- list()
for(j in 3:9){
ms_suit[[i]][[j]] <- try(Rceattle::fit_mod(data_list = BS2017MS,
inits = ss_run$estimated_params, # Initial parameters from single species ests
file = NULL, # Don't save
debug = 0, # Estimate
niter = 3, # 10 iterations around population and predation dynamics
random_rec = FALSE, # No random recruitment
msmMode = i, # MSVPA based
suitMode = j, # empirical suitability
verbose = 1))
}
}
i
j
for(i in 1:4){
print(sapply(ms_suit[[i]],class))}
plot_biomass(c(list(ss_run),ms_suit[[1]][5:9], ms_suit[[2]][5:9]))
plot_biomass(c(list(ms_run),ms_suit[[1]][5:9], ms_suit[[2]][5:9]))
plot_biomass(c(list(ss_run),ms_suit[[1]][5:9], ms_suit[[2]][5:9], ms_suit[[3]][5:9], ms_suit[[4]][5:9]))
for(i in 1:4){
ms_suit[[i]] <- list()
for(j in 1:2){
ms_suit[[i]][[j]] <- try(Rceattle::fit_mod(data_list = BS2017MS,
inits = ss_run$estimated_params, # Initial parameters from single species ests
file = NULL, # Don't save
debug = 0, # Estimate
niter = 3, # 10 iterations around population and predation dynamics
random_rec = FALSE, # No random recruitment
msmMode = i, # MSVPA based
suitMode = j, # empirical suitability
verbose = 1))
}
}
for(i in 1:4){
print(sapply(ms_suit[[i]],class))}
