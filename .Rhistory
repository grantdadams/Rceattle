msmMode = 0, # Single species mode
phase = "default",
verbose = 1)
# For the a multispecies model starting from the single species parameters, the following can be specified to load the data:
data("BS2017MS") # Note: the only difference is the residual mortality (M1_base) is lower
BS2017MS$est_M1 <- c(1,1,1)
BS2017MS$projyr <- 2060
ms_run <- Rceattle::fit_mod(data_list = BS2017MS,
inits = ss_run_M$estimated_params, # Initial parameters from single species ests
file = NULL, # Don't save
debug = 0, # Estimate
niter = 3, # 10 iterations around population and predation dynamics
random_rec = FALSE, # No random recruitment
msmMode = 1, # MSVPA based
suitMode = 0, # empirical suitability
verbose = 1)
# We can plot both runs as well:
mod_list <- list(ss_run, ms_run)
mod_names <- c("SS", "MS")
# Plot biomass trajectory
plot_biomass(Rceattle = mod_list, model_names = mod_names)
plot_recruitment(Rceattle = mod_list, model_names = mod_names, add_ci = TRUE)
plot_selectivity(Rceattle = mod_list, model_names = mod_names)
mydata$fleet_control$Selectivity
mydata$fleet_control$Selectivity[1] = 5
ss_run2 <- Rceattle::fit_mod(data_list = mydata,
inits = NULL, # Initial parameters = 0
file = NULL, # Don't save
debug = FALSE, # Estimate
random_rec = FALSE, # No random recruitment
msmMode = 0, # Single species mode
phase = "default",
verbose = 1)
ss_run2 <- Rceattle::fit_mod(data_list = mydata,
inits = NULL, # Initial parameters = 0
file = NULL, # Don't save
debug = FALSE, # Estimate
random_rec = FALSE, # No random recruitment
msmMode = 0, # Single species mode
phase = "default",
verbose = 2)
mydata$fleet_control
mydata$fleet_control$Selectivity[1] = 5
mydata$fleet_control$Time_varying_sel [1] = 0
mydata$fleet_control$Sel_sd_prior[1] = NA
ss_run2 <- Rceattle::fit_mod(data_list = mydata,
inits = NULL, # Initial parameters = 0
file = NULL, # Don't save
debug = FALSE, # Estimate
random_rec = FALSE, # No random recruitment
msmMode = 0, # Single species mode
phase = "default",
verbose = 2)
# The you can plot the model results using using
plot_biomass(Rceattle =  ss_run2, incl_proj = T)
# The you can plot the model results using using
plot_biomass(Rceattle =  ss_run2, incl_proj = T)
# The you can plot the model results using using
plot_biomass(Rceattle =  list(ss_run,ss_run2), incl_proj = F)
NA == NA
NA %in% NA
NA %in% c(NA,0)
devtools::document()
library(Rceattle)
library(Rceattle)
library(Rceattle)
library(Rceattle)
library(Rceattle)
library(Rceattle)
library(Rceattle)
library(Rceattle)
library(Rceattle)
devtools::document()
data(BS2017SS) # ?BS2017SS for more information on the data
ss_run <- Rceattle::fit_mod(data_list = BS2017SS,
inits = NULL, # Initial parameters = 0
file = NULL, # Don't save
debug = 1, # Estimate
random_rec = FALSE, # No random recruitment
msmMode = 0, # Single species mode
verbose = 0)
expect_equal(round(ss_run$quantities$biomassSSB[1,10],4), 164.4717)
library(testthat)
testthat::expect_equal(round(ss_run$quantities$biomassSSB[1,10],4), 164.4717)
testthat::expect_equal(round(ss_run$quantities$biomassSSB[2,10],4), 553.5195)
testthat::expect_equal(round(ss_run$quantities$biomassSSB[3,10],4), 578.1277)
testthat::expect_equal(round(ss_run$quantities$biomassSSB[3,10],4), 1)
data(BS2017SS) # ?BS2017SS for more information on the data
ms_run <- Rceattle::fit_mod(data_list = BS2017SS,
inits = NULL, # Initial parameters = 0
file = NULL, # Don't save
debug = 1, # Estimate
random_rec = FALSE, # No random recruitment
msmMode = 1, # Single species mode
niter = 3,
verbose = 0)
testthat::expect_equal(round(ms_run$quantities$biomassSSB[1,2],4), 84.7607)
testthat::expect_equal(round(ms_run$quantities$biomassSSB[2,2],4), 6434.2652)
testthat::expect_equal(round(ms_run$quantities$biomassSSB[3,2],4), 11153.5178)
data(BS2017SS) # ?BS2017SS for more information on the data
ms_run <- Rceattle::fit_mod(data_list = BS2017SS,
inits = NULL, # Initial parameters = 0
file = NULL, # Don't save
debug = 1, # Estimate
random_rec = FALSE, # No random recruitment
msmMode = 1, # Single species mode
niter = 3,
verbose = 0)
testthat::expect_equal(round(ms_run$quantities$biomassSSB[1,2],4), 84.7607)
testthat::expect_equal(round(ms_run$quantities$biomassSSB[2,2],4), 6434.2652)
round(ms_run$quantities$biomassSSB[2,2],4)
round(ms_run$quantities$biomassSSB[3,2],4)
testthat::expect_equal(round(ms_run$quantities$biomassSSB[3,2],4), 11153.5178)
library(Rceattle)
library(Rceattle)
library(Rceattle)
library(Rceattle)
library(Rceattle)
library(Rceattle)
################################################
# Data
################################################
# Example
# To run the 2017 single species assessment for the Bering Sea, a data file must first be loaded:
data(BS2017SS) # ?BS2017SS for more information on the data
BS2017SS$projyr <- 2030
# Write data to excel
Rceattle::write_data(data_list = BS2017SS, file = "BS2017SS.xlsx")
# Change the data how you want in excel
# Read the data back in
mydata <- Rceattle::read_data( file = "BS2017SS.xlsx")
mydata$est_M1 <- c(0,0,0)
################################################
# Estimation
################################################
# Then the model can be fit by setting `msmMode = 0` using the `Rceattle` function:
mydata$projyr <- 2100
mydata$fleet_control$proj_F_prop <- c(rep(1,3), rep(0,4))
ss_run2 <- Rceattle::fit_mod(data_list = mydata,
inits = NULL, # Initial parameters = 0
file = "ss_run", # Don't save
debug = FALSE, # Estimate
random_rec = FALSE, # No random recruitment
msmMode = 0, # Single species mode
phase = "default",
verbose = 1)
load("~/GitHub/Rceattle/ss_run.RData")
plot_biomass(list(ss_run2, ss_run))
plot_biomass(list(ss_run2, mod_objects))
library(Rceattle)
library(Rceattle)
library(Rceattle)
# To run the 2017 single species assessment for the Bering Sea, a data file must first be loaded:
data(BS2017SS) # ?BS2017SS for more information on the data
BS2017SS$fleet_control
install.packages("rmarkdown")
library(Rceattle)
################################################
# Data
################################################
# Example
# To run the 2017 single species assessment for the Bering Sea, a data file must first be loaded:
data(BS2017SS) # ?BS2017SS for more information on the data
BS2017SS$projyr <- 2030
# Write data to excel
Rceattle::write_data(data_list = BS2017SS, file = "BS2017SS.xlsx")
# Change the data how you want in excel
# Read the data back in
mydata <- Rceattle::read_data( file = "BS2017SS.xlsx")
mydata$est_M1 <- c(0,0,0)
################################################
# Estimation
################################################
# Then the model can be fit by setting `msmMode = 0` using the `Rceattle` function:
mydata$projyr <- 2100
mydata$fleet_control$proj_F_prop <- c(rep(1,3), rep(0,4))
ss_run <- Rceattle::fit_mod(data_list = mydata,
inits = NULL, # Initial parameters = 0
file = NULL, # Don't save
debug = FALSE, # Estimate
random_rec = FALSE, # No random recruitment
msmMode = 0, # Single species mode
phase = "default",
verbose = 1)
# Estimate M
mydata_M <- mydata
mydata_M$est_M1 <- c(1,1,1)
ss_run_M <- Rceattle::fit_mod(data_list = mydata_M,
inits = ss_run$estimated_params, # Initial parameters = 0
file = NULL, # Don't save
debug = FALSE, # Estimate
random_rec = FALSE, # No random recruitment
msmMode = 0, # Single species mode
phase = "default",
verbose = 1)
# The you can plot the model results using using
plot_biomass(Rceattle =  list(ss_run, ss_run_M), model_names = c("Fixed M", "Est M"), line_col = c(1,2))
plot_recruitment(Rceattle =  list(ss_run, ss_run_M), add_ci = TRUE)
plot_catch(Rceattle =  ss_run, incl_proj = T)
# For the a multispecies model starting from the single species parameters, the following can be specified to load the data:
data("BS2017MS") # Note: the only difference is the residual mortality (M1_base) is lower
BS2017MS$est_M1 <- c(1,1,1) # Estimate residual M
ms_run <- Rceattle::fit_mod(data_list = BS2017MS,
inits = ss_run_M$estimated_params, # Initial parameters from single species ests
file = NULL, # Don't save
debug = 0, # Estimate
niter = 3, # 10 iterations around population and predation dynamics
random_rec = FALSE, # No random recruitment
msmMode = 1, # MSVPA based
suitMode = 0, # empirical suitability
verbose = 1)
library(Rceattle)
library(Rceattle)
library(Rceattle)
library(Rceattle)
################################################
# Data
################################################
# Example
# To run the 2017 single species assessment for the Bering Sea, a data file must first be loaded:
data(BS2017SS) # ?BS2017SS for more information on the data
BS2017SS$projyr <- 2030
# Write data to excel
Rceattle::write_data(data_list = BS2017SS, file = "BS2017SS.xlsx")
# Change the data how you want in excel
# Read the data back in
mydata <- Rceattle::read_data( file = "BS2017SS.xlsx")
mydata$est_M1 <- c(0,0,0)
################################################
# Estimation
################################################
# Then the model can be fit by setting `msmMode = 0` using the `Rceattle` function:
mydata$projyr <- 2100
mydata$fleet_control$proj_F_prop <- c(rep(1,3), rep(0,4))
ss_run <- Rceattle::fit_mod(data_list = mydata,
inits = NULL, # Initial parameters = 0
file = NULL, # Don't save
debug = FALSE, # Estimate
random_rec = FALSE, # No random recruitment
msmMode = 0, # Single species mode
phase = "default",
verbose = 1)
library(Rceattle)
library(Rceattle)
################################################
# Data
################################################
# Example
# To run the 2017 single species assessment for the Bering Sea, a data file must first be loaded:
data(BS2017SS) # ?BS2017SS for more information on the data
BS2017SS$projyr <- 2030
# Write data to excel
Rceattle::write_data(data_list = BS2017SS, file = "BS2017SS.xlsx")
# Change the data how you want in excel
# Read the data back in
mydata <- Rceattle::read_data( file = "BS2017SS.xlsx")
mydata$est_M1 <- c(0,0,0)
################################################
# Estimation
################################################
# Then the model can be fit by setting `msmMode = 0` using the `Rceattle` function:
mydata$projyr <- 2100
mydata$fleet_control$proj_F_prop <- c(rep(1,3), rep(0,4))
ss_run <- Rceattle::fit_mod(data_list = mydata,
inits = NULL, # Initial parameters = 0
file = NULL, # Don't save
debug = FALSE, # Estimate
random_rec = FALSE, # No random recruitment
msmMode = 0, # Single species mode
phase = "default",
verbose = 1)
ss_run <- Rceattle::fit_mod(data_list = mydata,
inits = NULL, # Initial parameters = 0
file = NULL, # Don't save
debug = 1, # Estimate
random_rec = FALSE, # No random recruitment
msmMode = 0, # Single species mode
phase = FALSE,
verbose = 1)
names(ss_run$obj$par)
unique(names(ss_run$obj$par))
unique(names(ss_run$obj$parlist()))
unique(names(ss_run$obj$parList()))
names(ss_run$obj$env$parList())
library(Rceattle)
library(Rceattle)
################################################
# Data
################################################
# Example
# To run the 2017 single species assessment for the Bering Sea, a data file must first be loaded:
data(BS2017SS) # ?BS2017SS for more information on the data
BS2017SS$projyr <- 2030
# Write data to excel
Rceattle::write_data(data_list = BS2017SS, file = "BS2017SS.xlsx")
# Change the data how you want in excel
# Read the data back in
mydata <- Rceattle::read_data( file = "BS2017SS.xlsx")
mydata$est_M1 <- c(0,0,0)
################################################
# Estimation
################################################
# Then the model can be fit by setting `msmMode = 0` using the `Rceattle` function:
mydata$projyr <- 2100
mydata$fleet_control$proj_F_prop <- c(rep(1,3), rep(0,4))
ss_run <- Rceattle::fit_mod(data_list = mydata,
inits = NULL, # Initial parameters = 0
file = NULL, # Don't save
debug = 0, # Estimate
random_rec = FALSE, # No random recruitment
msmMode = 0, # Single species mode
phase = "default",
verbose = 1)
ss_run <- Rceattle::fit_mod(data_list = mydata,
inits = NULL, # Initial parameters = 0
file = NULL, # Don't save
debug = 1, # Estimate
random_rec = FALSE, # No random recruitment
msmMode = 0, # Single species mode
phase = "default",
verbose = 1)
ss_run$quantities$jnll_comp
ss_run$quantities$jnll_comp
ss_run$quantities$sel[1:3,1,,1]
ss_run$quantities$sel[1:3,1,,2]
ss_run$quantities$sel[1:3,2,,2]
plot_biomass(ss_run)
plot_b_eaten(ss_run)
ss_run$quantities$M2
sum(ss_run$quantities$M2)
ss_run$quantities$M2
ss_run$quantities$jnll_comp
plot_catch(ss_run)
ss_run$estimated_params$F_dev
ss_run$estimated_params$ln_mean_F
exp(ss_run$estimated_params$ln_mean_F)
ss_run$quantities$F[1:3,1,,2]
ss_run$quantities$F[1:3,1,,]
ss_run$quantities$F[1:3,1,,1]
mydata$nages
ss_run$quantities$M[1:3,1,,1]
ss_run$quantities$M2[1:3,1,,1]
ss_run$quantities$M[1:3,1,,1]
ss_run$quantities$M[1:3,1,,]
sum(ss_run$quantities$M[1:3,1,,])
ss_run$quantities$Zed[1:3,1,,]
sum(ss_run$quantities$Zed[1:3,1,,])
sum(ss_run$quantities$S[1:3,1,,])
sum(ss_run$quantities$Nbyaga[1:3,1,,])
sum(ss_run$quantities$Nbyage[1:3,1,,])
dim(ss_run$quantities$Nbyage)
ss_run$quantities$Nbyage
ss_run$quantities$Nbyage[1,]
ss_run$quantities$Nbyage[1,,]
ss_run$quantities$Nbyage[1,,,]
dim(ss_run$quantities$R)
ss_run$quantities$R
ss_run$quantities$comp_n
ss_run$quantities$comp_hat
which(is.null(rowSums(ss_run$quantities$comp_hat)))
which(is.na(rowSums(ss_run$quantities$comp_hat)))
check <- which(is.na(rowSums(ss_run$quantities$comp_hat)))
check
mydata$comp_data[check,]
mydata$comp_data$Species[check]
ss_run$quantities$NByage
dim(ss_run$quantities$NByage)
sum(ss_run$quantities$NByage)
ss_run$quantities$Nbyage[1,,]
ss_run$quantities$Nbyage[1,,,]
ss_run$quantities$NByage[1,,,]
ss_run$quantities$fsh_bio_hat
ss_run$quantities$fsh_bio_obs
ss_run$data_list$fsh_bio_obs
ss_run$data_list$fsh_biom
sum(ss_run$quantities$F)
sum(ss_run$quantities$Zed)
sum(1-exp(-ss_run$quantities$Zed)))
sum(1-exp(-ss_run$quantities$Zed))
sum(ss_run$quantities$NByage)
sum(ss_run$quantities$flt_wt_index)
ss_run$quantities$flt_wt_index
ss_run$quantities$F[1:3,,,]/ss_run$quantities$Zed * (1-exp(-ss_run$quantities$Zed))*ss_run$quantities$NByage
sum(ss_run$quantities$F[1:3,,,]/ss_run$quantities$Zed * (1-exp(-ss_run$quantities$Zed))*ss_run$quantities$NByage)
sum(ss_run$quantities$F[1:3,,,]/ss_run$quantities$Zed * (1-exp(-ss_run$quantities$Zed)))
sum(ss_run$quantities$F[1:3,,,] * (1-exp(-ss_run$quantities$Zed)))
ss_run$quantities$Zed[1,1,1:12,]
sum(ss_run$quantities$Zed[1,1,1:12,])
sum(ss_run$quantities$Zed[1,1,1:12,1:42])
sum(ss_run$quantities$Zed[2,1,1:12,1:42])
sum(ss_run$quantities$Zed[3,,1:12,1:42])
sum(which(ss_run$quantities$Zed[3,,1:12,1:42] == 0))
sum(which(ss_run$quantities$Zed[1,1,1:12,1:42] == 0))
sum(which(ss_run$quantities$Zed[2,1,1:12,1:42] == 0))
sum(1/ss_run$quantities$Zed[3,,1:12,1:42])
sum(1/ss_run$quantities$Zed[3,,1:21,1:42])
sum(1/ss_run$quantities$Zed[3,,1:21,1:41])
sum(1/ss_run$quantities$Zed[3,,1:21,1:39])
sum(1/ss_run$quantities$Zed[3,,1:21,1:30])
sum(1/ss_run$quantities$Zed[3,1:2,1:21,1:30])
sum(1/ss_run$quantities$Zed[2,1,1:12,1:30])
sum(1/ss_run$quantities$Zed[1,1,1:12,1:30])
sum(1/ss_run$quantities$Zed[1,1,1:12,1:42])
sum(1/ss_run$quantities$Zed[2,1,1:12,1:42])
sum(ss_run$quantities$F[1,1,1:12,1:42]/ss_run$quantities$Zed[1,1,1:12,1:42] * (1-exp(-ss_run$quantities$Zed[1,1,1:12,1:42]))*ss_run$quantities$NByage[1,1,1:12,1:42])
sum(ss_run$quantities$F[2,1,1:12,1:42]/ss_run$quantities$Zed[2,1,1:12,1:42] * (1-exp(-ss_run$quantities$Zed[2,1,1:12,1:42]))*ss_run$quantities$NByage[2,1,1:12,1:42])
ss_run$quantities$Zed[3,1,,1]
ss_run$quantities$Zed[3,1,,2]
ss_run$quantities$Zed[3,1,,]
ss_run$quantities$Zed[3,1,,1:42]
ss_run$quantities$Zed[3,2,,1:42]
ss_run$quantities$M1
ss_run$quantities$M1[3,,]
ss_run$quantities$F[3,2,,1:42]
ss_run$data_list$nsex
library(Rceattle)
# To run the 2017 single species assessment for the Bering Sea, a data file must first be loaded:
data(BS2017SS) # ?BS2017SS for more information on the data
BS2017SS$projyr <- 2030
# Write data to excel
Rceattle::write_data(data_list = BS2017SS, file = "BS2017SS.xlsx")
# Change the data how you want in excel
# Read the data back in
mydata <- Rceattle::read_data( file = "BS2017SS.xlsx")
mydata$est_M1 <- c(0,0,0)
################################################
# Estimation
################################################
# Then the model can be fit by setting `msmMode = 0` using the `Rceattle` function:
mydata$projyr <- 2100
mydata$fleet_control$proj_F_prop <- c(rep(1,3), rep(0,4))
ss_run <- Rceattle::fit_mod(data_list = mydata,
inits = NULL, # Initial parameters = 0
file = NULL, # Don't save
debug = 1, # Estimate
random_rec = FALSE, # No random recruitment
msmMode = 0, # Single species mode
phase = "default",
verbose = 1)
ss_run$quantities$jnll_comp
library(Rceattle)
library(Rceattle)
################################################
# Data
################################################
# Example
# To run the 2017 single species assessment for the Bering Sea, a data file must first be loaded:
data(BS2017SS) # ?BS2017SS for more information on the data
BS2017SS$projyr <- 2030
# Write data to excel
Rceattle::write_data(data_list = BS2017SS, file = "BS2017SS.xlsx")
# Change the data how you want in excel
# Read the data back in
mydata <- Rceattle::read_data( file = "BS2017SS.xlsx")
mydata$est_M1 <- c(0,0,0)
################################################
# Estimation
################################################
# Then the model can be fit by setting `msmMode = 0` using the `Rceattle` function:
mydata$projyr <- 2100
mydata$fleet_control$proj_F_prop <- c(rep(1,3), rep(0,4))
ss_run <- Rceattle::fit_mod(data_list = mydata,
inits = NULL, # Initial parameters = 0
file = NULL, # Don't save
debug = 1, # Estimate
random_rec = FALSE, # No random recruitment
msmMode = 0, # Single species mode
phase = "default",
verbose = 1)
ss_run$quantities$jnll_comp
ss_run$quantities$sel_curve_pen
ss_run$estimated_params$sel_curve_pen
ss_run$estimated_params$sel[1:2,1,1:12,1]
ss_run$quantities$sel[1:2,1,1:12,1]
ss_run$quantities$sel[3,1,1:21,1]
ss_run$quantities$sel[3,1,1:21,]
ss_run$quantities$sel[1:2,1,1:12,]
ss_run$quantities$jnll_comp
library(Rceattle)
library(Rceattle)
################################################
# Data
################################################
# Example
# To run the 2017 single species assessment for the Bering Sea, a data file must first be loaded:
data(BS2017SS) # ?BS2017SS for more information on the data
BS2017SS$projyr <- 2030
# Write data to excel
Rceattle::write_data(data_list = BS2017SS, file = "BS2017SS.xlsx")
# Change the data how you want in excel
# Read the data back in
mydata <- Rceattle::read_data( file = "BS2017SS.xlsx")
mydata$est_M1 <- c(0,0,0)
################################################
# Estimation
################################################
# Then the model can be fit by setting `msmMode = 0` using the `Rceattle` function:
mydata$projyr <- 2100
mydata$fleet_control$proj_F_prop <- c(rep(1,3), rep(0,4))
ss_run <- Rceattle::fit_mod(data_list = mydata,
inits = NULL, # Initial parameters = 0
file = NULL, # Don't save
debug = 1, # Estimate
random_rec = FALSE, # No random recruitment
msmMode = 0, # Single species mode
phase = "default",
verbose = 1)
ss_run$quantities$jnll_comp
devtools::document()
devtools::build_vignettes()
devtools::build_vignettes()
library(Rceattle)
