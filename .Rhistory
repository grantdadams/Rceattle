file = NULL, # Don't save
estimateMode = 0, # Estimate hindcast only
niter = 3, # 10 iterations around population and predation dynamics
random_rec = FALSE, # No random recruitment
HCR = build_hcr(HCR = 3, # Constant F HCR
DynamicHCR = FALSE, # Use dynamic reference points
FsprTarget = 0.4,
HCRorder = c(2,1,1)), # F that achieves 40% SB0
msmMode = 1, # MSVPA based
suitMode = 0, # empirical suitability
verbose = 1)
# -- Multi-species CMSY
ms_run_cmsy <- Rceattle::fit_mod(data_list = BS2017MS,
inits = ss_run_M$estimated_params, # Initial parameters from single species ests
file = NULL, # Don't save
estimateMode = 0, # Estimate hindcast only
niter = 3, # 10 iterations around population and predation dynamics
random_rec = FALSE, # No random recruitment
HCR = build_hcr(HCR = 1),
msmMode = 1, # MSVPA based
suitMode = 0, # empirical suitability
verbose = 1)
# -- Multi-species CMSY, constrained so that species don't fall below 20% SB0
# -- SB0 is derived from projecting all species simultaneously under no fishing
ms_run_concmsy <- Rceattle::fit_mod(data_list = BS2017MS,
inits = ss_run_M$estimated_params, # Initial parameters from single species ests
file = NULL, # Don't save
estimateMode = 0, # Estimate hindcast only
niter = 3, # 10 iterations around population and predation dynamics
random_rec = FALSE, # No random recruitment
HCR = build_hcr(HCR = 1,
Plimit = 0.2),
msmMode = 1, # MSVPA based
suitMode = 0, # empirical suitability
verbose = 1)
# -- Plot
mod_list <- list(ms_run_fb40, ms_run_fb40iter, ms_run_cmsy, ms_run_concmsy)
model_names <- c("F40","F40 - iter", "MS-CMSY", "Constrained CMSY")
plot_biomass(mod_list, model_names = model_names, incl_proj = TRUE)
plot_ssb(mod_list, model_names = model_names, incl_proj = TRUE)
plot_recruitment(mod_list, model_names = model_names, incl_proj = TRUE)
plot_catch(mod_list, model_names = model_names, incl_proj = TRUE)
devtools::document()
library(Rceattle)
library(Rceattle)
library(Rceattle)
################################################
# Data
################################################
# Example
# To run the 2017 single species assessment for the Bering Sea, a data file must first be loaded:
data(BS2017SS) # ?BS2017SS for more information on the data
BS2017SS$projyr <- 2060
# Write data to excel
Rceattle::write_data(data_list = BS2017SS, file = "BS2017SS.xlsx")
# Change the data how you want in excel
# Read the data back in
mydata <- Rceattle::read_data( file = "BS2017SS.xlsx")
################################################
# Estimation
################################################
# Then the model can be fit by setting `msmMode = 0` using the `Rceattle` function:
mydata$fleet_control$proj_F_prop <-rep(1,7)
ss_run <- Rceattle::fit_mod(data_list = mydata,
inits = NULL, # Initial parameters = 0
file = NULL, # Don't save
estimateMode = 1, # Estimate hindcast only
random_rec = FALSE, # No random recruitment
msmMode = 0, # Single species mode
phase = "default",
verbose = 1)
library(Rceattle)
install.packages(c("BH", "bookdown", "brew", "brio", "bslib", "checkmate", "cli", "cowplot", "cpp11", "crosstalk", "curl", "data.table", "DBI", "dbplyr", "desc", "digest", "dplyr", "DT", "e1071", "evaluate", "fansi", "gdtools", "gert", "ggridges", "ggthemes", "glue", "gtools", "haven", "htmltools", "htmlwidgets", "httpuv", "httr2", "igraph", "jsonlite", "knitr", "later", "magick", "markdown", "matrixStats", "mvtnorm", "ncdf4", "oce", "patchwork", "pkgbuild", "posterior", "pracma", "processx", "progress", "QuickJSR", "ragg", "Rcpp", "RcppArmadillo", "RcppEigen", "readr", "reprex", "rjags", "rlang", "RNetCDF", "roxygen2", "rstan", "s2", "sass", "scales", "sf", "sp", "StanHeaders", "stringi", "svglite", "tensorA", "terra", "testthat", "timeDate", "tinytex", "TMB", "tseries", "TTR", "units", "vctrs", "vroom", "waldo", "wk", "xfun", "xml2", "yaml"))
install.packages(c("BH", "bookdown", "brew", "brio", "bslib", "checkmate", "cli", "cowplot", "cpp11", "crosstalk", "curl", "data.table", "DBI", "dbplyr", "desc", "digest", "dplyr", "DT", "e1071", "evaluate", "fansi", "gdtools", "gert", "ggridges", "ggthemes", "glue", "gtools", "haven", "htmltools", "htmlwidgets", "httpuv", "httr2", "igraph", "jsonlite", "knitr", "later", "magick", "markdown", "matrixStats", "mvtnorm", "ncdf4", "oce", "patchwork", "pkgbuild", "posterior", "pracma", "processx", "progress", "QuickJSR", "ragg", "Rcpp", "RcppArmadillo", "RcppEigen", "readr", "reprex", "rjags", "rlang", "RNetCDF", "roxygen2", "rstan", "s2", "sass", "scales", "sf", "sp", "StanHeaders", "stringi", "svglite", "tensorA", "terra", "testthat", "timeDate", "tinytex", "TMB", "tseries", "TTR", "units", "vctrs", "vroom", "waldo", "wk", "xfun", "xml2", "yaml"))
install.packages(c("BH", "bookdown", "brew", "brio", "bslib", "checkmate", "cli", "cowplot", "cpp11", "crosstalk", "curl", "data.table", "DBI", "dbplyr", "desc", "digest", "dplyr", "DT", "e1071", "evaluate", "fansi", "gdtools", "gert", "ggridges", "ggthemes", "glue", "gtools", "haven", "htmltools", "htmlwidgets", "httpuv", "httr2", "igraph", "jsonlite", "knitr", "later", "magick", "markdown", "matrixStats", "mvtnorm", "ncdf4", "oce", "patchwork", "pkgbuild", "posterior", "pracma", "processx", "progress", "QuickJSR", "ragg", "Rcpp", "RcppArmadillo", "RcppEigen", "readr", "reprex", "rjags", "rlang", "RNetCDF", "roxygen2", "rstan", "s2", "sass", "scales", "sf", "sp", "StanHeaders", "stringi", "svglite", "tensorA", "terra", "testthat", "timeDate", "tinytex", "TMB", "tseries", "TTR", "units", "vctrs", "vroom", "waldo", "wk", "xfun", "xml2", "yaml"))
install.packages('TMB', type = 'source')
install.packages('TMB', type = 'source')
install.packages('TMB', type = 'source')
install.packages('TMB', type = 'source')
remove.packages("TMB")
install.packages('TMB', type = 'source')
install.packages('TMB', type = 'source')
install.packages("TMB", type = "source")
install.packages("TMB", type = "source")
install.packages("TMB", type = "source")
library(Rceattle)
library(Rceattle)
library(Rceattle)
library(Rceattle)
# Grant Adams, Kirstin Holsman, Andre Punt - April 2019
# Code to run Bering Sea CEATTLE model in TMB
# Citation:
# Holsman, K. K., Ianelli, J., Aydin, K., Punt, A. E., and Moffitt, E. A. 2015. A comparison of fisheries biological reference points estimated from temperature-specific multi-species and single-species climate-enhanced stock assessment models. Deep-Sea Research Part II: Topical Studies in Oceanography, 134: 360â€“378.
library(Rceattle)
################################################
# Data
################################################
# Example
# To run the 2017 single species assessment for the Bering Sea, a data file must first be loaded:
data("BS2017SS") # Single-species data. ?BS2017SS for more information on the data
data("BS2017MS") # Multi-species data. Note: the only difference is the residual mortality (M1_base) is lower
# Write data to excel
Rceattle::write_data(data_list = BS2017SS, file = "BS2017SS.xlsx")
# Change the data how you want in excel
# Read the data back in
mydata <- Rceattle::read_data( file = "BS2017SS.xlsx")
################################################
# Estimation
################################################
# - Single-species
# Then the model can be fit by setting `msmMode = 0` using the `Rceattle` function:
mydata$fleet_control$proj_F_prop <- c(rep(1,3), rep(0,4))
ss_run <- Rceattle::fit_mod(data_list = mydata,
inits = NULL, # Initial parameters = 0
file = NULL, # Don't save
estimateMode = 0, # Estimate
random_rec = FALSE, # No random recruitment
msmMode = 0, # Single species mode
phase = "default",
verbose = 1)
ss_run$run_time
library(Rceattle)
################################################
# Data ----
################################################
# Example
# To run the 2017 single species assessment for the Bering Sea, a data file must first be loaded:
data(BS2017SS) # ?BS2017SS for more information on the data
BS2017SS$projyr <- 2060
# Write data to excel
Rceattle::write_data(data_list = BS2017SS, file = "BS2017SS.xlsx")
# Change the data how you want in excel
# Read the data back in
mydata <- Rceattle::read_data( file = "BS2017SS.xlsx")
################################################
# Estimation ----
################################################
# Then the model can be fit by setting `msmMode = 0` using the `Rceattle` function:
mydata$fleet_control$proj_F_prop <-rep(1,7)
ss_run <- Rceattle::fit_mod(data_list = mydata,
inits = NULL, # Initial parameters = 0
file = NULL, # Don't save
estimateMode = 1, # Estimate hindcast only
random_rec = FALSE, # No random recruitment
msmMode = 0, # Single species mode
phase = "default",
verbose = 1)
# Estimate single-species and estimate M
mydata_M <- mydata
mydata_M$est_M1 <- c(1,1,1)
ss_run_M <- Rceattle::fit_mod(data_list = mydata_M,
inits = ss_run$estimated_params, # Initial parameters = 0
file = NULL, # Don't save
estimateMode = 1, # Estimate hindcast only
random_rec = FALSE, # No random recruitment
msmMode = 0, # Single species mode
phase = "default",
verbose = 1)
# For the a multispecies model starting from the single species parameters, the following can be specified to load the data:
data("BS2017MS") # Note: the only difference is the residual mortality (M1_base) is lower
BS2017MS$est_M1 <- c(1,1,1) # Estimate residual M
BS2017MS$projyr <- 2060
BS2017MS$fleet_control$proj_F_prop <-rep(1,7)
ms_run <- Rceattle::fit_mod(data_list = BS2017MS,
inits = ss_run_M$estimated_params, # Initial parameters from single species ests
file = NULL, # Don't save
estimateMode = 1, # Estimate hindcast only
niter = 3, # 10 iterations around population and predation dynamics
random_rec = FALSE, # No random recruitment
msmMode = 1, # MSVPA based
suitMode = 0, # empirical suitability
verbose = 1)
# We can plot both runs as well:
mod_list <- list(ss_run, ss_run_M, ms_run)
mod_names <- c("SS", "SS-M", "MS")
# Plot biomass trajectory
plot_biomass(Rceattle = mod_list, model_names = mod_names)
plot_recruitment(Rceattle = mod_list, model_names = mod_names, add_ci = TRUE)
################################################
# Multi-species harvest control rules ----
################################################
# -- F that acheives 40% of SB0, where SB0 is derived from projecting all species simultaneously under no fishing
ms_run_fb40 <- Rceattle::fit_mod(data_list = BS2017MS,
inits = ss_run_M$estimated_params, # Initial parameters from single species ests
file = NULL, # Don't save
estimateMode = 0, # Estimate hindcast only
niter = 3, # 10 iterations around population and predation dynamics
random_rec = FALSE, # No random recruitment
HCR = build_hcr(HCR = 3, # Constant F HCR
DynamicHCR = FALSE, # Use dynamic reference points
FsprTarget = 0.4), # F that achieves 40% SB0
msmMode = 1, # MSVPA based
suitMode = 0, # empirical suitability
verbose = 1)
ms_run_fb40$run_time
library(Rceattle)
library(Rceattle)
library(Rceattle)
################################################
# Data ----
################################################
# Example
# To run the 2017 single species assessment for the Bering Sea, a data file must first be loaded:
data(BS2017SS) # ?BS2017SS for more information on the data
BS2017SS$projyr <- 2060
mydata$fleet_control$proj_F_prop <-rep(1,7)
library(Rceattle)
################################################
# Data ----
################################################
# Example
# To run the 2017 single species assessment for the Bering Sea, a data file must first be loaded:
data(BS2017SS) # ?BS2017SS for more information on the data
BS2017SS$projyr <- 2060
BS2017SS$fleet_control$proj_F_prop <-rep(1,7)
################################################
# Estimation ----
################################################
# Then the model can be fit by setting `msmMode = 0` using the `Rceattle` function:
ss_run <- Rceattle::fit_mod(data_list = BS2017SS,
inits = NULL, # Initial parameters = 0
file = NULL, # Don't save
estimateMode = 1, # Estimate hindcast only
random_rec = FALSE, # No random recruitment
msmMode = 0, # Single species mode
phase = "default",
verbose = 1)
# Estimate single-species and estimate M
mydata_M <- BS2017SS
mydata_M$est_M1 <- c(1,1,1)
ss_run_M <- Rceattle::fit_mod(data_list = mydata_M,
inits = ss_run$estimated_params, # Initial parameters = 0
file = NULL, # Don't save
estimateMode = 1, # Estimate hindcast only
random_rec = FALSE, # No random recruitment
msmMode = 0, # Single species mode
phase = "default",
verbose = 1)
# For the a multispecies model starting from the single species parameters, the following can be specified to load the data:
data("BS2017MS") # Note: the only difference is the residual mortality (M1_base) is lower
BS2017MS$est_M1 <- c(1,1,1) # Estimate residual M
BS2017MS$projyr <- 2060
BS2017MS$fleet_control$proj_F_prop <-rep(1,7)
ms_run <- Rceattle::fit_mod(data_list = BS2017MS,
inits = ss_run_M$estimated_params, # Initial parameters from single species ests
file = NULL, # Don't save
estimateMode = 1, # Estimate hindcast only
niter = 3, # 10 iterations around population and predation dynamics
random_rec = FALSE, # No random recruitment
msmMode = 1, # MSVPA based
suitMode = 0, # empirical suitability
verbose = 1)
# We can plot both runs as well:
mod_list <- list(ss_run, ss_run_M, ms_run)
mod_names <- c("SS", "SS-M", "MS")
# Plot biomass trajectory
plot_biomass(Rceattle = mod_list, model_names = mod_names)
plot_recruitment(Rceattle = mod_list, model_names = mod_names, add_ci = TRUE)
################################################
# Multi-species harvest control rules ----
################################################
# -- F that acheives 40% of SB0, where SB0 is derived from projecting all species simultaneously under no fishing
ms_run_fb40 <- Rceattle::fit_mod(data_list = BS2017MS,
inits = ss_run_M$estimated_params, # Initial parameters from single species ests
file = NULL, # Don't save
estimateMode = 0, # Estimate hindcast only
niter = 3, # 10 iterations around population and predation dynamics
random_rec = FALSE, # No random recruitment
HCR = build_hcr(HCR = 3, # Constant F HCR
DynamicHCR = FALSE, # Use dynamic reference points
FsprTarget = 0.4), # F that achieves 40% SB0
msmMode = 1, # MSVPA based
suitMode = 0, # empirical suitability
verbose = 1)
ms_run_fb40$run_time
ss_run$run_time
ms_run$run_time
profile()
################################################
# Multi-species harvest control rules ----
################################################
# -- F that acheives 40% of SB0, where SB0 is derived from projecting all species simultaneously under no fishing
ms_run_fb40 <- Rceattle::fit_mod(data_list = BS2017MS,
inits = ss_run_M$estimated_params, # Initial parameters from single species ests
file = NULL, # Don't save
estimateMode = 0, # Estimate hindcast only
niter = 3, # 10 iterations around population and predation dynamics
random_rec = FALSE, # No random recruitment
HCR = build_hcr(HCR = 3, # Constant F HCR
DynamicHCR = FALSE, # Use dynamic reference points
FsprTarget = 0.4), # F that achieves 40% SB0
msmMode = 1, # MSVPA based
suitMode = 0, # empirical suitability
verbose = 1)
ms_run_fb40$run_time
library(Rceattle)
library(Rceattle)
################################################
# Data ----
################################################
# Example
# To run the 2017 single species assessment for the Bering Sea, a data file must first be loaded:
data(BS2017SS) # ?BS2017SS for more information on the data
BS2017SS$projyr <- 2060
BS2017SS$fleet_control$proj_F_prop <-rep(1,7)
################################################
# Estimation ----
################################################
# Then the model can be fit by setting `msmMode = 0` using the `Rceattle` function:
ss_run <- Rceattle::fit_mod(data_list = BS2017SS,
inits = NULL, # Initial parameters = 0
file = NULL, # Don't save
estimateMode = 1, # Estimate hindcast only
random_rec = FALSE, # No random recruitment
msmMode = 0, # Single species mode
phase = "default",
verbose = 1)
# Estimate single-species and estimate M
mydata_M <- BS2017SS
mydata_M$est_M1 <- c(1,1,1)
ss_run_M <- Rceattle::fit_mod(data_list = mydata_M,
inits = ss_run$estimated_params, # Initial parameters = 0
file = NULL, # Don't save
estimateMode = 1, # Estimate hindcast only
random_rec = FALSE, # No random recruitment
msmMode = 0, # Single species mode
phase = "default",
verbose = 1)
# For the a multispecies model starting from the single species parameters, the following can be specified to load the data:
data("BS2017MS") # Note: the only difference is the residual mortality (M1_base) is lower
BS2017MS$est_M1 <- c(1,1,1) # Estimate residual M
BS2017MS$projyr <- 2060
BS2017MS$fleet_control$proj_F_prop <-rep(1,7)
ms_run <- Rceattle::fit_mod(data_list = BS2017MS,
inits = ss_run_M$estimated_params, # Initial parameters from single species ests
file = NULL, # Don't save
estimateMode = 1, # Estimate hindcast only
niter = 3, # 10 iterations around population and predation dynamics
random_rec = FALSE, # No random recruitment
msmMode = 1, # MSVPA based
suitMode = 0, # empirical suitability
verbose = 1)
# We can plot both runs as well:
mod_list <- list(ss_run, ss_run_M, ms_run)
mod_names <- c("SS", "SS-M", "MS")
# Plot biomass trajectory
plot_biomass(Rceattle = mod_list, model_names = mod_names)
plot_recruitment(Rceattle = mod_list, model_names = mod_names, add_ci = TRUE)
################################################
# Multi-species harvest control rules ----
################################################
# -- F that acheives 40% of SB0, where SB0 is derived from projecting all species simultaneously under no fishing
ms_run_fb40 <- Rceattle::fit_mod(data_list = BS2017MS,
inits = ss_run_M$estimated_params, # Initial parameters from single species ests
file = NULL, # Don't save
estimateMode = 0, # Estimate hindcast only
niter = 3, # 10 iterations around population and predation dynamics
random_rec = FALSE, # No random recruitment
HCR = build_hcr(HCR = 3, # Constant F HCR
DynamicHCR = FALSE, # Use dynamic reference points
FsprTarget = 0.4), # F that achieves 40% SB0
msmMode = 1, # MSVPA based
suitMode = 0, # empirical suitability
verbose = 1)
ms_run_fb40$run_time
library(Rceattle)
library(Rceattle)
################################################
# Data ----
################################################
# Example
# To run the 2017 single species assessment for the Bering Sea, a data file must first be loaded:
data(BS2017SS) # ?BS2017SS for more information on the data
BS2017SS$projyr <- 2060
BS2017SS$fleet_control$proj_F_prop <-rep(1,7)
################################################
# Estimation ----
################################################
# Then the model can be fit by setting `msmMode = 0` using the `Rceattle` function:
ss_run <- Rceattle::fit_mod(data_list = BS2017SS,
inits = NULL, # Initial parameters = 0
file = NULL, # Don't save
estimateMode = 1, # Estimate hindcast only
random_rec = FALSE, # No random recruitment
msmMode = 0, # Single species mode
phase = "default",
verbose = 1)
# Estimate single-species and estimate M
mydata_M <- BS2017SS
mydata_M$est_M1 <- c(1,1,1)
ss_run_M <- Rceattle::fit_mod(data_list = mydata_M,
inits = ss_run$estimated_params, # Initial parameters = 0
file = NULL, # Don't save
estimateMode = 1, # Estimate hindcast only
random_rec = FALSE, # No random recruitment
msmMode = 0, # Single species mode
phase = "default",
verbose = 1)
# For the a multispecies model starting from the single species parameters, the following can be specified to load the data:
data("BS2017MS") # Note: the only difference is the residual mortality (M1_base) is lower
BS2017MS$est_M1 <- c(1,1,1) # Estimate residual M
BS2017MS$projyr <- 2060
BS2017MS$fleet_control$proj_F_prop <-rep(1,7)
ms_run <- Rceattle::fit_mod(data_list = BS2017MS,
inits = ss_run_M$estimated_params, # Initial parameters from single species ests
file = NULL, # Don't save
estimateMode = 1, # Estimate hindcast only
niter = 3, # 10 iterations around population and predation dynamics
random_rec = FALSE, # No random recruitment
msmMode = 1, # MSVPA based
suitMode = 0, # empirical suitability
verbose = 1)
# We can plot both runs as well:
mod_list <- list(ss_run, ss_run_M, ms_run)
mod_names <- c("SS", "SS-M", "MS")
# Plot biomass trajectory
plot_biomass(Rceattle = mod_list, model_names = mod_names)
plot_recruitment(Rceattle = mod_list, model_names = mod_names, add_ci = TRUE)
################################################
# Multi-species harvest control rules ----
################################################
# -- F that acheives 40% of SB0, where SB0 is derived from projecting all species simultaneously under no fishing
ms_run_fb40 <- Rceattle::fit_mod(data_list = BS2017MS,
inits = ss_run_M$estimated_params, # Initial parameters from single species ests
file = NULL, # Don't save
estimateMode = 0, # Estimate hindcast only
niter = 3, # 10 iterations around population and predation dynamics
random_rec = FALSE, # No random recruitment
HCR = build_hcr(HCR = 3, # Constant F HCR
DynamicHCR = FALSE, # Use dynamic reference points
FsprTarget = 0.4), # F that achieves 40% SB0
msmMode = 1, # MSVPA based
suitMode = 0, # empirical suitability
verbose = 1)
ms_run_fb40$run_time
ms_run_fb40$run_time
library(Rceattle)
library(Rceattle)
################################################
# Data ----
################################################
# Example
# To run the 2017 single species assessment for the Bering Sea, a data file must first be loaded:
data(BS2017SS) # ?BS2017SS for more information on the data
BS2017SS$projyr <- 2060
BS2017SS$fleet_control$proj_F_prop <-rep(1,7)
################################################
# Estimation ----
################################################
# Then the model can be fit by setting `msmMode = 0` using the `Rceattle` function:
ss_run <- Rceattle::fit_mod(data_list = BS2017SS,
inits = NULL, # Initial parameters = 0
file = NULL, # Don't save
estimateMode = 1, # Estimate hindcast only
random_rec = FALSE, # No random recruitment
msmMode = 0, # Single species mode
phase = "default",
verbose = 1)
# Estimate single-species and estimate M
mydata_M <- BS2017SS
mydata_M$est_M1 <- c(1,1,1)
ss_run_M <- Rceattle::fit_mod(data_list = mydata_M,
inits = ss_run$estimated_params, # Initial parameters = 0
file = NULL, # Don't save
estimateMode = 1, # Estimate hindcast only
random_rec = FALSE, # No random recruitment
msmMode = 0, # Single species mode
phase = "default",
verbose = 1)
# For the a multispecies model starting from the single species parameters, the following can be specified to load the data:
data("BS2017MS") # Note: the only difference is the residual mortality (M1_base) is lower
BS2017MS$est_M1 <- c(1,1,1) # Estimate residual M
BS2017MS$projyr <- 2060
BS2017MS$fleet_control$proj_F_prop <-rep(1,7)
ms_run <- Rceattle::fit_mod(data_list = BS2017MS,
inits = ss_run_M$estimated_params, # Initial parameters from single species ests
file = NULL, # Don't save
estimateMode = 1, # Estimate hindcast only
niter = 3, # 10 iterations around population and predation dynamics
random_rec = FALSE, # No random recruitment
msmMode = 1, # MSVPA based
suitMode = 0, # empirical suitability
verbose = 1)
# We can plot both runs as well:
mod_list <- list(ss_run, ss_run_M, ms_run)
mod_names <- c("SS", "SS-M", "MS")
# Plot biomass trajectory
plot_biomass(Rceattle = mod_list, model_names = mod_names)
plot_recruitment(Rceattle = mod_list, model_names = mod_names, add_ci = TRUE)
################################################
# Multi-species harvest control rules ----
################################################
# -- F that acheives 40% of SB0, where SB0 is derived from projecting all species simultaneously under no fishing
ms_run_fb40 <- Rceattle::fit_mod(data_list = BS2017MS,
inits = ss_run_M$estimated_params, # Initial parameters from single species ests
file = NULL, # Don't save
estimateMode = 0, # Estimate hindcast only
niter = 3, # 10 iterations around population and predation dynamics
random_rec = FALSE, # No random recruitment
HCR = build_hcr(HCR = 3, # Constant F HCR
DynamicHCR = FALSE, # Use dynamic reference points
FsprTarget = 0.4), # F that achieves 40% SB0
msmMode = 1, # MSVPA based
suitMode = 0, # empirical suitability
verbose = 1)
ms_run_fb40$run_time
library(TMB)
?compile
getOption("tmb.ad.framework")
library(Rceattle)
library(Rceattle)
library(Rceattle)
